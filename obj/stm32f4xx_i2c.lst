   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 2
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"stm32f4xx_i2c.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.I2C_DeInit,"ax",%progbits
  20              		.align	2
  21              		.global	I2C_DeInit
  22              		.thumb
  23              		.thumb_func
  25              	I2C_DeInit:
  26              	.LFB110:
  27              		.file 1 "libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c"
   1:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
   2:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   ******************************************************************************
   3:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @file    stm32f4xx_i2c.c
   4:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @author  MCD Application Team
   5:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @version V1.3.0
   6:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @date    08-November-2013
   7:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief   This file provides firmware functions to manage the following 
   8:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          functionalities of the Inter-integrated circuit (I2C)
   9:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *           + Initialization and Configuration
  10:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *           + Data transfers
  11:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *           + PEC management
  12:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *           + DMA transfers management
  13:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *           + Interrupts, events and flags management 
  14:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *           
  15:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     @verbatim    
  16:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  ===============================================================================
  17:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                     ##### How to use this driver #####
  18:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  ===============================================================================
  19:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     [..]
  20:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****       (#) Enable peripheral clock using RCC_APB1PeriphClockCmd(RCC_APB1Periph_I2Cx, ENABLE)
  21:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****           function for I2C1, I2C2 or I2C3.
  22:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   
  23:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****       (#) Enable SDA, SCL  and SMBA (when used) GPIO clocks using 
  24:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****           RCC_AHBPeriphClockCmd() function. 
  25:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   
  26:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****       (#) Peripherals alternate function: 
  27:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****         (++) Connect the pin to the desired peripherals' Alternate 
  28:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****              Function (AF) using GPIO_PinAFConfig() function
  29:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****         (++) Configure the desired pin in alternate function by:
  30:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****              GPIO_InitStruct->GPIO_Mode = GPIO_Mode_AF
  31:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****         (++) Select the type, pull-up/pull-down and output speed via 
  32:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****              GPIO_PuPd, GPIO_OType and GPIO_Speed members
  33:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****         (++) Call GPIO_Init() function
  34:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****              Recommended configuration is Push-Pull, Pull-up, Open-Drain.
  35:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****              Add an external pull up if necessary (typically 4.7 KOhm).      
  36:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****           
  37:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****       (#) Program the Mode, duty cycle , Own address, Ack, Speed and Acknowledged
  38:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****           Address using the I2C_Init() function.
  39:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   
  40:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****       (#) Optionally you can enable/configure the following parameters without
  41:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****           re-initialization (i.e there is no need to call again I2C_Init() function):
  42:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****         (++) Enable the acknowledge feature using I2C_AcknowledgeConfig() function
  43:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****         (++) Enable the dual addressing mode using I2C_DualAddressCmd() function
  44:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****         (++) Enable the general call using the I2C_GeneralCallCmd() function
  45:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****         (++) Enable the clock stretching using I2C_StretchClockCmd() function
  46:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****         (++) Enable the fast mode duty cycle using the I2C_FastModeDutyCycleConfig()
  47:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****              function.
  48:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****         (++) Configure the NACK position for Master Receiver mode in case of 
  49:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****              2 bytes reception using the function I2C_NACKPositionConfig().  
  50:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****         (++) Enable the PEC Calculation using I2C_CalculatePEC() function
  51:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****         (++) For SMBus Mode: 
  52:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****           (+++) Enable the Address Resolution Protocol (ARP) using I2C_ARPCmd() function
  53:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****           (+++) Configure the SMBusAlert pin using I2C_SMBusAlertConfig() function
  54:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   
  55:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****       (#) Enable the NVIC and the corresponding interrupt using the function 
  56:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****           I2C_ITConfig() if you need to use interrupt mode. 
  57:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   
  58:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****       (#) When using the DMA mode 
  59:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****         (++) Configure the DMA using DMA_Init() function
  60:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****         (++) Active the needed channel Request using I2C_DMACmd() or
  61:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****              I2C_DMALastTransferCmd() function.
  62:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****         -@@- When using DMA mode, I2C interrupts may be used at the same time to
  63:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****              control the communication flow (Start/Stop/Ack... events and errors).
  64:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****    
  65:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****       (#) Enable the I2C using the I2C_Cmd() function.
  66:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****    
  67:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****       (#) Enable the DMA using the DMA_Cmd() function when using DMA mode in the 
  68:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****           transfers. 
  69:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   
  70:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     @endverbatim  
  71:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   ******************************************************************************
  72:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @attention
  73:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *
  74:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * <h2><center>&copy; COPYRIGHT 2013 STMicroelectronics</center></h2>
  75:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *
  76:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
  77:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * You may not use this file except in compliance with the License.
  78:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * You may obtain a copy of the License at:
  79:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *
  80:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *        http://www.st.com/software_license_agreement_liberty_v2
  81:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *
  82:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * Unless required by applicable law or agreed to in writing, software 
  83:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * distributed under the License is distributed on an "AS IS" BASIS, 
  84:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  85:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * See the License for the specific language governing permissions and
  86:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * limitations under the License.
  87:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *
  88:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   ******************************************************************************  
  89:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */ 
  90:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
  91:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /* Includes ------------------------------------------------------------------*/
  92:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** #include "stm32f4xx_i2c.h"
  93:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** #include "stm32f4xx_rcc.h"
  94:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
  95:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
  96:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @{
  97:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
  98:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
  99:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /** @defgroup I2C 
 100:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief I2C driver modules
 101:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @{
 102:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */ 
 103:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 104:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /* Private typedef -----------------------------------------------------------*/
 105:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /* Private define ------------------------------------------------------------*/
 106:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 107:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** #define CR1_CLEAR_MASK    ((uint16_t)0xFBF5)      /*<! I2C registers Masks */
 108:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** #define FLAG_MASK         ((uint32_t)0x00FFFFFF)  /*<! I2C FLAG mask */
 109:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** #define ITEN_MASK         ((uint32_t)0x07000000)  /*<! I2C Interrupt Enable mask */
 110:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 111:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /* Private macro -------------------------------------------------------------*/
 112:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /* Private variables ---------------------------------------------------------*/
 113:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /* Private function prototypes -----------------------------------------------*/
 114:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /* Private functions ---------------------------------------------------------*/
 115:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 116:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /** @defgroup I2C_Private_Functions
 117:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @{
 118:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 119:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 120:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /** @defgroup I2C_Group1 Initialization and Configuration functions
 121:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  *  @brief   Initialization and Configuration functions 
 122:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  *
 123:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** @verbatim   
 124:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  ===============================================================================
 125:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****             ##### Initialization and Configuration functions #####
 126:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  ===============================================================================  
 127:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 128:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** @endverbatim
 129:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @{
 130:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 131:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 132:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 133:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Deinitialize the I2Cx peripheral registers to their default reset values.
 134:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 135:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None
 136:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 137:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_DeInit(I2C_TypeDef* I2Cx)
 138:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
  28              		.loc 1 138 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  33 0000 08B5     		push	{r3, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 3, -8
  37              		.cfi_offset 14, -4
 139:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 140:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 141:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 142:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (I2Cx == I2C1)
  38              		.loc 1 142 0
  39 0002 174B     		ldr	r3, .L10
  40 0004 9842     		cmp	r0, r3
  41 0006 12D0     		beq	.L7
 143:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 144:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Enable I2C1 reset state */
 145:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_I2C1, ENABLE);
 146:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Release I2C1 from reset state */
 147:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_I2C1, DISABLE);    
 148:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 149:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else if (I2Cx == I2C2)
  42              		.loc 1 149 0
  43 0008 164B     		ldr	r3, .L10+4
  44 000a 9842     		cmp	r0, r3
  45 000c 1BD0     		beq	.L8
 150:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 151:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Enable I2C2 reset state */
 152:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_I2C2, ENABLE);
 153:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Release I2C2 from reset state */
 154:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_I2C2, DISABLE);      
 155:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 156:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else 
 157:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 158:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     if (I2Cx == I2C3)
  46              		.loc 1 158 0
  47 000e 164B     		ldr	r3, .L10+8
  48 0010 9842     		cmp	r0, r3
  49 0012 00D0     		beq	.L9
  50 0014 08BD     		pop	{r3, pc}
  51              	.L9:
 159:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     {
 160:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****       /* Enable I2C3 reset state */
 161:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****       RCC_APB1PeriphResetCmd(RCC_APB1Periph_I2C3, ENABLE);
  52              		.loc 1 161 0
  53 0016 4FF40000 		mov	r0, #8388608
  54              	.LVL1:
  55 001a 0121     		movs	r1, #1
  56 001c FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
  57              	.LVL2:
 162:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****       /* Release I2C3 from reset state */
 163:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****       RCC_APB1PeriphResetCmd(RCC_APB1Periph_I2C3, DISABLE);     
  58              		.loc 1 163 0
  59 0020 4FF40000 		mov	r0, #8388608
  60 0024 0021     		movs	r1, #0
 164:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     }
 165:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 166:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
  61              		.loc 1 166 0
  62 0026 BDE80840 		pop	{r3, lr}
  63              	.LCFI1:
  64              		.cfi_remember_state
  65              		.cfi_restore 14
  66              		.cfi_restore 3
  67              		.cfi_def_cfa_offset 0
 163:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     }
  68              		.loc 1 163 0
  69 002a FFF7FEBF 		b	RCC_APB1PeriphResetCmd
  70              	.LVL3:
  71              	.L7:
  72              	.LCFI2:
  73              		.cfi_restore_state
 145:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Release I2C1 from reset state */
  74              		.loc 1 145 0
  75 002e 4FF40010 		mov	r0, #2097152
  76              	.LVL4:
  77 0032 0121     		movs	r1, #1
  78 0034 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
  79              	.LVL5:
 147:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
  80              		.loc 1 147 0
  81 0038 4FF40010 		mov	r0, #2097152
  82 003c 0021     		movs	r1, #0
  83              		.loc 1 166 0
  84 003e BDE80840 		pop	{r3, lr}
  85              	.LCFI3:
  86              		.cfi_remember_state
  87              		.cfi_restore 14
  88              		.cfi_restore 3
  89              		.cfi_def_cfa_offset 0
 147:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
  90              		.loc 1 147 0
  91 0042 FFF7FEBF 		b	RCC_APB1PeriphResetCmd
  92              	.LVL6:
  93              	.L8:
  94              	.LCFI4:
  95              		.cfi_restore_state
 152:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Release I2C2 from reset state */
  96              		.loc 1 152 0
  97 0046 4FF48000 		mov	r0, #4194304
  98              	.LVL7:
  99 004a 0121     		movs	r1, #1
 100 004c FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 101              	.LVL8:
 154:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 102              		.loc 1 154 0
 103 0050 4FF48000 		mov	r0, #4194304
 104 0054 0021     		movs	r1, #0
 105              		.loc 1 166 0
 106 0056 BDE80840 		pop	{r3, lr}
 107              	.LCFI5:
 108              		.cfi_restore 14
 109              		.cfi_restore 3
 110              		.cfi_def_cfa_offset 0
 154:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 111              		.loc 1 154 0
 112 005a FFF7FEBF 		b	RCC_APB1PeriphResetCmd
 113              	.LVL9:
 114              	.L11:
 115 005e 00BF     		.align	2
 116              	.L10:
 117 0060 00540040 		.word	1073763328
 118 0064 00580040 		.word	1073764352
 119 0068 005C0040 		.word	1073765376
 120              		.cfi_endproc
 121              	.LFE110:
 123              		.section	.text.I2C_Init,"ax",%progbits
 124              		.align	2
 125              		.global	I2C_Init
 126              		.thumb
 127              		.thumb_func
 129              	I2C_Init:
 130              	.LFB111:
 167:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 168:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 169:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Initializes the I2Cx peripheral according to the specified 
 170:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *         parameters in the I2C_InitStruct.
 171:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *           
 172:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @note   To use the I2C at 400 KHz (in fast mode), the PCLK1 frequency 
 173:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *         (I2C peripheral input clock) must be a multiple of 10 MHz.  
 174:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *           
 175:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 176:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2C_InitStruct: pointer to a I2C_InitTypeDef structure that contains 
 177:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *         the configuration information for the specified I2C peripheral.
 178:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None
 179:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 180:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_Init(I2C_TypeDef* I2Cx, I2C_InitTypeDef* I2C_InitStruct)
 181:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 131              		.loc 1 181 0
 132              		.cfi_startproc
 133              		@ args = 0, pretend = 0, frame = 16
 134              		@ frame_needed = 0, uses_anonymous_args = 0
 135              	.LVL10:
 136 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 137              	.LCFI6:
 138              		.cfi_def_cfa_offset 20
 139              		.cfi_offset 4, -20
 140              		.cfi_offset 5, -16
 141              		.cfi_offset 6, -12
 142              		.cfi_offset 7, -8
 143              		.cfi_offset 14, -4
 144 0002 0546     		mov	r5, r0
 145 0004 85B0     		sub	sp, sp, #20
 146              	.LCFI7:
 147              		.cfi_def_cfa_offset 40
 182:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   uint16_t tmpreg = 0, freqrange = 0;
 183:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   uint16_t result = 0x04;
 184:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   uint32_t pclk1 = 8000000;
 185:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   RCC_ClocksTypeDef  rcc_clocks;
 186:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 187:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 188:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_CLOCK_SPEED(I2C_InitStruct->I2C_ClockSpeed));
 189:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_MODE(I2C_InitStruct->I2C_Mode));
 190:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_DUTY_CYCLE(I2C_InitStruct->I2C_DutyCycle));
 191:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_OWN_ADDRESS1(I2C_InitStruct->I2C_OwnAddress1));
 192:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ACK_STATE(I2C_InitStruct->I2C_Ack));
 193:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ACKNOWLEDGE_ADDRESS(I2C_InitStruct->I2C_AcknowledgedAddress));
 194:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 195:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /*---------------------------- I2Cx CR2 Configuration ------------------------*/
 196:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Get the I2Cx CR2 value */
 197:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   tmpreg = I2Cx->CR2;
 198:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Clear frequency FREQ[5:0] bits */
 199:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   tmpreg &= (uint16_t)~((uint16_t)I2C_CR2_FREQ);
 200:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Get pclk1 frequency value */
 201:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   RCC_GetClocksFreq(&rcc_clocks);
 148              		.loc 1 201 0
 149 0006 6846     		mov	r0, sp
 150              	.LVL11:
 181:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   uint16_t tmpreg = 0, freqrange = 0;
 151              		.loc 1 181 0
 152 0008 0E46     		mov	r6, r1
 197:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Clear frequency FREQ[5:0] bits */
 153              		.loc 1 197 0
 154 000a AC88     		ldrh	r4, [r5, #4]
 155              	.LVL12:
 156              		.loc 1 201 0
 157 000c FFF7FEFF 		bl	RCC_GetClocksFreq
 158              	.LVL13:
 202:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   pclk1 = rcc_clocks.PCLK1_Frequency;
 159              		.loc 1 202 0
 160 0010 029B     		ldr	r3, [sp, #8]
 203:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Set frequency bits depending on pclk1 value */
 204:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   freqrange = (uint16_t)(pclk1 / 1000000);
 161              		.loc 1 204 0
 162 0012 3248     		ldr	r0, .L21
 205:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   tmpreg |= freqrange;
 206:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Write to I2Cx CR2 */
 207:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   I2Cx->CR2 = tmpreg;
 208:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 209:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /*---------------------------- I2Cx CCR Configuration ------------------------*/
 210:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Disable the selected I2C peripheral to configure TRISE */
 211:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   I2Cx->CR1 &= (uint16_t)~((uint16_t)I2C_CR1_PE);
 212:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Reset tmpreg value */
 213:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Clear F/S, DUTY and CCR[11:0] bits */
 214:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   tmpreg = 0;
 215:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 216:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Configure speed in standard mode */
 217:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (I2C_InitStruct->I2C_ClockSpeed <= 100000)
 163              		.loc 1 217 0
 164 0014 3268     		ldr	r2, [r6]
 165 0016 DFF8CCE0 		ldr	lr, .L21+8
 204:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   tmpreg |= freqrange;
 166              		.loc 1 204 0
 167 001a A0FB0310 		umull	r1, r0, r0, r3
 199:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Get pclk1 frequency value */
 168              		.loc 1 199 0
 169 001e 24F03F04 		bic	r4, r4, #63
 170              	.LVL14:
 171 0022 2404     		lsls	r4, r4, #16
 204:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   tmpreg |= freqrange;
 172              		.loc 1 204 0
 173 0024 800C     		lsrs	r0, r0, #18
 199:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Get pclk1 frequency value */
 174              		.loc 1 199 0
 175 0026 240C     		lsrs	r4, r4, #16
 176              	.LVL15:
 204:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   tmpreg |= freqrange;
 177              		.loc 1 204 0
 178 0028 87B2     		uxth	r7, r0
 179              	.LVL16:
 205:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   tmpreg |= freqrange;
 180              		.loc 1 205 0
 181 002a 3C43     		orrs	r4, r4, r7
 182              	.LVL17:
 207:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 183              		.loc 1 207 0
 184 002c AC80     		strh	r4, [r5, #4]	@ movhi
 211:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Reset tmpreg value */
 185              		.loc 1 211 0
 186 002e 2988     		ldrh	r1, [r5]
 187 0030 21F00101 		bic	r1, r1, #1
 188 0034 0904     		lsls	r1, r1, #16
 189 0036 090C     		lsrs	r1, r1, #16
 190              		.loc 1 217 0
 191 0038 7245     		cmp	r2, lr
 211:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Reset tmpreg value */
 192              		.loc 1 211 0
 193 003a 2980     		strh	r1, [r5]	@ movhi
 194              	.LVL18:
 195              		.loc 1 217 0
 196 003c 24D8     		bhi	.L13
 218:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 219:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Standard mode speed calculate */
 220:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     result = (uint16_t)(pclk1 / (I2C_InitStruct->I2C_ClockSpeed << 1));
 197              		.loc 1 220 0
 198 003e 5200     		lsls	r2, r2, #1
 199 0040 B3FBF2F3 		udiv	r3, r3, r2
 200              	.LVL19:
 201 0044 9BB2     		uxth	r3, r3
 202              	.LVL20:
 221:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Test if CCR value is under 0x4*/
 222:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     if (result < 0x04)
 203              		.loc 1 222 0
 204 0046 032B     		cmp	r3, #3
 223:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     {
 224:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****       /* Set minimum allowed value */
 225:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****       result = 0x04;  
 226:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     }
 227:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Set speed value for standard mode */
 228:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     tmpreg |= result;	  
 229:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Set Maximum Rise Time for standard mode */
 230:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->TRISE = freqrange + 1; 
 205              		.loc 1 230 0
 206 0048 07F10107 		add	r7, r7, #1
 207              	.LVL21:
 225:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     }
 208              		.loc 1 225 0
 209 004c 98BF     		it	ls
 210 004e 0423     		movls	r3, #4
 211              	.LVL22:
 212              		.loc 1 230 0
 213 0050 2F84     		strh	r7, [r5, #32]	@ movhi
 214              	.LVL23:
 215              	.L15:
 231:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 232:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Configure speed in fast mode */
 233:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* To use the I2C at 400 KHz (in fast mode), the PCLK1 frequency (I2C peripheral
 234:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****      input clock) must be a multiple of 10 MHz */
 235:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else /*(I2C_InitStruct->I2C_ClockSpeed <= 400000)*/
 236:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 237:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     if (I2C_InitStruct->I2C_DutyCycle == I2C_DutyCycle_2)
 238:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     {
 239:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****       /* Fast mode speed calculate: Tlow/Thigh = 2 */
 240:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****       result = (uint16_t)(pclk1 / (I2C_InitStruct->I2C_ClockSpeed * 3));
 241:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     }
 242:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     else /*I2C_InitStruct->I2C_DutyCycle == I2C_DutyCycle_16_9*/
 243:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     {
 244:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****       /* Fast mode speed calculate: Tlow/Thigh = 16/9 */
 245:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****       result = (uint16_t)(pclk1 / (I2C_InitStruct->I2C_ClockSpeed * 25));
 246:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****       /* Set DUTY bit */
 247:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****       result |= I2C_DutyCycle_16_9;
 248:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     }
 249:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 250:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Test if CCR value is under 0x1*/
 251:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     if ((result & I2C_CCR_CCR) == 0)
 252:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     {
 253:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****       /* Set minimum allowed value */
 254:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****       result |= (uint16_t)0x0001;  
 255:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     }
 256:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Set speed value and set F/S bit for fast mode */
 257:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     tmpreg |= (uint16_t)(result | I2C_CCR_FS);
 258:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Set Maximum Rise Time for fast mode */
 259:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->TRISE = (uint16_t)(((freqrange * (uint16_t)300) / (uint16_t)1000) + (uint16_t)1);  
 260:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 261:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 262:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Write to I2Cx CCR */
 263:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   I2Cx->CCR = tmpreg;
 216              		.loc 1 263 0
 217 0052 AB83     		strh	r3, [r5, #28]	@ movhi
 264:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Enable the selected I2C peripheral */
 265:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   I2Cx->CR1 |= I2C_CR1_PE;
 218              		.loc 1 265 0
 219 0054 2888     		ldrh	r0, [r5]
 266:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 267:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /*---------------------------- I2Cx CR1 Configuration ------------------------*/
 268:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Get the I2Cx CR1 value */
 269:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   tmpreg = I2Cx->CR1;
 270:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Clear ACK, SMBTYPE and  SMBUS bits */
 271:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   tmpreg &= CR1_CLEAR_MASK;
 272:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Configure I2Cx: mode and acknowledgement */
 273:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Set SMBTYPE and SMBUS bits according to I2C_Mode value */
 274:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Set ACK bit according to I2C_Ack value */
 275:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   tmpreg |= (uint16_t)((uint32_t)I2C_InitStruct->I2C_Mode | I2C_InitStruct->I2C_Ack);
 220              		.loc 1 275 0
 221 0056 7789     		ldrh	r7, [r6, #10]
 222 0058 B288     		ldrh	r2, [r6, #4]
 276:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Write to I2Cx CR1 */
 277:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   I2Cx->CR1 = tmpreg;
 278:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 279:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /*---------------------------- I2Cx OAR1 Configuration -----------------------*/
 280:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Set I2Cx Own Address1 and acknowledged address */
 281:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   I2Cx->OAR1 = (I2C_InitStruct->I2C_AcknowledgedAddress | I2C_InitStruct->I2C_OwnAddress1);
 223              		.loc 1 281 0
 224 005a 3489     		ldrh	r4, [r6, #8]
 225 005c B189     		ldrh	r1, [r6, #12]
 265:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 226              		.loc 1 265 0
 227 005e 80B2     		uxth	r0, r0
 228 0060 40F00100 		orr	r0, r0, #1
 229 0064 2880     		strh	r0, [r5]	@ movhi
 269:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Clear ACK, SMBTYPE and  SMBUS bits */
 230              		.loc 1 269 0
 231 0066 2B88     		ldrh	r3, [r5]
 232              	.LVL24:
 271:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Configure I2Cx: mode and acknowledgement */
 233              		.loc 1 271 0
 234 0068 23F48163 		bic	r3, r3, #1032
 235              	.LVL25:
 236 006c 23F00203 		bic	r3, r3, #2
 237 0070 1B04     		lsls	r3, r3, #16
 275:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Write to I2Cx CR1 */
 238              		.loc 1 275 0
 239 0072 3A43     		orrs	r2, r2, r7
 271:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Configure I2Cx: mode and acknowledgement */
 240              		.loc 1 271 0
 241 0074 1B0C     		lsrs	r3, r3, #16
 242              	.LVL26:
 275:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Write to I2Cx CR1 */
 243              		.loc 1 275 0
 244 0076 1343     		orrs	r3, r3, r2
 245              	.LVL27:
 246              		.loc 1 281 0
 247 0078 44EA0102 		orr	r2, r4, r1
 275:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Write to I2Cx CR1 */
 248              		.loc 1 275 0
 249 007c 9BB2     		uxth	r3, r3
 250              	.LVL28:
 251              		.loc 1 281 0
 252 007e 92B2     		uxth	r2, r2
 277:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 253              		.loc 1 277 0
 254 0080 2B80     		strh	r3, [r5]	@ movhi
 255              		.loc 1 281 0
 256 0082 2A81     		strh	r2, [r5, #8]	@ movhi
 282:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 257              		.loc 1 282 0
 258 0084 05B0     		add	sp, sp, #20
 259              	.LCFI8:
 260              		.cfi_remember_state
 261              		.cfi_def_cfa_offset 20
 262              		@ sp needed
 263 0086 F0BD     		pop	{r4, r5, r6, r7, pc}
 264              	.LVL29:
 265              	.L13:
 266              	.LCFI9:
 267              		.cfi_restore_state
 237:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     {
 268              		.loc 1 237 0
 269 0088 F488     		ldrh	r4, [r6, #6]
 270 008a 4BF6FF71 		movw	r1, #49151
 271 008e 8C42     		cmp	r4, r1
 272 0090 1DD0     		beq	.L20
 245:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****       /* Set DUTY bit */
 273              		.loc 1 245 0
 274 0092 02EB8202 		add	r2, r2, r2, lsl #2
 275 0096 02EB8202 		add	r2, r2, r2, lsl #2
 276 009a B3FBF2F3 		udiv	r3, r3, r2
 277              	.LVL30:
 278 009e 9BB2     		uxth	r3, r3
 279              	.LVL31:
 247:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     }
 280              		.loc 1 247 0
 281 00a0 43F48043 		orr	r3, r3, #16384
 282              	.LVL32:
 283              	.L17:
 251:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     {
 284              		.loc 1 251 0
 285 00a4 C3F30B02 		ubfx	r2, r3, #0, #12
 286 00a8 0AB9     		cbnz	r2, .L18
 254:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     }
 287              		.loc 1 254 0
 288 00aa 43F00103 		orr	r3, r3, #1
 289              	.LVL33:
 290              	.L18:
 259:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 291              		.loc 1 259 0
 292 00ae 4FF49671 		mov	r1, #300
 293 00b2 0B4C     		ldr	r4, .L21+4
 294 00b4 01FB00F2 		mul	r2, r1, r0
 295 00b8 84FB0201 		smull	r0, r1, r4, r2
 296 00bc D217     		asrs	r2, r2, #31
 297 00be C2EBA112 		rsb	r2, r2, r1, asr #6
 298 00c2 0132     		adds	r2, r2, #1
 299 00c4 92B2     		uxth	r2, r2
 257:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Set Maximum Rise Time for fast mode */
 300              		.loc 1 257 0
 301 00c6 43F40043 		orr	r3, r3, #32768
 302              	.LVL34:
 259:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 303              		.loc 1 259 0
 304 00ca 2A84     		strh	r2, [r5, #32]	@ movhi
 305 00cc C1E7     		b	.L15
 306              	.LVL35:
 307              	.L20:
 240:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     }
 308              		.loc 1 240 0
 309 00ce 02EB4202 		add	r2, r2, r2, lsl #1
 310 00d2 B3FBF2F3 		udiv	r3, r3, r2
 311              	.LVL36:
 312 00d6 9BB2     		uxth	r3, r3
 313              	.LVL37:
 314 00d8 E4E7     		b	.L17
 315              	.L22:
 316 00da 00BF     		.align	2
 317              	.L21:
 318 00dc 83DE1B43 		.word	1125899907
 319 00e0 D34D6210 		.word	274877907
 320 00e4 A0860100 		.word	100000
 321              		.cfi_endproc
 322              	.LFE111:
 324              		.section	.text.I2C_StructInit,"ax",%progbits
 325              		.align	2
 326              		.global	I2C_StructInit
 327              		.thumb
 328              		.thumb_func
 330              	I2C_StructInit:
 331              	.LFB112:
 283:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 284:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 285:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Fills each I2C_InitStruct member with its default value.
 286:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2C_InitStruct: pointer to an I2C_InitTypeDef structure which will be initialized.
 287:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None
 288:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 289:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_StructInit(I2C_InitTypeDef* I2C_InitStruct)
 290:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 332              		.loc 1 290 0
 333              		.cfi_startproc
 334              		@ args = 0, pretend = 0, frame = 0
 335              		@ frame_needed = 0, uses_anonymous_args = 0
 336              		@ link register save eliminated.
 337              	.LVL38:
 291:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /*---------------- Reset I2C init structure parameters values ----------------*/
 292:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* initialize the I2C_ClockSpeed member */
 293:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   I2C_InitStruct->I2C_ClockSpeed = 5000;
 294:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Initialize the I2C_Mode member */
 295:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   I2C_InitStruct->I2C_Mode = I2C_Mode_I2C;
 338              		.loc 1 295 0
 339 0000 0023     		movs	r3, #0
 290:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /*---------------- Reset I2C init structure parameters values ----------------*/
 340              		.loc 1 290 0
 341 0002 10B4     		push	{r4}
 342              	.LCFI10:
 343              		.cfi_def_cfa_offset 4
 344              		.cfi_offset 4, -4
 296:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Initialize the I2C_DutyCycle member */
 297:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   I2C_InitStruct->I2C_DutyCycle = I2C_DutyCycle_2;
 345              		.loc 1 297 0
 346 0004 4BF6FF71 		movw	r1, #49151
 293:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Initialize the I2C_Mode member */
 347              		.loc 1 293 0
 348 0008 41F28834 		movw	r4, #5000
 298:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Initialize the I2C_OwnAddress1 member */
 299:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   I2C_InitStruct->I2C_OwnAddress1 = 0;
 300:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Initialize the I2C_Ack member */
 301:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   I2C_InitStruct->I2C_Ack = I2C_Ack_Disable;
 302:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Initialize the I2C_AcknowledgedAddress member */
 303:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   I2C_InitStruct->I2C_AcknowledgedAddress = I2C_AcknowledgedAddress_7bit;
 349              		.loc 1 303 0
 350 000c 4FF48042 		mov	r2, #16384
 293:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Initialize the I2C_Mode member */
 351              		.loc 1 293 0
 352 0010 0460     		str	r4, [r0]
 297:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Initialize the I2C_OwnAddress1 member */
 353              		.loc 1 297 0
 354 0012 C180     		strh	r1, [r0, #6]	@ movhi
 355              		.loc 1 303 0
 356 0014 8281     		strh	r2, [r0, #12]	@ movhi
 295:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Initialize the I2C_DutyCycle member */
 357              		.loc 1 295 0
 358 0016 8380     		strh	r3, [r0, #4]	@ movhi
 299:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Initialize the I2C_Ack member */
 359              		.loc 1 299 0
 360 0018 0381     		strh	r3, [r0, #8]	@ movhi
 301:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Initialize the I2C_AcknowledgedAddress member */
 361              		.loc 1 301 0
 362 001a 4381     		strh	r3, [r0, #10]	@ movhi
 304:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 363              		.loc 1 304 0
 364 001c 5DF8044B 		ldr	r4, [sp], #4
 365              	.LCFI11:
 366              		.cfi_restore 4
 367              		.cfi_def_cfa_offset 0
 368 0020 7047     		bx	lr
 369              		.cfi_endproc
 370              	.LFE112:
 372 0022 00BF     		.section	.text.I2C_Cmd,"ax",%progbits
 373              		.align	2
 374              		.global	I2C_Cmd
 375              		.thumb
 376              		.thumb_func
 378              	I2C_Cmd:
 379              	.LFB113:
 305:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 306:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 307:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Enables or disables the specified I2C peripheral.
 308:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 309:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  NewState: new state of the I2Cx peripheral. 
 310:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
 311:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None
 312:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 313:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_Cmd(I2C_TypeDef* I2Cx, FunctionalState NewState)
 314:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 380              		.loc 1 314 0
 381              		.cfi_startproc
 382              		@ args = 0, pretend = 0, frame = 0
 383              		@ frame_needed = 0, uses_anonymous_args = 0
 384              		@ link register save eliminated.
 385              	.LVL39:
 315:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 316:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 317:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 318:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (NewState != DISABLE)
 319:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 320:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Enable the selected I2C peripheral */
 321:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 |= I2C_CR1_PE;
 386              		.loc 1 321 0
 387 0000 0388     		ldrh	r3, [r0]
 318:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 388              		.loc 1 318 0
 389 0002 29B9     		cbnz	r1, .L28
 322:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 323:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else
 324:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 325:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Disable the selected I2C peripheral */
 326:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 &= (uint16_t)~((uint16_t)I2C_CR1_PE);
 390              		.loc 1 326 0
 391 0004 23F00103 		bic	r3, r3, #1
 392 0008 1B04     		lsls	r3, r3, #16
 393 000a 1B0C     		lsrs	r3, r3, #16
 394 000c 0380     		strh	r3, [r0]	@ movhi
 395 000e 7047     		bx	lr
 396              	.L28:
 321:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 397              		.loc 1 321 0
 398 0010 9BB2     		uxth	r3, r3
 399 0012 43F00103 		orr	r3, r3, #1
 400 0016 0380     		strh	r3, [r0]	@ movhi
 401 0018 7047     		bx	lr
 402              		.cfi_endproc
 403              	.LFE113:
 405 001a 00BF     		.section	.text.I2C_AnalogFilterCmd,"ax",%progbits
 406              		.align	2
 407              		.global	I2C_AnalogFilterCmd
 408              		.thumb
 409              		.thumb_func
 411              	I2C_AnalogFilterCmd:
 412              	.LFB114:
 327:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 328:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 329:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 330:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 331:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Enables or disables the Analog filter of I2C peripheral.
 332:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * 
 333:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @note   This function can be used only for STM32F42xxx/STM3243xxx and STM32F401xx devices.
 334:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *        
 335:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 336:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  NewState: new state of the Analog filter. 
 337:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
 338:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @note   This function should be called before initializing and enabling
 339:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****             the I2C Peripheral.
 340:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None
 341:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 342:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_AnalogFilterCmd(I2C_TypeDef* I2Cx, FunctionalState NewState)
 343:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 413              		.loc 1 343 0
 414              		.cfi_startproc
 415              		@ args = 0, pretend = 0, frame = 0
 416              		@ frame_needed = 0, uses_anonymous_args = 0
 417              		@ link register save eliminated.
 418              	.LVL40:
 344:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 345:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 346:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 347:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (NewState != DISABLE)
 348:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 349:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Enable the analog filter */
 350:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->FLTR &= (uint16_t)~((uint16_t)I2C_FLTR_ANOFF);    
 419              		.loc 1 350 0
 420 0000 838C     		ldrh	r3, [r0, #36]
 347:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 421              		.loc 1 347 0
 422 0002 21B9     		cbnz	r1, .L32
 351:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 352:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else
 353:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 354:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Disable the analog filter */
 355:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->FLTR |= I2C_FLTR_ANOFF;
 423              		.loc 1 355 0
 424 0004 9BB2     		uxth	r3, r3
 425 0006 43F01003 		orr	r3, r3, #16
 426 000a 8384     		strh	r3, [r0, #36]	@ movhi
 427 000c 7047     		bx	lr
 428              	.L32:
 350:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 429              		.loc 1 350 0
 430 000e 23F01003 		bic	r3, r3, #16
 431 0012 1B04     		lsls	r3, r3, #16
 432 0014 1B0C     		lsrs	r3, r3, #16
 433 0016 8384     		strh	r3, [r0, #36]	@ movhi
 434 0018 7047     		bx	lr
 435              		.cfi_endproc
 436              	.LFE114:
 438 001a 00BF     		.section	.text.I2C_DigitalFilterConfig,"ax",%progbits
 439              		.align	2
 440              		.global	I2C_DigitalFilterConfig
 441              		.thumb
 442              		.thumb_func
 444              	I2C_DigitalFilterConfig:
 445              	.LFB115:
 356:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 357:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 358:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 359:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 360:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Configures the Digital noise filter of I2C peripheral.
 361:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * 
 362:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @note   This function can be used only for STM32F42xxx/STM3243xxx and STM32F401xx devices.
 363:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *       
 364:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 365:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2C_DigitalFilter: Coefficient of digital noise filter. 
 366:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be a number between 0x00 and 0x0F.
 367:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @note   This function should be called before initializing and enabling
 368:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****             the I2C Peripheral.
 369:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None
 370:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 371:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_DigitalFilterConfig(I2C_TypeDef* I2Cx, uint16_t I2C_DigitalFilter)
 372:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 446              		.loc 1 372 0
 447              		.cfi_startproc
 448              		@ args = 0, pretend = 0, frame = 0
 449              		@ frame_needed = 0, uses_anonymous_args = 0
 450              		@ link register save eliminated.
 451              	.LVL41:
 373:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   uint16_t tmpreg = 0;
 374:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   
 375:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 376:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 377:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_DIGITAL_FILTER(I2C_DigitalFilter));
 378:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   
 379:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Get the old register value */
 380:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   tmpreg = I2Cx->FLTR;
 452              		.loc 1 380 0
 453 0000 838C     		ldrh	r3, [r0, #36]
 454 0002 9BB2     		uxth	r3, r3
 455              	.LVL42:
 381:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   
 382:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Reset I2Cx DNF bit [3:0] */
 383:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   tmpreg &= (uint16_t)~((uint16_t)I2C_FLTR_DNF);
 384:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   
 385:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Set I2Cx DNF coefficient */
 386:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   tmpreg |= (uint16_t)((uint16_t)I2C_DigitalFilter & I2C_FLTR_DNF);
 456              		.loc 1 386 0
 457 0004 01F00F01 		and	r1, r1, #15
 458              	.LVL43:
 383:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   
 459              		.loc 1 383 0
 460 0008 23F00F03 		bic	r3, r3, #15
 461              	.LVL44:
 462              		.loc 1 386 0
 463 000c 1943     		orrs	r1, r1, r3
 464              	.LVL45:
 387:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   
 388:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Store the new register value */
 389:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   I2Cx->FLTR = tmpreg;
 465              		.loc 1 389 0
 466 000e 8184     		strh	r1, [r0, #36]	@ movhi
 467 0010 7047     		bx	lr
 468              		.cfi_endproc
 469              	.LFE115:
 471 0012 00BF     		.section	.text.I2C_GenerateSTART,"ax",%progbits
 472              		.align	2
 473              		.global	I2C_GenerateSTART
 474              		.thumb
 475              		.thumb_func
 477              	I2C_GenerateSTART:
 478              	.LFB116:
 390:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 391:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 392:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 393:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Generates I2Cx communication START condition.
 394:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 395:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  NewState: new state of the I2C START condition generation.
 396:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
 397:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None.
 398:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 399:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_GenerateSTART(I2C_TypeDef* I2Cx, FunctionalState NewState)
 400:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 479              		.loc 1 400 0
 480              		.cfi_startproc
 481              		@ args = 0, pretend = 0, frame = 0
 482              		@ frame_needed = 0, uses_anonymous_args = 0
 483              		@ link register save eliminated.
 484              	.LVL46:
 401:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 402:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 403:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 404:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (NewState != DISABLE)
 405:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 406:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Generate a START condition */
 407:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 |= I2C_CR1_START;
 485              		.loc 1 407 0
 486 0000 0388     		ldrh	r3, [r0]
 404:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 487              		.loc 1 404 0
 488 0002 29B9     		cbnz	r1, .L37
 408:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 409:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else
 410:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 411:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Disable the START condition generation */
 412:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 &= (uint16_t)~((uint16_t)I2C_CR1_START);
 489              		.loc 1 412 0
 490 0004 23F48073 		bic	r3, r3, #256
 491 0008 1B04     		lsls	r3, r3, #16
 492 000a 1B0C     		lsrs	r3, r3, #16
 493 000c 0380     		strh	r3, [r0]	@ movhi
 494 000e 7047     		bx	lr
 495              	.L37:
 407:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 496              		.loc 1 407 0
 497 0010 9BB2     		uxth	r3, r3
 498 0012 43F48073 		orr	r3, r3, #256
 499 0016 0380     		strh	r3, [r0]	@ movhi
 500 0018 7047     		bx	lr
 501              		.cfi_endproc
 502              	.LFE116:
 504 001a 00BF     		.section	.text.I2C_GenerateSTOP,"ax",%progbits
 505              		.align	2
 506              		.global	I2C_GenerateSTOP
 507              		.thumb
 508              		.thumb_func
 510              	I2C_GenerateSTOP:
 511              	.LFB117:
 413:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 414:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 415:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 416:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 417:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Generates I2Cx communication STOP condition.
 418:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 419:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  NewState: new state of the I2C STOP condition generation.
 420:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
 421:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None.
 422:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 423:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_GenerateSTOP(I2C_TypeDef* I2Cx, FunctionalState NewState)
 424:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 512              		.loc 1 424 0
 513              		.cfi_startproc
 514              		@ args = 0, pretend = 0, frame = 0
 515              		@ frame_needed = 0, uses_anonymous_args = 0
 516              		@ link register save eliminated.
 517              	.LVL47:
 425:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 426:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 427:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 428:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (NewState != DISABLE)
 429:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 430:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Generate a STOP condition */
 431:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 |= I2C_CR1_STOP;
 518              		.loc 1 431 0
 519 0000 0388     		ldrh	r3, [r0]
 428:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 520              		.loc 1 428 0
 521 0002 29B9     		cbnz	r1, .L41
 432:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 433:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else
 434:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 435:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Disable the STOP condition generation */
 436:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 &= (uint16_t)~((uint16_t)I2C_CR1_STOP);
 522              		.loc 1 436 0
 523 0004 23F40073 		bic	r3, r3, #512
 524 0008 1B04     		lsls	r3, r3, #16
 525 000a 1B0C     		lsrs	r3, r3, #16
 526 000c 0380     		strh	r3, [r0]	@ movhi
 527 000e 7047     		bx	lr
 528              	.L41:
 431:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 529              		.loc 1 431 0
 530 0010 9BB2     		uxth	r3, r3
 531 0012 43F40073 		orr	r3, r3, #512
 532 0016 0380     		strh	r3, [r0]	@ movhi
 533 0018 7047     		bx	lr
 534              		.cfi_endproc
 535              	.LFE117:
 537 001a 00BF     		.section	.text.I2C_Send7bitAddress,"ax",%progbits
 538              		.align	2
 539              		.global	I2C_Send7bitAddress
 540              		.thumb
 541              		.thumb_func
 543              	I2C_Send7bitAddress:
 544              	.LFB118:
 437:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 438:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 439:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 440:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 441:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Transmits the address byte to select the slave device.
 442:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 443:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  Address: specifies the slave address which will be transmitted
 444:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2C_Direction: specifies whether the I2C device will be a Transmitter
 445:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *         or a Receiver. 
 446:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be one of the following values
 447:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_Direction_Transmitter: Transmitter mode
 448:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_Direction_Receiver: Receiver mode
 449:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None.
 450:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 451:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_Send7bitAddress(I2C_TypeDef* I2Cx, uint8_t Address, uint8_t I2C_Direction)
 452:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 545              		.loc 1 452 0
 546              		.cfi_startproc
 547              		@ args = 0, pretend = 0, frame = 0
 548              		@ frame_needed = 0, uses_anonymous_args = 0
 549              		@ link register save eliminated.
 550              	.LVL48:
 453:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 454:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 455:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_DIRECTION(I2C_Direction));
 456:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Test on the direction to set/reset the read/write bit */
 457:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (I2C_Direction != I2C_Direction_Transmitter)
 551              		.loc 1 457 0
 552 0000 22B9     		cbnz	r2, .L45
 458:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 459:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Set the address bit0 for read */
 460:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     Address |= I2C_OAR1_ADD0;
 461:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 462:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else
 463:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 464:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Reset the address bit0 for write */
 465:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     Address &= (uint8_t)~((uint8_t)I2C_OAR1_ADD0);
 553              		.loc 1 465 0
 554 0002 01F0FE01 		and	r1, r1, #254
 555              	.LVL49:
 466:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 467:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Send the address */
 468:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   I2Cx->DR = Address;
 556              		.loc 1 468 0
 557 0006 89B2     		uxth	r1, r1
 558              	.LVL50:
 559 0008 0182     		strh	r1, [r0, #16]	@ movhi
 560 000a 7047     		bx	lr
 561              	.LVL51:
 562              	.L45:
 460:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 563              		.loc 1 460 0
 564 000c 41F00101 		orr	r1, r1, #1
 565              	.LVL52:
 566              		.loc 1 468 0
 567 0010 89B2     		uxth	r1, r1
 568              	.LVL53:
 569 0012 0182     		strh	r1, [r0, #16]	@ movhi
 570 0014 7047     		bx	lr
 571              		.cfi_endproc
 572              	.LFE118:
 574 0016 00BF     		.section	.text.I2C_AcknowledgeConfig,"ax",%progbits
 575              		.align	2
 576              		.global	I2C_AcknowledgeConfig
 577              		.thumb
 578              		.thumb_func
 580              	I2C_AcknowledgeConfig:
 581              	.LFB119:
 469:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 470:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 471:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 472:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Enables or disables the specified I2C acknowledge feature.
 473:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 474:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  NewState: new state of the I2C Acknowledgement.
 475:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
 476:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None.
 477:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 478:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_AcknowledgeConfig(I2C_TypeDef* I2Cx, FunctionalState NewState)
 479:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 582              		.loc 1 479 0
 583              		.cfi_startproc
 584              		@ args = 0, pretend = 0, frame = 0
 585              		@ frame_needed = 0, uses_anonymous_args = 0
 586              		@ link register save eliminated.
 587              	.LVL54:
 480:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 481:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 482:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 483:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (NewState != DISABLE)
 484:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 485:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Enable the acknowledgement */
 486:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 |= I2C_CR1_ACK;
 588              		.loc 1 486 0
 589 0000 0388     		ldrh	r3, [r0]
 483:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 590              		.loc 1 483 0
 591 0002 29B9     		cbnz	r1, .L49
 487:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 488:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else
 489:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 490:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Disable the acknowledgement */
 491:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 &= (uint16_t)~((uint16_t)I2C_CR1_ACK);
 592              		.loc 1 491 0
 593 0004 23F48063 		bic	r3, r3, #1024
 594 0008 1B04     		lsls	r3, r3, #16
 595 000a 1B0C     		lsrs	r3, r3, #16
 596 000c 0380     		strh	r3, [r0]	@ movhi
 597 000e 7047     		bx	lr
 598              	.L49:
 486:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 599              		.loc 1 486 0
 600 0010 9BB2     		uxth	r3, r3
 601 0012 43F48063 		orr	r3, r3, #1024
 602 0016 0380     		strh	r3, [r0]	@ movhi
 603 0018 7047     		bx	lr
 604              		.cfi_endproc
 605              	.LFE119:
 607 001a 00BF     		.section	.text.I2C_OwnAddress2Config,"ax",%progbits
 608              		.align	2
 609              		.global	I2C_OwnAddress2Config
 610              		.thumb
 611              		.thumb_func
 613              	I2C_OwnAddress2Config:
 614              	.LFB120:
 492:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 493:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 494:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 495:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 496:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Configures the specified I2C own address2.
 497:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 498:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  Address: specifies the 7bit I2C own address2.
 499:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None.
 500:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 501:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_OwnAddress2Config(I2C_TypeDef* I2Cx, uint8_t Address)
 502:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 615              		.loc 1 502 0
 616              		.cfi_startproc
 617              		@ args = 0, pretend = 0, frame = 0
 618              		@ frame_needed = 0, uses_anonymous_args = 0
 619              		@ link register save eliminated.
 620              	.LVL55:
 503:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   uint16_t tmpreg = 0;
 504:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 505:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 506:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 507:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 508:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Get the old register value */
 509:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   tmpreg = I2Cx->OAR2;
 621              		.loc 1 509 0
 622 0000 8389     		ldrh	r3, [r0, #12]
 623 0002 9BB2     		uxth	r3, r3
 624              	.LVL56:
 510:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 511:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Reset I2Cx Own address2 bit [7:1] */
 512:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   tmpreg &= (uint16_t)~((uint16_t)I2C_OAR2_ADD2);
 513:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 514:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Set I2Cx Own address2 */
 515:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   tmpreg |= (uint16_t)((uint16_t)Address & (uint16_t)0x00FE);
 625              		.loc 1 515 0
 626 0004 01F0FE01 		and	r1, r1, #254
 627              	.LVL57:
 512:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 628              		.loc 1 512 0
 629 0008 23F0FE03 		bic	r3, r3, #254
 630              	.LVL58:
 631              		.loc 1 515 0
 632 000c 1943     		orrs	r1, r1, r3
 633              	.LVL59:
 516:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 517:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Store the new register value */
 518:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   I2Cx->OAR2 = tmpreg;
 634              		.loc 1 518 0
 635 000e 8181     		strh	r1, [r0, #12]	@ movhi
 636 0010 7047     		bx	lr
 637              		.cfi_endproc
 638              	.LFE120:
 640 0012 00BF     		.section	.text.I2C_DualAddressCmd,"ax",%progbits
 641              		.align	2
 642              		.global	I2C_DualAddressCmd
 643              		.thumb
 644              		.thumb_func
 646              	I2C_DualAddressCmd:
 647              	.LFB121:
 519:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 520:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 521:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 522:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Enables or disables the specified I2C dual addressing mode.
 523:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 524:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  NewState: new state of the I2C dual addressing mode.
 525:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
 526:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None
 527:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 528:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_DualAddressCmd(I2C_TypeDef* I2Cx, FunctionalState NewState)
 529:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 648              		.loc 1 529 0
 649              		.cfi_startproc
 650              		@ args = 0, pretend = 0, frame = 0
 651              		@ frame_needed = 0, uses_anonymous_args = 0
 652              		@ link register save eliminated.
 653              	.LVL60:
 530:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 531:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 532:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 533:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (NewState != DISABLE)
 534:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 535:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Enable dual addressing mode */
 536:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->OAR2 |= I2C_OAR2_ENDUAL;
 654              		.loc 1 536 0
 655 0000 8389     		ldrh	r3, [r0, #12]
 533:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 656              		.loc 1 533 0
 657 0002 29B9     		cbnz	r1, .L54
 537:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 538:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else
 539:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 540:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Disable dual addressing mode */
 541:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->OAR2 &= (uint16_t)~((uint16_t)I2C_OAR2_ENDUAL);
 658              		.loc 1 541 0
 659 0004 23F00103 		bic	r3, r3, #1
 660 0008 1B04     		lsls	r3, r3, #16
 661 000a 1B0C     		lsrs	r3, r3, #16
 662 000c 8381     		strh	r3, [r0, #12]	@ movhi
 663 000e 7047     		bx	lr
 664              	.L54:
 536:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 665              		.loc 1 536 0
 666 0010 9BB2     		uxth	r3, r3
 667 0012 43F00103 		orr	r3, r3, #1
 668 0016 8381     		strh	r3, [r0, #12]	@ movhi
 669 0018 7047     		bx	lr
 670              		.cfi_endproc
 671              	.LFE121:
 673 001a 00BF     		.section	.text.I2C_GeneralCallCmd,"ax",%progbits
 674              		.align	2
 675              		.global	I2C_GeneralCallCmd
 676              		.thumb
 677              		.thumb_func
 679              	I2C_GeneralCallCmd:
 680              	.LFB122:
 542:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 543:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 544:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 545:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 546:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Enables or disables the specified I2C general call feature.
 547:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 548:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  NewState: new state of the I2C General call.
 549:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
 550:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None
 551:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 552:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_GeneralCallCmd(I2C_TypeDef* I2Cx, FunctionalState NewState)
 553:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 681              		.loc 1 553 0
 682              		.cfi_startproc
 683              		@ args = 0, pretend = 0, frame = 0
 684              		@ frame_needed = 0, uses_anonymous_args = 0
 685              		@ link register save eliminated.
 686              	.LVL61:
 554:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 555:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 556:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 557:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (NewState != DISABLE)
 558:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 559:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Enable generall call */
 560:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 |= I2C_CR1_ENGC;
 687              		.loc 1 560 0
 688 0000 0388     		ldrh	r3, [r0]
 557:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 689              		.loc 1 557 0
 690 0002 29B9     		cbnz	r1, .L58
 561:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 562:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else
 563:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 564:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Disable generall call */
 565:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 &= (uint16_t)~((uint16_t)I2C_CR1_ENGC);
 691              		.loc 1 565 0
 692 0004 23F04003 		bic	r3, r3, #64
 693 0008 1B04     		lsls	r3, r3, #16
 694 000a 1B0C     		lsrs	r3, r3, #16
 695 000c 0380     		strh	r3, [r0]	@ movhi
 696 000e 7047     		bx	lr
 697              	.L58:
 560:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 698              		.loc 1 560 0
 699 0010 9BB2     		uxth	r3, r3
 700 0012 43F04003 		orr	r3, r3, #64
 701 0016 0380     		strh	r3, [r0]	@ movhi
 702 0018 7047     		bx	lr
 703              		.cfi_endproc
 704              	.LFE122:
 706 001a 00BF     		.section	.text.I2C_SoftwareResetCmd,"ax",%progbits
 707              		.align	2
 708              		.global	I2C_SoftwareResetCmd
 709              		.thumb
 710              		.thumb_func
 712              	I2C_SoftwareResetCmd:
 713              	.LFB123:
 566:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 567:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 568:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 569:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 570:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Enables or disables the specified I2C software reset.
 571:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @note   When software reset is enabled, the I2C IOs are released (this can
 572:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *         be useful to recover from bus errors).  
 573:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 574:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  NewState: new state of the I2C software reset.
 575:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
 576:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None
 577:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 578:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_SoftwareResetCmd(I2C_TypeDef* I2Cx, FunctionalState NewState)
 579:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 714              		.loc 1 579 0
 715              		.cfi_startproc
 716              		@ args = 0, pretend = 0, frame = 0
 717              		@ frame_needed = 0, uses_anonymous_args = 0
 718              		@ link register save eliminated.
 719              	.LVL62:
 580:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 581:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 582:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 583:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (NewState != DISABLE)
 584:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 585:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Peripheral under reset */
 586:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 |= I2C_CR1_SWRST;
 720              		.loc 1 586 0
 721 0000 0388     		ldrh	r3, [r0]
 583:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 722              		.loc 1 583 0
 723 0002 19B9     		cbnz	r1, .L62
 587:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 588:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else
 589:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 590:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Peripheral not under reset */
 591:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 &= (uint16_t)~((uint16_t)I2C_CR1_SWRST);
 724              		.loc 1 591 0
 725 0004 C3F30E03 		ubfx	r3, r3, #0, #15
 726 0008 0380     		strh	r3, [r0]	@ movhi
 727 000a 7047     		bx	lr
 728              	.L62:
 586:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 729              		.loc 1 586 0
 730 000c 6FEA4343 		mvn	r3, r3, lsl #17
 731 0010 6FEA5343 		mvn	r3, r3, lsr #17
 732 0014 9BB2     		uxth	r3, r3
 733 0016 0380     		strh	r3, [r0]	@ movhi
 734 0018 7047     		bx	lr
 735              		.cfi_endproc
 736              	.LFE123:
 738 001a 00BF     		.section	.text.I2C_StretchClockCmd,"ax",%progbits
 739              		.align	2
 740              		.global	I2C_StretchClockCmd
 741              		.thumb
 742              		.thumb_func
 744              	I2C_StretchClockCmd:
 745              	.LFB124:
 592:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 593:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 594:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 595:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 596:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Enables or disables the specified I2C Clock stretching.
 597:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 598:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  NewState: new state of the I2Cx Clock stretching.
 599:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
 600:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None
 601:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 602:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_StretchClockCmd(I2C_TypeDef* I2Cx, FunctionalState NewState)
 603:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 746              		.loc 1 603 0
 747              		.cfi_startproc
 748              		@ args = 0, pretend = 0, frame = 0
 749              		@ frame_needed = 0, uses_anonymous_args = 0
 750              		@ link register save eliminated.
 751              	.LVL63:
 604:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 605:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 606:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 607:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (NewState == DISABLE)
 608:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 609:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Enable the selected I2C Clock stretching */
 610:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 |= I2C_CR1_NOSTRETCH;
 752              		.loc 1 610 0
 753 0000 0388     		ldrh	r3, [r0]
 607:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 754              		.loc 1 607 0
 755 0002 29B1     		cbz	r1, .L66
 611:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 612:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else
 613:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 614:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Disable the selected I2C Clock stretching */
 615:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 &= (uint16_t)~((uint16_t)I2C_CR1_NOSTRETCH);
 756              		.loc 1 615 0
 757 0004 23F08003 		bic	r3, r3, #128
 758 0008 1B04     		lsls	r3, r3, #16
 759 000a 1B0C     		lsrs	r3, r3, #16
 760 000c 0380     		strh	r3, [r0]	@ movhi
 761 000e 7047     		bx	lr
 762              	.L66:
 610:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 763              		.loc 1 610 0
 764 0010 9BB2     		uxth	r3, r3
 765 0012 43F08003 		orr	r3, r3, #128
 766 0016 0380     		strh	r3, [r0]	@ movhi
 767 0018 7047     		bx	lr
 768              		.cfi_endproc
 769              	.LFE124:
 771 001a 00BF     		.section	.text.I2C_FastModeDutyCycleConfig,"ax",%progbits
 772              		.align	2
 773              		.global	I2C_FastModeDutyCycleConfig
 774              		.thumb
 775              		.thumb_func
 777              	I2C_FastModeDutyCycleConfig:
 778              	.LFB125:
 616:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 617:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 618:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 619:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 620:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Selects the specified I2C fast mode duty cycle.
 621:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 622:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2C_DutyCycle: specifies the fast mode duty cycle.
 623:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be one of the following values:
 624:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_DutyCycle_2: I2C fast mode Tlow/Thigh = 2
 625:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_DutyCycle_16_9: I2C fast mode Tlow/Thigh = 16/9
 626:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None
 627:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 628:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_FastModeDutyCycleConfig(I2C_TypeDef* I2Cx, uint16_t I2C_DutyCycle)
 629:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 779              		.loc 1 629 0
 780              		.cfi_startproc
 781              		@ args = 0, pretend = 0, frame = 0
 782              		@ frame_needed = 0, uses_anonymous_args = 0
 783              		@ link register save eliminated.
 784              	.LVL64:
 630:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 631:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 632:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_DUTY_CYCLE(I2C_DutyCycle));
 633:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (I2C_DutyCycle != I2C_DutyCycle_16_9)
 785              		.loc 1 633 0
 786 0000 B1F5804F 		cmp	r1, #16384
 634:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 635:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* I2C fast mode Tlow/Thigh=2 */
 636:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CCR &= I2C_DutyCycle_2;
 787              		.loc 1 636 0
 788 0004 838B     		ldrh	r3, [r0, #28]
 633:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 789              		.loc 1 633 0
 790 0006 05D0     		beq	.L68
 791              		.loc 1 636 0
 792 0008 23F48043 		bic	r3, r3, #16384
 793 000c 1B04     		lsls	r3, r3, #16
 794 000e 1B0C     		lsrs	r3, r3, #16
 795 0010 8383     		strh	r3, [r0, #28]	@ movhi
 796 0012 7047     		bx	lr
 797              	.L68:
 637:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 638:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else
 639:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 640:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* I2C fast mode Tlow/Thigh=16/9 */
 641:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CCR |= I2C_DutyCycle_16_9;
 798              		.loc 1 641 0
 799 0014 9BB2     		uxth	r3, r3
 800 0016 43F48043 		orr	r3, r3, #16384
 801 001a 8383     		strh	r3, [r0, #28]	@ movhi
 802 001c 7047     		bx	lr
 803              		.cfi_endproc
 804              	.LFE125:
 806 001e 00BF     		.section	.text.I2C_NACKPositionConfig,"ax",%progbits
 807              		.align	2
 808              		.global	I2C_NACKPositionConfig
 809              		.thumb
 810              		.thumb_func
 812              	I2C_NACKPositionConfig:
 813              	.LFB126:
 642:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 643:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 644:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 645:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 646:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Selects the specified I2C NACK position in master receiver mode.
 647:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @note   This function is useful in I2C Master Receiver mode when the number
 648:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *         of data to be received is equal to 2. In this case, this function 
 649:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *         should be called (with parameter I2C_NACKPosition_Next) before data 
 650:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *         reception starts,as described in the 2-byte reception procedure 
 651:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *         recommended in Reference Manual in Section: Master receiver.                
 652:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 653:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2C_NACKPosition: specifies the NACK position. 
 654:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be one of the following values:
 655:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_NACKPosition_Next: indicates that the next byte will be the last
 656:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *                                        received byte.  
 657:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_NACKPosition_Current: indicates that current byte is the last 
 658:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *                                           received byte.
 659:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            
 660:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @note    This function configures the same bit (POS) as I2C_PECPositionConfig() 
 661:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          but is intended to be used in I2C mode while I2C_PECPositionConfig() 
 662:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          is intended to used in SMBUS mode. 
 663:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            
 664:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None
 665:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 666:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_NACKPositionConfig(I2C_TypeDef* I2Cx, uint16_t I2C_NACKPosition)
 667:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 814              		.loc 1 667 0
 815              		.cfi_startproc
 816              		@ args = 0, pretend = 0, frame = 0
 817              		@ frame_needed = 0, uses_anonymous_args = 0
 818              		@ link register save eliminated.
 819              	.LVL65:
 668:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 669:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 670:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_NACK_POSITION(I2C_NACKPosition));
 671:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   
 672:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the input parameter */
 673:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (I2C_NACKPosition == I2C_NACKPosition_Next)
 820              		.loc 1 673 0
 821 0000 B1F5006F 		cmp	r1, #2048
 674:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 675:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Next byte in shift register is the last received byte */
 676:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 |= I2C_NACKPosition_Next;
 822              		.loc 1 676 0
 823 0004 0388     		ldrh	r3, [r0]
 673:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 824              		.loc 1 673 0
 825 0006 05D0     		beq	.L73
 677:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 678:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else
 679:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 680:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Current byte in shift register is the last received byte */
 681:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 &= I2C_NACKPosition_Current;
 826              		.loc 1 681 0
 827 0008 23F40063 		bic	r3, r3, #2048
 828 000c 1B04     		lsls	r3, r3, #16
 829 000e 1B0C     		lsrs	r3, r3, #16
 830 0010 0380     		strh	r3, [r0]	@ movhi
 831 0012 7047     		bx	lr
 832              	.L73:
 676:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 833              		.loc 1 676 0
 834 0014 9BB2     		uxth	r3, r3
 835 0016 43F40063 		orr	r3, r3, #2048
 836 001a 0380     		strh	r3, [r0]	@ movhi
 837 001c 7047     		bx	lr
 838              		.cfi_endproc
 839              	.LFE126:
 841 001e 00BF     		.section	.text.I2C_SMBusAlertConfig,"ax",%progbits
 842              		.align	2
 843              		.global	I2C_SMBusAlertConfig
 844              		.thumb
 845              		.thumb_func
 847              	I2C_SMBusAlertConfig:
 848              	.LFB127:
 682:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 683:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 684:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 685:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 686:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Drives the SMBusAlert pin high or low for the specified I2C.
 687:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 688:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2C_SMBusAlert: specifies SMBAlert pin level. 
 689:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be one of the following values:
 690:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_SMBusAlert_Low: SMBAlert pin driven low
 691:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_SMBusAlert_High: SMBAlert pin driven high
 692:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None
 693:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 694:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_SMBusAlertConfig(I2C_TypeDef* I2Cx, uint16_t I2C_SMBusAlert)
 695:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 849              		.loc 1 695 0
 850              		.cfi_startproc
 851              		@ args = 0, pretend = 0, frame = 0
 852              		@ frame_needed = 0, uses_anonymous_args = 0
 853              		@ link register save eliminated.
 854              	.LVL66:
 696:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 697:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 698:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_SMBUS_ALERT(I2C_SMBusAlert));
 699:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (I2C_SMBusAlert == I2C_SMBusAlert_Low)
 855              		.loc 1 699 0
 856 0000 B1F5005F 		cmp	r1, #8192
 700:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 701:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Drive the SMBusAlert pin Low */
 702:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 |= I2C_SMBusAlert_Low;
 857              		.loc 1 702 0
 858 0004 0388     		ldrh	r3, [r0]
 699:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 859              		.loc 1 699 0
 860 0006 05D0     		beq	.L77
 703:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 704:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else
 705:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 706:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Drive the SMBusAlert pin High  */
 707:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 &= I2C_SMBusAlert_High;
 861              		.loc 1 707 0
 862 0008 23F40053 		bic	r3, r3, #8192
 863 000c 1B04     		lsls	r3, r3, #16
 864 000e 1B0C     		lsrs	r3, r3, #16
 865 0010 0380     		strh	r3, [r0]	@ movhi
 866 0012 7047     		bx	lr
 867              	.L77:
 702:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 868              		.loc 1 702 0
 869 0014 9BB2     		uxth	r3, r3
 870 0016 43F40053 		orr	r3, r3, #8192
 871 001a 0380     		strh	r3, [r0]	@ movhi
 872 001c 7047     		bx	lr
 873              		.cfi_endproc
 874              	.LFE127:
 876 001e 00BF     		.section	.text.I2C_ARPCmd,"ax",%progbits
 877              		.align	2
 878              		.global	I2C_ARPCmd
 879              		.thumb
 880              		.thumb_func
 882              	I2C_ARPCmd:
 883              	.LFB128:
 708:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 709:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 710:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 711:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 712:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Enables or disables the specified I2C ARP.
 713:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 714:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  NewState: new state of the I2Cx ARP. 
 715:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
 716:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None
 717:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 718:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_ARPCmd(I2C_TypeDef* I2Cx, FunctionalState NewState)
 719:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 884              		.loc 1 719 0
 885              		.cfi_startproc
 886              		@ args = 0, pretend = 0, frame = 0
 887              		@ frame_needed = 0, uses_anonymous_args = 0
 888              		@ link register save eliminated.
 889              	.LVL67:
 720:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 721:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 722:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 723:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (NewState != DISABLE)
 724:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 725:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Enable the selected I2C ARP */
 726:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 |= I2C_CR1_ENARP;
 890              		.loc 1 726 0
 891 0000 0388     		ldrh	r3, [r0]
 723:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 892              		.loc 1 723 0
 893 0002 29B9     		cbnz	r1, .L81
 727:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 728:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else
 729:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 730:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Disable the selected I2C ARP */
 731:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 &= (uint16_t)~((uint16_t)I2C_CR1_ENARP);
 894              		.loc 1 731 0
 895 0004 23F01003 		bic	r3, r3, #16
 896 0008 1B04     		lsls	r3, r3, #16
 897 000a 1B0C     		lsrs	r3, r3, #16
 898 000c 0380     		strh	r3, [r0]	@ movhi
 899 000e 7047     		bx	lr
 900              	.L81:
 726:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 901              		.loc 1 726 0
 902 0010 9BB2     		uxth	r3, r3
 903 0012 43F01003 		orr	r3, r3, #16
 904 0016 0380     		strh	r3, [r0]	@ movhi
 905 0018 7047     		bx	lr
 906              		.cfi_endproc
 907              	.LFE128:
 909 001a 00BF     		.section	.text.I2C_SendData,"ax",%progbits
 910              		.align	2
 911              		.global	I2C_SendData
 912              		.thumb
 913              		.thumb_func
 915              	I2C_SendData:
 916              	.LFB129:
 732:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 733:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 734:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 735:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @}
 736:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 737:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 738:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /** @defgroup I2C_Group2 Data transfers functions
 739:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  *  @brief   Data transfers functions 
 740:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  *
 741:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** @verbatim   
 742:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  ===============================================================================
 743:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                   ##### Data transfers functions #####
 744:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  ===============================================================================  
 745:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 746:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** @endverbatim
 747:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @{
 748:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 749:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 750:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 751:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Sends a data byte through the I2Cx peripheral.
 752:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 753:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  Data: Byte to be transmitted..
 754:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None
 755:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 756:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_SendData(I2C_TypeDef* I2Cx, uint8_t Data)
 757:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 917              		.loc 1 757 0
 918              		.cfi_startproc
 919              		@ args = 0, pretend = 0, frame = 0
 920              		@ frame_needed = 0, uses_anonymous_args = 0
 921              		@ link register save eliminated.
 922              	.LVL68:
 758:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 759:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 760:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Write in the DR register the data to be sent */
 761:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   I2Cx->DR = Data;
 923              		.loc 1 761 0
 924 0000 0182     		strh	r1, [r0, #16]	@ movhi
 925 0002 7047     		bx	lr
 926              		.cfi_endproc
 927              	.LFE129:
 929              		.section	.text.I2C_ReceiveData,"ax",%progbits
 930              		.align	2
 931              		.global	I2C_ReceiveData
 932              		.thumb
 933              		.thumb_func
 935              	I2C_ReceiveData:
 936              	.LFB130:
 762:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 763:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 764:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 765:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Returns the most recent received data by the I2Cx peripheral.
 766:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 767:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval The value of the received data.
 768:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 769:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** uint8_t I2C_ReceiveData(I2C_TypeDef* I2Cx)
 770:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 937              		.loc 1 770 0
 938              		.cfi_startproc
 939              		@ args = 0, pretend = 0, frame = 0
 940              		@ frame_needed = 0, uses_anonymous_args = 0
 941              		@ link register save eliminated.
 942              	.LVL69:
 771:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 772:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 773:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Return the data in the DR register */
 774:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   return (uint8_t)I2Cx->DR;
 943              		.loc 1 774 0
 944 0000 008A     		ldrh	r0, [r0, #16]
 945              	.LVL70:
 775:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 946              		.loc 1 775 0
 947 0002 C0B2     		uxtb	r0, r0
 948 0004 7047     		bx	lr
 949              		.cfi_endproc
 950              	.LFE130:
 952 0006 00BF     		.section	.text.I2C_TransmitPEC,"ax",%progbits
 953              		.align	2
 954              		.global	I2C_TransmitPEC
 955              		.thumb
 956              		.thumb_func
 958              	I2C_TransmitPEC:
 959              	.LFB131:
 776:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 777:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 778:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @}
 779:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 780:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 781:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /** @defgroup I2C_Group3 PEC management functions
 782:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  *  @brief   PEC management functions 
 783:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  *
 784:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** @verbatim   
 785:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  ===============================================================================
 786:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                   ##### PEC management functions #####
 787:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  ===============================================================================  
 788:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 789:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** @endverbatim
 790:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @{
 791:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 792:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 793:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 794:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Enables or disables the specified I2C PEC transfer.
 795:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 796:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  NewState: new state of the I2C PEC transmission.
 797:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
 798:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None
 799:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 800:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_TransmitPEC(I2C_TypeDef* I2Cx, FunctionalState NewState)
 801:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 960              		.loc 1 801 0
 961              		.cfi_startproc
 962              		@ args = 0, pretend = 0, frame = 0
 963              		@ frame_needed = 0, uses_anonymous_args = 0
 964              		@ link register save eliminated.
 965              	.LVL71:
 802:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 803:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 804:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 805:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (NewState != DISABLE)
 806:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 807:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Enable the selected I2C PEC transmission */
 808:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 |= I2C_CR1_PEC;
 966              		.loc 1 808 0
 967 0000 0388     		ldrh	r3, [r0]
 805:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 968              		.loc 1 805 0
 969 0002 29B9     		cbnz	r1, .L87
 809:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 810:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else
 811:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 812:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Disable the selected I2C PEC transmission */
 813:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 &= (uint16_t)~((uint16_t)I2C_CR1_PEC);
 970              		.loc 1 813 0
 971 0004 23F48053 		bic	r3, r3, #4096
 972 0008 1B04     		lsls	r3, r3, #16
 973 000a 1B0C     		lsrs	r3, r3, #16
 974 000c 0380     		strh	r3, [r0]	@ movhi
 975 000e 7047     		bx	lr
 976              	.L87:
 808:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 977              		.loc 1 808 0
 978 0010 9BB2     		uxth	r3, r3
 979 0012 43F48053 		orr	r3, r3, #4096
 980 0016 0380     		strh	r3, [r0]	@ movhi
 981 0018 7047     		bx	lr
 982              		.cfi_endproc
 983              	.LFE131:
 985 001a 00BF     		.section	.text.I2C_PECPositionConfig,"ax",%progbits
 986              		.align	2
 987              		.global	I2C_PECPositionConfig
 988              		.thumb
 989              		.thumb_func
 991              	I2C_PECPositionConfig:
 992              	.LFB132:
 814:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 815:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 816:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 817:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 818:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Selects the specified I2C PEC position.
 819:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 820:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2C_PECPosition: specifies the PEC position. 
 821:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be one of the following values:
 822:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_PECPosition_Next: indicates that the next byte is PEC
 823:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_PECPosition_Current: indicates that current byte is PEC
 824:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *       
 825:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @note    This function configures the same bit (POS) as I2C_NACKPositionConfig()
 826:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          but is intended to be used in SMBUS mode while I2C_NACKPositionConfig() 
 827:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          is intended to used in I2C mode.
 828:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *                
 829:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None
 830:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 831:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_PECPositionConfig(I2C_TypeDef* I2Cx, uint16_t I2C_PECPosition)
 832:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 993              		.loc 1 832 0
 994              		.cfi_startproc
 995              		@ args = 0, pretend = 0, frame = 0
 996              		@ frame_needed = 0, uses_anonymous_args = 0
 997              		@ link register save eliminated.
 998              	.LVL72:
 833:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 834:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 835:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_PEC_POSITION(I2C_PECPosition));
 836:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (I2C_PECPosition == I2C_PECPosition_Next)
 999              		.loc 1 836 0
 1000 0000 B1F5006F 		cmp	r1, #2048
 837:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 838:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Next byte in shift register is PEC */
 839:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 |= I2C_PECPosition_Next;
 1001              		.loc 1 839 0
 1002 0004 0388     		ldrh	r3, [r0]
 836:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 1003              		.loc 1 836 0
 1004 0006 05D0     		beq	.L91
 840:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 841:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else
 842:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 843:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Current byte in shift register is PEC */
 844:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 &= I2C_PECPosition_Current;
 1005              		.loc 1 844 0
 1006 0008 23F40063 		bic	r3, r3, #2048
 1007 000c 1B04     		lsls	r3, r3, #16
 1008 000e 1B0C     		lsrs	r3, r3, #16
 1009 0010 0380     		strh	r3, [r0]	@ movhi
 1010 0012 7047     		bx	lr
 1011              	.L91:
 839:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 1012              		.loc 1 839 0
 1013 0014 9BB2     		uxth	r3, r3
 1014 0016 43F40063 		orr	r3, r3, #2048
 1015 001a 0380     		strh	r3, [r0]	@ movhi
 1016 001c 7047     		bx	lr
 1017              		.cfi_endproc
 1018              	.LFE132:
 1020 001e 00BF     		.section	.text.I2C_CalculatePEC,"ax",%progbits
 1021              		.align	2
 1022              		.global	I2C_CalculatePEC
 1023              		.thumb
 1024              		.thumb_func
 1026              	I2C_CalculatePEC:
 1027              	.LFB133:
 845:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 846:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 847:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 848:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 849:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Enables or disables the PEC value calculation of the transferred bytes.
 850:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 851:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  NewState: new state of the I2Cx PEC value calculation.
 852:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
 853:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None
 854:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 855:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_CalculatePEC(I2C_TypeDef* I2Cx, FunctionalState NewState)
 856:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 1028              		.loc 1 856 0
 1029              		.cfi_startproc
 1030              		@ args = 0, pretend = 0, frame = 0
 1031              		@ frame_needed = 0, uses_anonymous_args = 0
 1032              		@ link register save eliminated.
 1033              	.LVL73:
 857:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 858:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 859:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 860:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (NewState != DISABLE)
 861:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 862:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Enable the selected I2C PEC calculation */
 863:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 |= I2C_CR1_ENPEC;
 1034              		.loc 1 863 0
 1035 0000 0388     		ldrh	r3, [r0]
 860:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 1036              		.loc 1 860 0
 1037 0002 29B9     		cbnz	r1, .L95
 864:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 865:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else
 866:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 867:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Disable the selected I2C PEC calculation */
 868:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 &= (uint16_t)~((uint16_t)I2C_CR1_ENPEC);
 1038              		.loc 1 868 0
 1039 0004 23F02003 		bic	r3, r3, #32
 1040 0008 1B04     		lsls	r3, r3, #16
 1041 000a 1B0C     		lsrs	r3, r3, #16
 1042 000c 0380     		strh	r3, [r0]	@ movhi
 1043 000e 7047     		bx	lr
 1044              	.L95:
 863:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 1045              		.loc 1 863 0
 1046 0010 9BB2     		uxth	r3, r3
 1047 0012 43F02003 		orr	r3, r3, #32
 1048 0016 0380     		strh	r3, [r0]	@ movhi
 1049 0018 7047     		bx	lr
 1050              		.cfi_endproc
 1051              	.LFE133:
 1053 001a 00BF     		.section	.text.I2C_GetPEC,"ax",%progbits
 1054              		.align	2
 1055              		.global	I2C_GetPEC
 1056              		.thumb
 1057              		.thumb_func
 1059              	I2C_GetPEC:
 1060              	.LFB134:
 869:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 870:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 871:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 872:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 873:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Returns the PEC value for the specified I2C.
 874:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 875:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval The PEC value.
 876:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 877:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** uint8_t I2C_GetPEC(I2C_TypeDef* I2Cx)
 878:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 1061              		.loc 1 878 0
 1062              		.cfi_startproc
 1063              		@ args = 0, pretend = 0, frame = 0
 1064              		@ frame_needed = 0, uses_anonymous_args = 0
 1065              		@ link register save eliminated.
 1066              	.LVL74:
 879:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 880:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 881:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Return the selected I2C PEC value */
 882:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   return ((I2Cx->SR2) >> 8);
 1067              		.loc 1 882 0
 1068 0000 008B     		ldrh	r0, [r0, #24]
 1069              	.LVL75:
 883:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 1070              		.loc 1 883 0
 1071 0002 C0F30720 		ubfx	r0, r0, #8, #8
 1072 0006 7047     		bx	lr
 1073              		.cfi_endproc
 1074              	.LFE134:
 1076              		.section	.text.I2C_DMACmd,"ax",%progbits
 1077              		.align	2
 1078              		.global	I2C_DMACmd
 1079              		.thumb
 1080              		.thumb_func
 1082              	I2C_DMACmd:
 1083              	.LFB135:
 884:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 885:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 886:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @}
 887:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 888:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 889:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /** @defgroup I2C_Group4 DMA transfers management functions
 890:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  *  @brief   DMA transfers management functions 
 891:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  *
 892:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** @verbatim   
 893:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  ===============================================================================
 894:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                 ##### DMA transfers management functions #####
 895:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  ===============================================================================  
 896:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   This section provides functions allowing to configure the I2C DMA channels 
 897:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   requests.
 898:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   
 899:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** @endverbatim
 900:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @{
 901:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 902:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 903:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 904:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Enables or disables the specified I2C DMA requests.
 905:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 906:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  NewState: new state of the I2C DMA transfer.
 907:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
 908:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None
 909:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 910:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_DMACmd(I2C_TypeDef* I2Cx, FunctionalState NewState)
 911:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 1084              		.loc 1 911 0
 1085              		.cfi_startproc
 1086              		@ args = 0, pretend = 0, frame = 0
 1087              		@ frame_needed = 0, uses_anonymous_args = 0
 1088              		@ link register save eliminated.
 1089              	.LVL76:
 912:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 913:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 914:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 915:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (NewState != DISABLE)
 916:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 917:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Enable the selected I2C DMA requests */
 918:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR2 |= I2C_CR2_DMAEN;
 1090              		.loc 1 918 0
 1091 0000 8388     		ldrh	r3, [r0, #4]
 915:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 1092              		.loc 1 915 0
 1093 0002 29B9     		cbnz	r1, .L100
 919:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 920:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else
 921:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 922:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Disable the selected I2C DMA requests */
 923:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR2 &= (uint16_t)~((uint16_t)I2C_CR2_DMAEN);
 1094              		.loc 1 923 0
 1095 0004 23F40063 		bic	r3, r3, #2048
 1096 0008 1B04     		lsls	r3, r3, #16
 1097 000a 1B0C     		lsrs	r3, r3, #16
 1098 000c 8380     		strh	r3, [r0, #4]	@ movhi
 1099 000e 7047     		bx	lr
 1100              	.L100:
 918:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 1101              		.loc 1 918 0
 1102 0010 9BB2     		uxth	r3, r3
 1103 0012 43F40063 		orr	r3, r3, #2048
 1104 0016 8380     		strh	r3, [r0, #4]	@ movhi
 1105 0018 7047     		bx	lr
 1106              		.cfi_endproc
 1107              	.LFE135:
 1109 001a 00BF     		.section	.text.I2C_DMALastTransferCmd,"ax",%progbits
 1110              		.align	2
 1111              		.global	I2C_DMALastTransferCmd
 1112              		.thumb
 1113              		.thumb_func
 1115              	I2C_DMALastTransferCmd:
 1116              	.LFB136:
 924:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 925:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 926:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 927:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 928:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Specifies that the next DMA transfer is the last one.
 929:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 930:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  NewState: new state of the I2C DMA last transfer.
 931:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
 932:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None
 933:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 934:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_DMALastTransferCmd(I2C_TypeDef* I2Cx, FunctionalState NewState)
 935:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 1117              		.loc 1 935 0
 1118              		.cfi_startproc
 1119              		@ args = 0, pretend = 0, frame = 0
 1120              		@ frame_needed = 0, uses_anonymous_args = 0
 1121              		@ link register save eliminated.
 1122              	.LVL77:
 936:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 937:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 938:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 939:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (NewState != DISABLE)
 940:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 941:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Next DMA transfer is the last transfer */
 942:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR2 |= I2C_CR2_LAST;
 1123              		.loc 1 942 0
 1124 0000 8388     		ldrh	r3, [r0, #4]
 939:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 1125              		.loc 1 939 0
 1126 0002 29B9     		cbnz	r1, .L104
 943:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 944:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else
 945:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 946:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Next DMA transfer is not the last transfer */
 947:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR2 &= (uint16_t)~((uint16_t)I2C_CR2_LAST);
 1127              		.loc 1 947 0
 1128 0004 23F48053 		bic	r3, r3, #4096
 1129 0008 1B04     		lsls	r3, r3, #16
 1130 000a 1B0C     		lsrs	r3, r3, #16
 1131 000c 8380     		strh	r3, [r0, #4]	@ movhi
 1132 000e 7047     		bx	lr
 1133              	.L104:
 942:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 1134              		.loc 1 942 0
 1135 0010 9BB2     		uxth	r3, r3
 1136 0012 43F48053 		orr	r3, r3, #4096
 1137 0016 8380     		strh	r3, [r0, #4]	@ movhi
 1138 0018 7047     		bx	lr
 1139              		.cfi_endproc
 1140              	.LFE136:
 1142 001a 00BF     		.section	.text.I2C_ReadRegister,"ax",%progbits
 1143              		.align	2
 1144              		.global	I2C_ReadRegister
 1145              		.thumb
 1146              		.thumb_func
 1148              	I2C_ReadRegister:
 1149              	.LFB137:
 948:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 949:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 950:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 951:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 952:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @}
 953:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 954:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 955:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /** @defgroup I2C_Group5 Interrupts events and flags management functions
 956:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  *  @brief   Interrupts, events and flags management functions
 957:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  *
 958:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** @verbatim   
 959:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  ===============================================================================
 960:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****           ##### Interrupts, events and flags management functions #####
 961:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  ===============================================================================
 962:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     [..]
 963:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     This section provides functions allowing to configure the I2C Interrupts 
 964:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     sources and check or clear the flags or pending bits status.
 965:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     The user should identify which mode will be used in his application to manage 
 966:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     the communication: Polling mode, Interrupt mode or DMA mode. 
 967:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 968:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 969:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                 ##### I2C State Monitoring Functions #####                   
 970:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  =============================================================================== 
 971:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     [..]  
 972:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     This I2C driver provides three different ways for I2C state monitoring
 973:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     depending on the application requirements and constraints:
 974:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****          
 975:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****    
 976:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****      (#) Basic state monitoring (Using I2C_CheckEvent() function)
 977:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****      
 978:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****         It compares the status registers (SR1 and SR2) content to a given event
 979:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****         (can be the combination of one or more flags).
 980:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****         It returns SUCCESS if the current status includes the given flags 
 981:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****         and returns ERROR if one or more flags are missing in the current status.
 982:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 983:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****           (++) When to use
 984:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****              (+++) This function is suitable for most applications as well as for startup 
 985:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                activity since the events are fully described in the product reference 
 986:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                manual (RM0090).
 987:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****              (+++) It is also suitable for users who need to define their own events.
 988:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 989:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****           (++) Limitations
 990:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                If an error occurs (ie. error flags are set besides to the monitored 
 991:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                flags), the I2C_CheckEvent() function may return SUCCESS despite 
 992:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                the communication hold or corrupted real state. 
 993:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                In this case, it is advised to use error interrupts to monitor 
 994:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                the error events and handle them in the interrupt IRQ handler.
 995:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****          
 996:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****      -@@- For error management, it is advised to use the following functions:
 997:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****         (+@@) I2C_ITConfig() to configure and enable the error interrupts (I2C_IT_ERR).
 998:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****         (+@@) I2Cx_ER_IRQHandler() which is called when the error interrupt occurs.
 999:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****               Where x is the peripheral instance (I2C1, I2C2 ...)
1000:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****         (+@@) I2C_GetFlagStatus() or I2C_GetITStatus()  to be called into the 
1001:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****               I2Cx_ER_IRQHandler() function in order to determine which error occurred.
1002:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****         (+@@) I2C_ClearFlag() or I2C_ClearITPendingBit() and/or I2C_SoftwareResetCmd() 
1003:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****               and/or I2C_GenerateStop() in order to clear the error flag and source 
1004:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****               and return to correct  communication status.
1005:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****              
1006:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  
1007:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****      (#) Advanced state monitoring (Using the function I2C_GetLastEvent())
1008:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1009:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****         Using the function I2C_GetLastEvent() which returns the image of both status 
1010:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****         registers in a single word (uint32_t) (Status Register 2 value is shifted left 
1011:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****         by 16 bits and concatenated to Status Register 1).
1012:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1013:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****           (++) When to use
1014:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****              (+++) This function is suitable for the same applications above but it 
1015:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                allows to overcome the mentioned limitation of I2C_GetFlagStatus() 
1016:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                function.
1017:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****              (+++) The returned value could be compared to events already defined in 
1018:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                the library (stm32f4xx_i2c.h) or to custom values defined by user.
1019:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                This function is suitable when multiple flags are monitored at the 
1020:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                same time.
1021:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****              (+++) At the opposite of I2C_CheckEvent() function, this function allows 
1022:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                user to choose when an event is accepted (when all events flags are 
1023:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                set and no other flags are set or just when the needed flags are set 
1024:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                like I2C_CheckEvent() function.
1025:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1026:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****           (++) Limitations
1027:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****              (+++) User may need to define his own events.
1028:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****              (+++) Same remark concerning the error management is applicable for this 
1029:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                function if user decides to check only regular communication flags 
1030:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                (and ignores error flags).
1031:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****       
1032:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  
1033:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****      (#) Flag-based state monitoring (Using the function I2C_GetFlagStatus())
1034:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****      
1035:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****       Using the function I2C_GetFlagStatus() which simply returns the status of 
1036:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****       one single flag (ie. I2C_FLAG_RXNE ...). 
1037:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1038:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****           (++) When to use
1039:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****              (+++) This function could be used for specific applications or in debug 
1040:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                phase.
1041:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****              (+++) It is suitable when only one flag checking is needed (most I2C 
1042:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                events are monitored through multiple flags).
1043:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****           (++) Limitations: 
1044:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****              (+++) When calling this function, the Status register is accessed. 
1045:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                Some flags are cleared when the status register is accessed. 
1046:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                So checking the status of one Flag, may clear other ones.
1047:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****              (+++) Function may need to be called twice or more in order to monitor 
1048:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                one single event.
1049:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  
1050:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****    For detailed description of Events, please refer to section I2C_Events in 
1051:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****    stm32f4xx_i2c.h file.
1052:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****        
1053:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** @endverbatim
1054:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @{
1055:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
1056:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****    
1057:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
1058:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Reads the specified I2C register and returns its value.
1059:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2C_Register: specifies the register to read.
1060:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be one of the following values:
1061:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_Register_CR1:  CR1 register.
1062:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_Register_CR2:   CR2 register.
1063:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_Register_OAR1:  OAR1 register.
1064:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_Register_OAR2:  OAR2 register.
1065:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_Register_DR:    DR register.
1066:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_Register_SR1:   SR1 register.
1067:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_Register_SR2:   SR2 register.
1068:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_Register_CCR:   CCR register.
1069:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_Register_TRISE: TRISE register.
1070:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval The value of the read register.
1071:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
1072:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** uint16_t I2C_ReadRegister(I2C_TypeDef* I2Cx, uint8_t I2C_Register)
1073:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 1150              		.loc 1 1073 0
 1151              		.cfi_startproc
 1152              		@ args = 0, pretend = 0, frame = 8
 1153              		@ frame_needed = 0, uses_anonymous_args = 0
 1154              		@ link register save eliminated.
 1155              	.LVL78:
 1156 0000 82B0     		sub	sp, sp, #8
 1157              	.LCFI12:
 1158              		.cfi_def_cfa_offset 8
1074:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   __IO uint32_t tmp = 0;
 1159              		.loc 1 1074 0
 1160 0002 0023     		movs	r3, #0
 1161 0004 0193     		str	r3, [sp, #4]
1075:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1076:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
1077:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
1078:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_REGISTER(I2C_Register));
1079:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1080:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   tmp = (uint32_t) I2Cx;
 1162              		.loc 1 1080 0
 1163 0006 0190     		str	r0, [sp, #4]
1081:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   tmp += I2C_Register;
 1164              		.loc 1 1081 0
 1165 0008 019B     		ldr	r3, [sp, #4]
 1166 000a 1944     		add	r1, r1, r3
 1167              	.LVL79:
 1168 000c 0191     		str	r1, [sp, #4]
1082:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1083:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Return the selected register value */
1084:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   return (*(__IO uint16_t *) tmp);
 1169              		.loc 1 1084 0
 1170 000e 019B     		ldr	r3, [sp, #4]
 1171 0010 1888     		ldrh	r0, [r3]
 1172              	.LVL80:
1085:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 1173              		.loc 1 1085 0
 1174 0012 80B2     		uxth	r0, r0
 1175 0014 02B0     		add	sp, sp, #8
 1176              	.LCFI13:
 1177              		.cfi_def_cfa_offset 0
 1178              		@ sp needed
 1179 0016 7047     		bx	lr
 1180              		.cfi_endproc
 1181              	.LFE137:
 1183              		.section	.text.I2C_ITConfig,"ax",%progbits
 1184              		.align	2
 1185              		.global	I2C_ITConfig
 1186              		.thumb
 1187              		.thumb_func
 1189              	I2C_ITConfig:
 1190              	.LFB138:
1086:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1087:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
1088:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Enables or disables the specified I2C interrupts.
1089:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
1090:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2C_IT: specifies the I2C interrupts sources to be enabled or disabled. 
1091:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be any combination of the following values:
1092:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_BUF: Buffer interrupt mask
1093:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_EVT: Event interrupt mask
1094:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_ERR: Error interrupt mask
1095:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  NewState: new state of the specified I2C interrupts.
1096:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
1097:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None
1098:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
1099:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_ITConfig(I2C_TypeDef* I2Cx, uint16_t I2C_IT, FunctionalState NewState)
1100:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 1191              		.loc 1 1100 0
 1192              		.cfi_startproc
 1193              		@ args = 0, pretend = 0, frame = 0
 1194              		@ frame_needed = 0, uses_anonymous_args = 0
 1195              		@ link register save eliminated.
 1196              	.LVL81:
1101:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
1102:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
1103:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1104:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_CONFIG_IT(I2C_IT));
1105:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   
1106:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (NewState != DISABLE)
1107:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
1108:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Enable the selected I2C interrupts */
1109:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR2 |= I2C_IT;
 1197              		.loc 1 1109 0
 1198 0000 8388     		ldrh	r3, [r0, #4]
 1199 0002 9BB2     		uxth	r3, r3
1106:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 1200              		.loc 1 1106 0
 1201 0004 1AB9     		cbnz	r2, .L110
1110:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
1111:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else
1112:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
1113:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Disable the selected I2C interrupts */
1114:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR2 &= (uint16_t)~I2C_IT;
 1202              		.loc 1 1114 0
 1203 0006 23EA0101 		bic	r1, r3, r1
 1204              	.LVL82:
 1205 000a 8180     		strh	r1, [r0, #4]	@ movhi
 1206 000c 7047     		bx	lr
 1207              	.LVL83:
 1208              	.L110:
1109:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 1209              		.loc 1 1109 0
 1210 000e 1943     		orrs	r1, r1, r3
 1211              	.LVL84:
 1212 0010 8180     		strh	r1, [r0, #4]	@ movhi
 1213 0012 7047     		bx	lr
 1214              		.cfi_endproc
 1215              	.LFE138:
 1217              		.section	.text.I2C_CheckEvent,"ax",%progbits
 1218              		.align	2
 1219              		.global	I2C_CheckEvent
 1220              		.thumb
 1221              		.thumb_func
 1223              	I2C_CheckEvent:
 1224              	.LFB139:
1115:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
1116:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
1117:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1118:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /*
1119:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  ===============================================================================
1120:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                           1. Basic state monitoring                    
1121:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  ===============================================================================  
1122:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  */
1123:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1124:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
1125:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Checks whether the last I2Cx Event is equal to the one passed
1126:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *         as parameter.
1127:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
1128:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2C_EVENT: specifies the event to be checked. 
1129:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be one of the following values:
1130:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_EVENT_SLAVE_TRANSMITTER_ADDRESS_MATCHED: EV1
1131:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_EVENT_SLAVE_RECEIVER_ADDRESS_MATCHED: EV1
1132:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_EVENT_SLAVE_TRANSMITTER_SECONDADDRESS_MATCHED: EV1
1133:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_EVENT_SLAVE_RECEIVER_SECONDADDRESS_MATCHED: EV1
1134:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_EVENT_SLAVE_GENERALCALLADDRESS_MATCHED: EV1
1135:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_EVENT_SLAVE_BYTE_RECEIVED: EV2
1136:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg (I2C_EVENT_SLAVE_BYTE_RECEIVED | I2C_FLAG_DUALF): EV2
1137:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg (I2C_EVENT_SLAVE_BYTE_RECEIVED | I2C_FLAG_GENCALL): EV2
1138:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_EVENT_SLAVE_BYTE_TRANSMITTED: EV3
1139:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg (I2C_EVENT_SLAVE_BYTE_TRANSMITTED | I2C_FLAG_DUALF): EV3
1140:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg (I2C_EVENT_SLAVE_BYTE_TRANSMITTED | I2C_FLAG_GENCALL): EV3
1141:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_EVENT_SLAVE_ACK_FAILURE: EV3_2
1142:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_EVENT_SLAVE_STOP_DETECTED: EV4
1143:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_EVENT_MASTER_MODE_SELECT: EV5
1144:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_EVENT_MASTER_TRANSMITTER_MODE_SELECTED: EV6     
1145:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_EVENT_MASTER_RECEIVER_MODE_SELECTED: EV6
1146:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_EVENT_MASTER_BYTE_RECEIVED: EV7
1147:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_EVENT_MASTER_BYTE_TRANSMITTING: EV8
1148:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_EVENT_MASTER_BYTE_TRANSMITTED: EV8_2
1149:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_EVENT_MASTER_MODE_ADDRESS10: EV9
1150:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *     
1151:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @note   For detailed description of Events, please refer to section I2C_Events
1152:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *         in stm32f4xx_i2c.h file.
1153:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *    
1154:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval An ErrorStatus enumeration value:
1155:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *           - SUCCESS: Last event is equal to the I2C_EVENT
1156:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *           - ERROR: Last event is different from the I2C_EVENT
1157:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
1158:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** ErrorStatus I2C_CheckEvent(I2C_TypeDef* I2Cx, uint32_t I2C_EVENT)
1159:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 1225              		.loc 1 1159 0
 1226              		.cfi_startproc
 1227              		@ args = 0, pretend = 0, frame = 0
 1228              		@ frame_needed = 0, uses_anonymous_args = 0
 1229              		@ link register save eliminated.
 1230              	.LVL85:
1160:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   uint32_t lastevent = 0;
1161:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   uint32_t flag1 = 0, flag2 = 0;
1162:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   ErrorStatus status = ERROR;
1163:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1164:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
1165:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
1166:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_EVENT(I2C_EVENT));
1167:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1168:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Read the I2Cx status register */
1169:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   flag1 = I2Cx->SR1;
 1231              		.loc 1 1169 0
 1232 0000 838A     		ldrh	r3, [r0, #20]
1170:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   flag2 = I2Cx->SR2;
 1233              		.loc 1 1170 0
 1234 0002 008B     		ldrh	r0, [r0, #24]
 1235              	.LVL86:
1169:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   flag2 = I2Cx->SR2;
 1236              		.loc 1 1169 0
 1237 0004 9BB2     		uxth	r3, r3
 1238              	.LVL87:
1171:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   flag2 = flag2 << 16;
1172:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1173:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Get the last event value from I2C status register */
1174:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   lastevent = (flag1 | flag2) & FLAG_MASK;
 1239              		.loc 1 1174 0
 1240 0006 43EA0043 		orr	r3, r3, r0, lsl #16
 1241              	.LVL88:
 1242 000a 21F07F40 		bic	r0, r1, #-16777216
 1243              	.LVL89:
1175:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1176:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check whether the last event contains the I2C_EVENT */
1177:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if ((lastevent & I2C_EVENT) == I2C_EVENT)
 1244              		.loc 1 1177 0
 1245 000e 1840     		ands	r0, r0, r3
1178:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
1179:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* SUCCESS: last event is equal to I2C_EVENT */
1180:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     status = SUCCESS;
1181:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
1182:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else
1183:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
1184:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* ERROR: last event is different from I2C_EVENT */
1185:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     status = ERROR;
1186:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
1187:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Return status */
1188:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   return status;
1189:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 1246              		.loc 1 1189 0
 1247 0010 081A     		subs	r0, r1, r0
 1248 0012 B0FA80F0 		clz	r0, r0
 1249 0016 4009     		lsrs	r0, r0, #5
 1250 0018 7047     		bx	lr
 1251              		.cfi_endproc
 1252              	.LFE139:
 1254 001a 00BF     		.section	.text.I2C_GetLastEvent,"ax",%progbits
 1255              		.align	2
 1256              		.global	I2C_GetLastEvent
 1257              		.thumb
 1258              		.thumb_func
 1260              	I2C_GetLastEvent:
 1261              	.LFB140:
1190:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1191:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /*
1192:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  ===============================================================================
1193:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                           2. Advanced state monitoring                   
1194:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  ===============================================================================  
1195:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  */
1196:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1197:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
1198:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Returns the last I2Cx Event.
1199:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
1200:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *     
1201:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @note   For detailed description of Events, please refer to section I2C_Events
1202:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *         in stm32f4xx_i2c.h file.
1203:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *    
1204:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval The last event
1205:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
1206:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** uint32_t I2C_GetLastEvent(I2C_TypeDef* I2Cx)
1207:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 1262              		.loc 1 1207 0
 1263              		.cfi_startproc
 1264              		@ args = 0, pretend = 0, frame = 0
 1265              		@ frame_needed = 0, uses_anonymous_args = 0
 1266              		@ link register save eliminated.
 1267              	.LVL90:
1208:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   uint32_t lastevent = 0;
1209:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   uint32_t flag1 = 0, flag2 = 0;
1210:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1211:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
1212:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
1213:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1214:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Read the I2Cx status register */
1215:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   flag1 = I2Cx->SR1;
 1268              		.loc 1 1215 0
 1269 0000 838A     		ldrh	r3, [r0, #20]
1216:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   flag2 = I2Cx->SR2;
 1270              		.loc 1 1216 0
 1271 0002 028B     		ldrh	r2, [r0, #24]
1215:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   flag2 = I2Cx->SR2;
 1272              		.loc 1 1215 0
 1273 0004 98B2     		uxth	r0, r3
 1274              	.LVL91:
1217:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   flag2 = flag2 << 16;
1218:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1219:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Get the last event value from I2C status register */
1220:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   lastevent = (flag1 | flag2) & FLAG_MASK;
 1275              		.loc 1 1220 0
 1276 0006 40EA0240 		orr	r0, r0, r2, lsl #16
 1277              	.LVL92:
1221:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1222:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Return status */
1223:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   return lastevent;
1224:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 1278              		.loc 1 1224 0
 1279 000a 20F07F40 		bic	r0, r0, #-16777216
 1280 000e 7047     		bx	lr
 1281              		.cfi_endproc
 1282              	.LFE140:
 1284              		.section	.text.I2C_GetFlagStatus,"ax",%progbits
 1285              		.align	2
 1286              		.global	I2C_GetFlagStatus
 1287              		.thumb
 1288              		.thumb_func
 1290              	I2C_GetFlagStatus:
 1291              	.LFB141:
1225:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1226:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /*
1227:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  ===============================================================================
1228:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                           3. Flag-based state monitoring                   
1229:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  ===============================================================================  
1230:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  */
1231:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1232:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
1233:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Checks whether the specified I2C flag is set or not.
1234:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
1235:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2C_FLAG: specifies the flag to check. 
1236:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be one of the following values:
1237:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_DUALF: Dual flag (Slave mode)
1238:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_SMBHOST: SMBus host header (Slave mode)
1239:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_SMBDEFAULT: SMBus default header (Slave mode)
1240:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_GENCALL: General call header flag (Slave mode)
1241:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_TRA: Transmitter/Receiver flag
1242:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_BUSY: Bus busy flag
1243:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_MSL: Master/Slave flag
1244:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_SMBALERT: SMBus Alert flag
1245:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_TIMEOUT: Timeout or Tlow error flag
1246:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_PECERR: PEC error in reception flag
1247:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_OVR: Overrun/Underrun flag (Slave mode)
1248:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_AF: Acknowledge failure flag
1249:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_ARLO: Arbitration lost flag (Master mode)
1250:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_BERR: Bus error flag
1251:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_TXE: Data register empty flag (Transmitter)
1252:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_RXNE: Data register not empty (Receiver) flag
1253:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_STOPF: Stop detection flag (Slave mode)
1254:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_ADD10: 10-bit header sent flag (Master mode)
1255:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_BTF: Byte transfer finished flag
1256:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_ADDR: Address sent flag (Master mode) "ADSL"
1257:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *                                Address matched flag (Slave mode)"ENDAD"
1258:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_SB: Start bit flag (Master mode)
1259:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval The new state of I2C_FLAG (SET or RESET).
1260:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
1261:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** FlagStatus I2C_GetFlagStatus(I2C_TypeDef* I2Cx, uint32_t I2C_FLAG)
1262:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 1292              		.loc 1 1262 0
 1293              		.cfi_startproc
 1294              		@ args = 0, pretend = 0, frame = 8
 1295              		@ frame_needed = 0, uses_anonymous_args = 0
 1296              		@ link register save eliminated.
 1297              	.LVL93:
 1298 0000 82B0     		sub	sp, sp, #8
 1299              	.LCFI14:
 1300              		.cfi_def_cfa_offset 8
1263:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   FlagStatus bitstatus = RESET;
1264:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   __IO uint32_t i2creg = 0, i2cxbase = 0;
 1301              		.loc 1 1264 0
 1302 0002 0023     		movs	r3, #0
1265:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1266:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
1267:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
1268:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_GET_FLAG(I2C_FLAG));
1269:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1270:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Get the I2Cx peripheral base address */
1271:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   i2cxbase = (uint32_t)I2Cx;
1272:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   
1273:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Read flag register index */
1274:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   i2creg = I2C_FLAG >> 28;
 1303              		.loc 1 1274 0
 1304 0004 0A0F     		lsrs	r2, r1, #28
1264:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 1305              		.loc 1 1264 0
 1306 0006 0093     		str	r3, [sp]
 1307 0008 0193     		str	r3, [sp, #4]
1271:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   
 1308              		.loc 1 1271 0
 1309 000a 0190     		str	r0, [sp, #4]
 1310              		.loc 1 1274 0
 1311 000c 0092     		str	r2, [sp]
1275:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   
1276:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Get bit[23:0] of the flag */
1277:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   I2C_FLAG &= FLAG_MASK;
1278:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   
1279:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if(i2creg != 0)
 1312              		.loc 1 1279 0
 1313 000e 009B     		ldr	r3, [sp]
1277:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   
 1314              		.loc 1 1277 0
 1315 0010 21F07F41 		bic	r1, r1, #-16777216
 1316              	.LVL94:
 1317              		.loc 1 1279 0
 1318 0014 53B1     		cbz	r3, .L114
1280:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
1281:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Get the I2Cx SR1 register address */
1282:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     i2cxbase += 0x14;
 1319              		.loc 1 1282 0
 1320 0016 019B     		ldr	r3, [sp, #4]
 1321 0018 1433     		adds	r3, r3, #20
 1322 001a 0193     		str	r3, [sp, #4]
 1323              	.L115:
1283:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
1284:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else
1285:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
1286:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Flag in I2Cx SR2 Register */
1287:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2C_FLAG = (uint32_t)(I2C_FLAG >> 16);
1288:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Get the I2Cx SR2 register address */
1289:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     i2cxbase += 0x18;
1290:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
1291:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   
1292:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if(((*(__IO uint32_t *)i2cxbase) & I2C_FLAG) != (uint32_t)RESET)
 1324              		.loc 1 1292 0
 1325 001c 019B     		ldr	r3, [sp, #4]
 1326 001e 1B68     		ldr	r3, [r3]
 1327              	.LVL95:
 1328 0020 1942     		tst	r1, r3
1293:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
1294:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* I2C_FLAG is set */
1295:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     bitstatus = SET;
1296:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
1297:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else
1298:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
1299:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* I2C_FLAG is reset */
1300:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     bitstatus = RESET;
1301:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
1302:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   
1303:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Return the I2C_FLAG status */
1304:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   return  bitstatus;
1305:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 1329              		.loc 1 1305 0
 1330 0022 14BF     		ite	ne
 1331 0024 0120     		movne	r0, #1
 1332              	.LVL96:
 1333 0026 0020     		moveq	r0, #0
 1334 0028 02B0     		add	sp, sp, #8
 1335              	.LCFI15:
 1336              		.cfi_remember_state
 1337              		.cfi_def_cfa_offset 0
 1338              		@ sp needed
 1339 002a 7047     		bx	lr
 1340              	.LVL97:
 1341              	.L114:
 1342              	.LCFI16:
 1343              		.cfi_restore_state
1289:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 1344              		.loc 1 1289 0
 1345 002c 019B     		ldr	r3, [sp, #4]
 1346 002e 1833     		adds	r3, r3, #24
1287:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Get the I2Cx SR2 register address */
 1347              		.loc 1 1287 0
 1348 0030 090C     		lsrs	r1, r1, #16
 1349              	.LVL98:
1289:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 1350              		.loc 1 1289 0
 1351 0032 0193     		str	r3, [sp, #4]
 1352 0034 F2E7     		b	.L115
 1353              		.cfi_endproc
 1354              	.LFE141:
 1356 0036 00BF     		.section	.text.I2C_ClearFlag,"ax",%progbits
 1357              		.align	2
 1358              		.global	I2C_ClearFlag
 1359              		.thumb
 1360              		.thumb_func
 1362              	I2C_ClearFlag:
 1363              	.LFB142:
1306:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1307:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
1308:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Clears the I2Cx's pending flags.
1309:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
1310:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2C_FLAG: specifies the flag to clear. 
1311:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be any combination of the following values:
1312:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_SMBALERT: SMBus Alert flag
1313:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_TIMEOUT: Timeout or Tlow error flag
1314:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_PECERR: PEC error in reception flag
1315:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_OVR: Overrun/Underrun flag (Slave mode)
1316:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_AF: Acknowledge failure flag
1317:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_ARLO: Arbitration lost flag (Master mode)
1318:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_BERR: Bus error flag
1319:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *   
1320:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @note   STOPF (STOP detection) is cleared by software sequence: a read operation 
1321:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          to I2C_SR1 register (I2C_GetFlagStatus()) followed by a write operation 
1322:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          to I2C_CR1 register (I2C_Cmd() to re-enable the I2C peripheral).
1323:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @note   ADD10 (10-bit header sent) is cleared by software sequence: a read 
1324:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          operation to I2C_SR1 (I2C_GetFlagStatus()) followed by writing the 
1325:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          second byte of the address in DR register.
1326:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @note   BTF (Byte Transfer Finished) is cleared by software sequence: a read 
1327:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          operation to I2C_SR1 register (I2C_GetFlagStatus()) followed by a 
1328:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          read/write to I2C_DR register (I2C_SendData()).
1329:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @note   ADDR (Address sent) is cleared by software sequence: a read operation to 
1330:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          I2C_SR1 register (I2C_GetFlagStatus()) followed by a read operation to 
1331:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          I2C_SR2 register ((void)(I2Cx->SR2)).
1332:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @note   SB (Start Bit) is cleared software sequence: a read operation to I2C_SR1
1333:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          register (I2C_GetFlagStatus()) followed by a write operation to I2C_DR
1334:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          register (I2C_SendData()).
1335:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *  
1336:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None
1337:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
1338:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_ClearFlag(I2C_TypeDef* I2Cx, uint32_t I2C_FLAG)
1339:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 1364              		.loc 1 1339 0
 1365              		.cfi_startproc
 1366              		@ args = 0, pretend = 0, frame = 0
 1367              		@ frame_needed = 0, uses_anonymous_args = 0
 1368              		@ link register save eliminated.
 1369              	.LVL99:
1340:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   uint32_t flagpos = 0;
1341:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
1342:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
1343:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_CLEAR_FLAG(I2C_FLAG));
1344:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Get the I2C flag position */
1345:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   flagpos = I2C_FLAG & FLAG_MASK;
1346:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Clear the selected I2C flag */
1347:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   I2Cx->SR1 = (uint16_t)~flagpos;
 1370              		.loc 1 1347 0
 1371 0000 C943     		mvns	r1, r1
 1372              	.LVL100:
 1373 0002 89B2     		uxth	r1, r1
 1374              	.LVL101:
 1375 0004 8182     		strh	r1, [r0, #20]	@ movhi
 1376 0006 7047     		bx	lr
 1377              		.cfi_endproc
 1378              	.LFE142:
 1380              		.section	.text.I2C_GetITStatus,"ax",%progbits
 1381              		.align	2
 1382              		.global	I2C_GetITStatus
 1383              		.thumb
 1384              		.thumb_func
 1386              	I2C_GetITStatus:
 1387              	.LFB143:
1348:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
1349:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1350:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
1351:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Checks whether the specified I2C interrupt has occurred or not.
1352:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
1353:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2C_IT: specifies the interrupt source to check. 
1354:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be one of the following values:
1355:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_SMBALERT: SMBus Alert flag
1356:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_TIMEOUT: Timeout or Tlow error flag
1357:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_PECERR: PEC error in reception flag
1358:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_OVR: Overrun/Underrun flag (Slave mode)
1359:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_AF: Acknowledge failure flag
1360:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_ARLO: Arbitration lost flag (Master mode)
1361:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_BERR: Bus error flag
1362:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_TXE: Data register empty flag (Transmitter)
1363:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_RXNE: Data register not empty (Receiver) flag
1364:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_STOPF: Stop detection flag (Slave mode)
1365:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_ADD10: 10-bit header sent flag (Master mode)
1366:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_BTF: Byte transfer finished flag
1367:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_ADDR: Address sent flag (Master mode) "ADSL"
1368:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *                              Address matched flag (Slave mode)"ENDAD"
1369:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_SB: Start bit flag (Master mode)
1370:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval The new state of I2C_IT (SET or RESET).
1371:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
1372:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** ITStatus I2C_GetITStatus(I2C_TypeDef* I2Cx, uint32_t I2C_IT)
1373:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 1388              		.loc 1 1373 0
 1389              		.cfi_startproc
 1390              		@ args = 0, pretend = 0, frame = 0
 1391              		@ frame_needed = 0, uses_anonymous_args = 0
 1392              		@ link register save eliminated.
 1393              	.LVL102:
1374:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   ITStatus bitstatus = RESET;
1375:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   uint32_t enablestatus = 0;
1376:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1377:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
1378:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
1379:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_GET_IT(I2C_IT));
1380:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1381:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check if the interrupt source is enabled or not */
1382:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   enablestatus = (uint32_t)(((I2C_IT & ITEN_MASK) >> 16) & (I2Cx->CR2)) ;
 1394              		.loc 1 1382 0
 1395 0000 8388     		ldrh	r3, [r0, #4]
1383:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   
1384:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Get bit[23:0] of the flag */
1385:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   I2C_IT &= FLAG_MASK;
1386:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1387:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the status of the specified I2C flag */
1388:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (((I2Cx->SR1 & I2C_IT) != (uint32_t)RESET) && enablestatus)
 1396              		.loc 1 1388 0
 1397 0002 808A     		ldrh	r0, [r0, #20]
 1398              	.LVL103:
 1399 0004 80B2     		uxth	r0, r0
 1400 0006 0840     		ands	r0, r0, r1
1382:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   
 1401              		.loc 1 1382 0
 1402 0008 9BB2     		uxth	r3, r3
 1403              	.LVL104:
 1404              		.loc 1 1388 0
 1405 000a 06D0     		beq	.L119
1382:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   
 1406              		.loc 1 1382 0 discriminator 1
 1407 000c 01F0E061 		and	r1, r1, #117440512
 1408              	.LVL105:
 1409              		.loc 1 1388 0 discriminator 1
 1410 0010 13EA1143 		ands	r3, r3, r1, lsr #16
 1411              	.LVL106:
1389:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
1390:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* I2C_IT is set */
1391:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     bitstatus = SET;
 1412              		.loc 1 1391 0 discriminator 1
 1413 0014 14BF     		ite	ne
 1414 0016 0120     		movne	r0, #1
 1415 0018 0020     		moveq	r0, #0
 1416              	.L119:
 1417              	.LVL107:
1392:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
1393:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else
1394:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
1395:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* I2C_IT is reset */
1396:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     bitstatus = RESET;
1397:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
1398:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Return the I2C_IT status */
1399:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   return  bitstatus;
1400:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 1418              		.loc 1 1400 0
 1419 001a 7047     		bx	lr
 1420              		.cfi_endproc
 1421              	.LFE143:
 1423              		.section	.text.I2C_ClearITPendingBit,"ax",%progbits
 1424              		.align	2
 1425              		.global	I2C_ClearITPendingBit
 1426              		.thumb
 1427              		.thumb_func
 1429              	I2C_ClearITPendingBit:
 1430              	.LFB144:
1401:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1402:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
1403:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Clears the I2Cx's interrupt pending bits.
1404:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
1405:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2C_IT: specifies the interrupt pending bit to clear. 
1406:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be any combination of the following values:
1407:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_SMBALERT: SMBus Alert interrupt
1408:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_TIMEOUT: Timeout or Tlow error interrupt
1409:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_PECERR: PEC error in reception  interrupt
1410:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_OVR: Overrun/Underrun interrupt (Slave mode)
1411:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_AF: Acknowledge failure interrupt
1412:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_ARLO: Arbitration lost interrupt (Master mode)
1413:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_BERR: Bus error interrupt
1414:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * 
1415:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @note   STOPF (STOP detection) is cleared by software sequence: a read operation 
1416:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          to I2C_SR1 register (I2C_GetITStatus()) followed by a write operation to 
1417:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          I2C_CR1 register (I2C_Cmd() to re-enable the I2C peripheral).
1418:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @note   ADD10 (10-bit header sent) is cleared by software sequence: a read 
1419:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          operation to I2C_SR1 (I2C_GetITStatus()) followed by writing the second 
1420:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          byte of the address in I2C_DR register.
1421:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @note   BTF (Byte Transfer Finished) is cleared by software sequence: a read 
1422:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          operation to I2C_SR1 register (I2C_GetITStatus()) followed by a 
1423:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          read/write to I2C_DR register (I2C_SendData()).
1424:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @note   ADDR (Address sent) is cleared by software sequence: a read operation to 
1425:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          I2C_SR1 register (I2C_GetITStatus()) followed by a read operation to 
1426:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          I2C_SR2 register ((void)(I2Cx->SR2)).
1427:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @note   SB (Start Bit) is cleared by software sequence: a read operation to 
1428:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          I2C_SR1 register (I2C_GetITStatus()) followed by a write operation to 
1429:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          I2C_DR register (I2C_SendData()).
1430:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None
1431:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
1432:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_ClearITPendingBit(I2C_TypeDef* I2Cx, uint32_t I2C_IT)
1433:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 1431              		.loc 1 1433 0
 1432              		.cfi_startproc
 1433              		@ args = 0, pretend = 0, frame = 0
 1434              		@ frame_needed = 0, uses_anonymous_args = 0
 1435              		@ link register save eliminated.
 1436              	.LVL108:
1434:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   uint32_t flagpos = 0;
1435:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
1436:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
1437:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_CLEAR_IT(I2C_IT));
1438:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1439:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Get the I2C flag position */
1440:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   flagpos = I2C_IT & FLAG_MASK;
1441:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1442:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Clear the selected I2C flag */
1443:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   I2Cx->SR1 = (uint16_t)~flagpos;
 1437              		.loc 1 1443 0
 1438 0000 C943     		mvns	r1, r1
 1439              	.LVL109:
 1440 0002 89B2     		uxth	r1, r1
 1441              	.LVL110:
 1442 0004 8182     		strh	r1, [r0, #20]	@ movhi
 1443 0006 7047     		bx	lr
 1444              		.cfi_endproc
 1445              	.LFE144:
 1447              		.text
 1448              	.Letext0:
 1449              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\4.9 2014q4\\arm-none-eabi\\include\\mach
 1450              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\4.9 2014q4\\arm-none-eabi\\include\\stdi
 1451              		.file 4 "libs/Device/STM32F4xx/Include/stm32f4xx.h"
 1452              		.file 5 "libs/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_rcc.h"
 1453              		.file 6 "libs/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_i2c.h"
 1454              		.file 7 "libs/CMSIS/Include/core_cm4.h"
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_i2c.c
C:\Users\Student\AppData\Local\Temp\ccfJgoBu.s:20     .text.I2C_DeInit:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccfJgoBu.s:25     .text.I2C_DeInit:00000000 I2C_DeInit
C:\Users\Student\AppData\Local\Temp\ccfJgoBu.s:117    .text.I2C_DeInit:00000060 $d
C:\Users\Student\AppData\Local\Temp\ccfJgoBu.s:124    .text.I2C_Init:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccfJgoBu.s:129    .text.I2C_Init:00000000 I2C_Init
C:\Users\Student\AppData\Local\Temp\ccfJgoBu.s:318    .text.I2C_Init:000000dc $d
C:\Users\Student\AppData\Local\Temp\ccfJgoBu.s:325    .text.I2C_StructInit:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccfJgoBu.s:330    .text.I2C_StructInit:00000000 I2C_StructInit
C:\Users\Student\AppData\Local\Temp\ccfJgoBu.s:373    .text.I2C_Cmd:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccfJgoBu.s:378    .text.I2C_Cmd:00000000 I2C_Cmd
C:\Users\Student\AppData\Local\Temp\ccfJgoBu.s:406    .text.I2C_AnalogFilterCmd:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccfJgoBu.s:411    .text.I2C_AnalogFilterCmd:00000000 I2C_AnalogFilterCmd
C:\Users\Student\AppData\Local\Temp\ccfJgoBu.s:439    .text.I2C_DigitalFilterConfig:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccfJgoBu.s:444    .text.I2C_DigitalFilterConfig:00000000 I2C_DigitalFilterConfig
C:\Users\Student\AppData\Local\Temp\ccfJgoBu.s:472    .text.I2C_GenerateSTART:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccfJgoBu.s:477    .text.I2C_GenerateSTART:00000000 I2C_GenerateSTART
C:\Users\Student\AppData\Local\Temp\ccfJgoBu.s:505    .text.I2C_GenerateSTOP:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccfJgoBu.s:510    .text.I2C_GenerateSTOP:00000000 I2C_GenerateSTOP
C:\Users\Student\AppData\Local\Temp\ccfJgoBu.s:538    .text.I2C_Send7bitAddress:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccfJgoBu.s:543    .text.I2C_Send7bitAddress:00000000 I2C_Send7bitAddress
C:\Users\Student\AppData\Local\Temp\ccfJgoBu.s:575    .text.I2C_AcknowledgeConfig:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccfJgoBu.s:580    .text.I2C_AcknowledgeConfig:00000000 I2C_AcknowledgeConfig
C:\Users\Student\AppData\Local\Temp\ccfJgoBu.s:608    .text.I2C_OwnAddress2Config:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccfJgoBu.s:613    .text.I2C_OwnAddress2Config:00000000 I2C_OwnAddress2Config
C:\Users\Student\AppData\Local\Temp\ccfJgoBu.s:641    .text.I2C_DualAddressCmd:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccfJgoBu.s:646    .text.I2C_DualAddressCmd:00000000 I2C_DualAddressCmd
C:\Users\Student\AppData\Local\Temp\ccfJgoBu.s:674    .text.I2C_GeneralCallCmd:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccfJgoBu.s:679    .text.I2C_GeneralCallCmd:00000000 I2C_GeneralCallCmd
C:\Users\Student\AppData\Local\Temp\ccfJgoBu.s:707    .text.I2C_SoftwareResetCmd:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccfJgoBu.s:712    .text.I2C_SoftwareResetCmd:00000000 I2C_SoftwareResetCmd
C:\Users\Student\AppData\Local\Temp\ccfJgoBu.s:739    .text.I2C_StretchClockCmd:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccfJgoBu.s:744    .text.I2C_StretchClockCmd:00000000 I2C_StretchClockCmd
C:\Users\Student\AppData\Local\Temp\ccfJgoBu.s:772    .text.I2C_FastModeDutyCycleConfig:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccfJgoBu.s:777    .text.I2C_FastModeDutyCycleConfig:00000000 I2C_FastModeDutyCycleConfig
C:\Users\Student\AppData\Local\Temp\ccfJgoBu.s:807    .text.I2C_NACKPositionConfig:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccfJgoBu.s:812    .text.I2C_NACKPositionConfig:00000000 I2C_NACKPositionConfig
C:\Users\Student\AppData\Local\Temp\ccfJgoBu.s:842    .text.I2C_SMBusAlertConfig:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccfJgoBu.s:847    .text.I2C_SMBusAlertConfig:00000000 I2C_SMBusAlertConfig
C:\Users\Student\AppData\Local\Temp\ccfJgoBu.s:877    .text.I2C_ARPCmd:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccfJgoBu.s:882    .text.I2C_ARPCmd:00000000 I2C_ARPCmd
C:\Users\Student\AppData\Local\Temp\ccfJgoBu.s:910    .text.I2C_SendData:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccfJgoBu.s:915    .text.I2C_SendData:00000000 I2C_SendData
C:\Users\Student\AppData\Local\Temp\ccfJgoBu.s:930    .text.I2C_ReceiveData:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccfJgoBu.s:935    .text.I2C_ReceiveData:00000000 I2C_ReceiveData
C:\Users\Student\AppData\Local\Temp\ccfJgoBu.s:953    .text.I2C_TransmitPEC:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccfJgoBu.s:958    .text.I2C_TransmitPEC:00000000 I2C_TransmitPEC
C:\Users\Student\AppData\Local\Temp\ccfJgoBu.s:986    .text.I2C_PECPositionConfig:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccfJgoBu.s:991    .text.I2C_PECPositionConfig:00000000 I2C_PECPositionConfig
C:\Users\Student\AppData\Local\Temp\ccfJgoBu.s:1021   .text.I2C_CalculatePEC:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccfJgoBu.s:1026   .text.I2C_CalculatePEC:00000000 I2C_CalculatePEC
C:\Users\Student\AppData\Local\Temp\ccfJgoBu.s:1054   .text.I2C_GetPEC:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccfJgoBu.s:1059   .text.I2C_GetPEC:00000000 I2C_GetPEC
C:\Users\Student\AppData\Local\Temp\ccfJgoBu.s:1077   .text.I2C_DMACmd:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccfJgoBu.s:1082   .text.I2C_DMACmd:00000000 I2C_DMACmd
C:\Users\Student\AppData\Local\Temp\ccfJgoBu.s:1110   .text.I2C_DMALastTransferCmd:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccfJgoBu.s:1115   .text.I2C_DMALastTransferCmd:00000000 I2C_DMALastTransferCmd
C:\Users\Student\AppData\Local\Temp\ccfJgoBu.s:1143   .text.I2C_ReadRegister:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccfJgoBu.s:1148   .text.I2C_ReadRegister:00000000 I2C_ReadRegister
C:\Users\Student\AppData\Local\Temp\ccfJgoBu.s:1184   .text.I2C_ITConfig:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccfJgoBu.s:1189   .text.I2C_ITConfig:00000000 I2C_ITConfig
C:\Users\Student\AppData\Local\Temp\ccfJgoBu.s:1218   .text.I2C_CheckEvent:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccfJgoBu.s:1223   .text.I2C_CheckEvent:00000000 I2C_CheckEvent
C:\Users\Student\AppData\Local\Temp\ccfJgoBu.s:1255   .text.I2C_GetLastEvent:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccfJgoBu.s:1260   .text.I2C_GetLastEvent:00000000 I2C_GetLastEvent
C:\Users\Student\AppData\Local\Temp\ccfJgoBu.s:1285   .text.I2C_GetFlagStatus:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccfJgoBu.s:1290   .text.I2C_GetFlagStatus:00000000 I2C_GetFlagStatus
C:\Users\Student\AppData\Local\Temp\ccfJgoBu.s:1357   .text.I2C_ClearFlag:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccfJgoBu.s:1362   .text.I2C_ClearFlag:00000000 I2C_ClearFlag
C:\Users\Student\AppData\Local\Temp\ccfJgoBu.s:1381   .text.I2C_GetITStatus:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccfJgoBu.s:1386   .text.I2C_GetITStatus:00000000 I2C_GetITStatus
C:\Users\Student\AppData\Local\Temp\ccfJgoBu.s:1424   .text.I2C_ClearITPendingBit:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccfJgoBu.s:1429   .text.I2C_ClearITPendingBit:00000000 I2C_ClearITPendingBit
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
RCC_APB1PeriphResetCmd
RCC_GetClocksFreq
