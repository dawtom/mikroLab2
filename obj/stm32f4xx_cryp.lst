   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 2
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"stm32f4xx_cryp.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CRYP_DeInit,"ax",%progbits
  20              		.align	2
  21              		.global	CRYP_DeInit
  22              		.thumb
  23              		.thumb_func
  25              	CRYP_DeInit:
  26              	.LFB110:
  27              		.file 1 "libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c"
   1:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
   2:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   ******************************************************************************
   3:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @file    stm32f4xx_cryp.c
   4:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @author  MCD Application Team
   5:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @version V1.3.0
   6:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @date    08-November-2013
   7:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @brief   This file provides firmware functions to manage the following 
   8:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          functionalities of the  Cryptographic processor (CRYP) peripheral:           
   9:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *           + Initialization and Configuration functions
  10:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *           + Data treatment functions 
  11:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *           + Context swapping functions     
  12:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *           + DMA interface function       
  13:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *           + Interrupts and flags management       
  14:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
  15:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** @verbatim
  16:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  ===================================================================      
  17:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                  ##### How to use this driver #####
  18:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  =================================================================== 
  19:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  [..]
  20:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****    (#) Enable the CRYP controller clock using 
  21:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****        RCC_AHB2PeriphClockCmd(RCC_AHB2Periph_CRYP, ENABLE); function.
  22:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   
  23:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****    (#) Initialise the CRYP using CRYP_Init(), CRYP_KeyInit() and if needed 
  24:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****        CRYP_IVInit(). 
  25:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   
  26:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****    (#) Flush the IN and OUT FIFOs by using CRYP_FIFOFlush() function.
  27:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   
  28:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****    (#) Enable the CRYP controller using the CRYP_Cmd() function. 
  29:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   
  30:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****    (#) If using DMA for Data input and output transfer, activate the needed DMA 
  31:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****        Requests using CRYP_DMACmd() function 
  32:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   
  33:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****    (#) If DMA is not used for data transfer, use CRYP_DataIn() and  CRYP_DataOut() 
  34:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****        functions to enter data to IN FIFO and get result from OUT FIFO.
  35:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   
  36:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****    (#) To control CRYP events you can use one of the following two methods:
  37:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****        (++) Check on CRYP flags using the CRYP_GetFlagStatus() function.  
  38:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****        (++) Use CRYP interrupts through the function CRYP_ITConfig() at 
  39:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****             initialization phase and CRYP_GetITStatus() function into interrupt 
  40:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****             routines in processing phase.
  41:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****          
  42:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****    (#) Save and restore Cryptographic processor context using CRYP_SaveContext() 
  43:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****        and CRYP_RestoreContext() functions.     
  44:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   
  45:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   
  46:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  *** Procedure to perform an encryption or a decryption ***
  47:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  ========================================================== 
  48:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   
  49:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  *** Initialization ***
  50:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  ====================== 
  51:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  [..] 
  52:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****    (#) Initialize the peripheral using CRYP_Init(), CRYP_KeyInit() and CRYP_IVInit 
  53:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****        functions:
  54:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****        (++) Configure the key size (128-, 192- or 256-bit, in the AES only) 
  55:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****        (++) Enter the symmetric key 
  56:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****        (++) Configure the data type
  57:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****        (++) In case of decryption in AES-ECB or AES-CBC, you must prepare 
  58:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****             the key: configure the key preparation mode. Then Enable the CRYP 
  59:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****             peripheral using CRYP_Cmd() function: the BUSY flag is set. 
  60:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****             Wait until BUSY flag is reset : the key is prepared for decryption
  61:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****        (++) Configure the algorithm and chaining (the DES/TDES in ECB/CBC, the 
  62:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****             AES in ECB/CBC/CTR) 
  63:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****        (++) Configure the direction (encryption/decryption).
  64:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****        (++) Write the initialization vectors (in CBC or CTR modes only)
  65:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   
  66:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****    (#) Flush the IN and OUT FIFOs using the CRYP_FIFOFlush() function
  67:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   
  68:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   
  69:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *** Basic Processing mode (polling mode) *** 
  70:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   ============================================  
  71:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   [..]
  72:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     (#) Enable the cryptographic processor using CRYP_Cmd() function.
  73:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   
  74:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     (#) Write the first blocks in the input FIFO (2 to 8 words) using 
  75:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****         CRYP_DataIn() function.
  76:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   
  77:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     (#) Repeat the following sequence until the complete message has been 
  78:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****         processed:
  79:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   
  80:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****         (++) Wait for flag CRYP_FLAG_OFNE occurs (using CRYP_GetFlagStatus() 
  81:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****             function), then read the OUT-FIFO using CRYP_DataOut() function
  82:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****             (1 block or until the FIFO is empty)
  83:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   
  84:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****          (++) Wait for flag CRYP_FLAG_IFNF occurs, (using CRYP_GetFlagStatus() 
  85:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****             function then write the IN FIFO using CRYP_DataIn() function 
  86:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****             (1 block or until the FIFO is full)
  87:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   
  88:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     (#) At the end of the processing, CRYP_FLAG_BUSY flag will be reset and 
  89:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****           both FIFOs are empty (CRYP_FLAG_IFEM is set and CRYP_FLAG_OFNE is 
  90:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****           reset). You can disable the peripheral using CRYP_Cmd() function.
  91:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   
  92:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  *** Interrupts Processing mode *** 
  93:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  ==================================
  94:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  [..] In this mode, Processing is done when the data are transferred by the 
  95:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****       CPU during interrupts.
  96:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   
  97:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     (#) Enable the interrupts CRYP_IT_INI and CRYP_IT_OUTI using CRYP_ITConfig()
  98:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****         function.
  99:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   
 100:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     (#) Enable the cryptographic processor using CRYP_Cmd() function.
 101:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   
 102:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     (#) In the CRYP_IT_INI interrupt handler : load the input message into the 
 103:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****          IN FIFO using CRYP_DataIn() function . You can load 2 or 4 words at a 
 104:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****          time, or load data until the IN FIFO is full. When the last word of
 105:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****          the message has been entered into the IN FIFO, disable the CRYP_IT_INI 
 106:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****          interrupt (using CRYP_ITConfig() function).
 107:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   
 108:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     (#) In the CRYP_IT_OUTI interrupt handler : read the output message from 
 109:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****          the OUT FIFO using CRYP_DataOut() function. You can read 1 block (2 or 
 110:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****          4 words) at a time or read data until the FIFO is empty.
 111:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****          When the last word has been read, INIM=0, BUSY=0 and both FIFOs are 
 112:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****          empty (CRYP_FLAG_IFEM is set and CRYP_FLAG_OFNE is reset). 
 113:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****          You can disable the CRYP_IT_OUTI interrupt (using CRYP_ITConfig() 
 114:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****          function) and you can disable the peripheral using CRYP_Cmd() function.
 115:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   
 116:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  *** DMA Processing mode *** 
 117:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  ===========================
 118:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  [..] In this mode, Processing is done when the DMA is used to transfer the 
 119:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****       data from/to the memory.
 120:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   
 121:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     (#) Configure the DMA controller to transfer the input data from the 
 122:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****          memory using DMA_Init() function. 
 123:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****          The transfer length is the length of the message. 
 124:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****          As message padding is not managed by the peripheral, the message 
 125:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****          length must be an entire number of blocks. The data are transferred 
 126:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****          in burst mode. The burst length is 4 words in the AES and 2 or 4 
 127:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****          words in the DES/TDES. The DMA should be configured to set an 
 128:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****          interrupt on transfer completion of the output data to indicate that 
 129:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****          the processing is finished. 
 130:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****          Refer to DMA peripheral driver for more details.  
 131:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   
 132:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****      (#) Enable the cryptographic processor using CRYP_Cmd() function. 
 133:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****          Enable the DMA requests CRYP_DMAReq_DataIN and CRYP_DMAReq_DataOUT 
 134:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****          using CRYP_DMACmd() function.
 135:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   
 136:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****      (#) All the transfers and processing are managed by the DMA and the 
 137:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****          cryptographic processor. The DMA transfer complete interrupt indicates 
 138:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****          that the processing is complete. Both FIFOs are normally empty and 
 139:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****          CRYP_FLAG_BUSY flag is reset.
 140:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   
 141:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     @endverbatim
 142:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
 143:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   ******************************************************************************
 144:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @attention
 145:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
 146:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * <h2><center>&copy; COPYRIGHT 2013 STMicroelectronics</center></h2>
 147:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
 148:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
 149:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * You may not use this file except in compliance with the License.
 150:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * You may obtain a copy of the License at:
 151:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
 152:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *        http://www.st.com/software_license_agreement_liberty_v2
 153:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
 154:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * Unless required by applicable law or agreed to in writing, software 
 155:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * distributed under the License is distributed on an "AS IS" BASIS, 
 156:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 157:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * See the License for the specific language governing permissions and
 158:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * limitations under the License.
 159:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
 160:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   ******************************************************************************  
 161:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 162:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 163:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /* Includes ------------------------------------------------------------------*/
 164:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** #include "stm32f4xx_cryp.h"
 165:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** #include "stm32f4xx_rcc.h"
 166:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 167:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
 168:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @{
 169:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 170:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 171:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /** @defgroup CRYP 
 172:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @brief CRYP driver modules
 173:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @{
 174:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */ 
 175:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 176:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /* Private typedef -----------------------------------------------------------*/
 177:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /* Private define ------------------------------------------------------------*/
 178:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** #define FLAG_MASK     ((uint8_t)0x20)
 179:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** #define MAX_TIMEOUT   ((uint16_t)0xFFFF)
 180:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 181:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /* Private macro -------------------------------------------------------------*/
 182:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /* Private variables ---------------------------------------------------------*/
 183:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /* Private function prototypes -----------------------------------------------*/
 184:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /* Private functions ---------------------------------------------------------*/
 185:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 186:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /** @defgroup CRYP_Private_Functions
 187:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @{
 188:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */ 
 189:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 190:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /** @defgroup CRYP_Group1 Initialization and Configuration functions
 191:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  *  @brief    Initialization and Configuration functions 
 192:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  *
 193:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** @verbatim    
 194:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  ===============================================================================
 195:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****              ##### Initialization and Configuration functions #####
 196:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  ===============================================================================  
 197:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  [..] This section provides functions allowing to 
 198:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****    (+) Initialize the cryptographic Processor using CRYP_Init() function 
 199:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****        (++)  Encrypt or Decrypt 
 200:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****        (++)  mode : TDES-ECB, TDES-CBC, 
 201:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                     DES-ECB, DES-CBC, 
 202:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                     AES-ECB, AES-CBC, AES-CTR, AES-Key, AES-GCM, AES-CCM 
 203:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****        (++) DataType :  32-bit data, 16-bit data, bit data or bit-string
 204:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****        (++) Key Size (only in AES modes)
 205:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****    (+) Configure the Encrypt or Decrypt Key using CRYP_KeyInit() function 
 206:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****    (+) Configure the Initialization Vectors(IV) for CBC and CTR modes using 
 207:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****        CRYP_IVInit() function.  
 208:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****    (+) Flushes the IN and OUT FIFOs : using CRYP_FIFOFlush() function.                         
 209:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****    (+) Enable or disable the CRYP Processor using CRYP_Cmd() function 
 210:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****        
 211:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** @endverbatim
 212:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @{
 213:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 214:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 215:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @brief  Deinitializes the CRYP peripheral registers to their default reset values
 216:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @param  None
 217:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @retval None
 218:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 219:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** void CRYP_DeInit(void)
 220:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** {
  28              		.loc 1 220 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 08B5     		push	{r3, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 3, -8
  36              		.cfi_offset 14, -4
 221:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Enable CRYP reset state */
 222:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   RCC_AHB2PeriphResetCmd(RCC_AHB2Periph_CRYP, ENABLE);
  37              		.loc 1 222 0
  38 0002 1020     		movs	r0, #16
  39 0004 0121     		movs	r1, #1
  40 0006 FFF7FEFF 		bl	RCC_AHB2PeriphResetCmd
  41              	.LVL0:
 223:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 224:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Release CRYP from reset state */
 225:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   RCC_AHB2PeriphResetCmd(RCC_AHB2Periph_CRYP, DISABLE);
  42              		.loc 1 225 0
  43 000a 1020     		movs	r0, #16
  44 000c 0021     		movs	r1, #0
 226:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** }
  45              		.loc 1 226 0
  46 000e BDE80840 		pop	{r3, lr}
  47              	.LCFI1:
  48              		.cfi_restore 14
  49              		.cfi_restore 3
  50              		.cfi_def_cfa_offset 0
 225:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** }
  51              		.loc 1 225 0
  52 0012 FFF7FEBF 		b	RCC_AHB2PeriphResetCmd
  53              	.LVL1:
  54              		.cfi_endproc
  55              	.LFE110:
  57 0016 00BF     		.section	.text.CRYP_Init,"ax",%progbits
  58              		.align	2
  59              		.global	CRYP_Init
  60              		.thumb
  61              		.thumb_func
  63              	CRYP_Init:
  64              	.LFB111:
 227:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 228:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 229:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @brief  Initializes the CRYP peripheral according to the specified parameters
 230:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *         in the CRYP_InitStruct.
 231:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @param  CRYP_InitStruct: pointer to a CRYP_InitTypeDef structure that contains
 232:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *         the configuration information for the CRYP peripheral.
 233:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @retval None
 234:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 235:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** void CRYP_Init(CRYP_InitTypeDef* CRYP_InitStruct)
 236:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** {
  65              		.loc 1 236 0
  66              		.cfi_startproc
  67              		@ args = 0, pretend = 0, frame = 0
  68              		@ frame_needed = 0, uses_anonymous_args = 0
  69              		@ link register save eliminated.
  70              	.LVL2:
 237:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Check the parameters */
 238:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   assert_param(IS_CRYP_ALGOMODE(CRYP_InitStruct->CRYP_AlgoMode));
 239:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   assert_param(IS_CRYP_DATATYPE(CRYP_InitStruct->CRYP_DataType));
 240:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   assert_param(IS_CRYP_ALGODIR(CRYP_InitStruct->CRYP_AlgoDir));
 241:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 242:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Select Algorithm mode*/  
 243:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->CR &= ~CRYP_CR_ALGOMODE;
  71              		.loc 1 243 0
  72 0000 154B     		ldr	r3, .L10
  73 0002 1A68     		ldr	r2, [r3]
  74 0004 22F40022 		bic	r2, r2, #524288
  75 0008 22F03802 		bic	r2, r2, #56
 236:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Check the parameters */
  76              		.loc 1 236 0
  77 000c 10B4     		push	{r4}
  78              	.LCFI2:
  79              		.cfi_def_cfa_offset 4
  80              		.cfi_offset 4, -4
  81              		.loc 1 243 0
  82 000e 1A60     		str	r2, [r3]
 244:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->CR |= CRYP_InitStruct->CRYP_AlgoMode;
  83              		.loc 1 244 0
  84 0010 1A68     		ldr	r2, [r3]
  85 0012 4168     		ldr	r1, [r0, #4]
  86 0014 0A43     		orrs	r2, r2, r1
  87 0016 1A60     		str	r2, [r3]
 245:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 246:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Select dataType */ 
 247:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->CR &= ~CRYP_CR_DATATYPE;
  88              		.loc 1 247 0
  89 0018 1A68     		ldr	r2, [r3]
  90 001a 22F0C002 		bic	r2, r2, #192
  91 001e 1A60     		str	r2, [r3]
 248:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->CR |= CRYP_InitStruct->CRYP_DataType;
  92              		.loc 1 248 0
  93 0020 1C68     		ldr	r4, [r3]
  94 0022 8268     		ldr	r2, [r0, #8]
  95 0024 2243     		orrs	r2, r2, r4
  96 0026 1A60     		str	r2, [r3]
 249:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 250:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* select Key size (used only with AES algorithm) */
 251:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   if ((CRYP_InitStruct->CRYP_AlgoMode != CRYP_AlgoMode_TDES_ECB) &&
  97              		.loc 1 251 0
  98 0028 31F01802 		bics	r2, r1, #24
  99 002c 07D0     		beq	.L4
 252:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****       (CRYP_InitStruct->CRYP_AlgoMode != CRYP_AlgoMode_TDES_CBC) &&
 253:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****       (CRYP_InitStruct->CRYP_AlgoMode != CRYP_AlgoMode_DES_ECB) &&
 254:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****       (CRYP_InitStruct->CRYP_AlgoMode != CRYP_AlgoMode_DES_CBC))
 255:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   {
 256:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     assert_param(IS_CRYP_KEYSIZE(CRYP_InitStruct->CRYP_KeySize));
 257:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP->CR &= ~CRYP_CR_KEYSIZE;
 100              		.loc 1 257 0
 101 002e 1A68     		ldr	r2, [r3]
 102 0030 22F44072 		bic	r2, r2, #768
 103 0034 1A60     		str	r2, [r3]
 258:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP->CR |= CRYP_InitStruct->CRYP_KeySize; /* Key size and value must be 
 104              		.loc 1 258 0
 105 0036 1968     		ldr	r1, [r3]
 106 0038 C268     		ldr	r2, [r0, #12]
 107 003a 0A43     		orrs	r2, r2, r1
 108 003c 1A60     		str	r2, [r3]
 109              	.L4:
 259:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                                                   configured once the key has 
 260:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                                                   been prepared */
 261:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   }
 262:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 263:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Select data Direction */ 
 264:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->CR &= ~CRYP_CR_ALGODIR;
 110              		.loc 1 264 0
 111 003e 064B     		ldr	r3, .L10
 265:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->CR |= CRYP_InitStruct->CRYP_AlgoDir;
 266:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** }
 112              		.loc 1 266 0
 113 0040 5DF8044B 		ldr	r4, [sp], #4
 114              	.LCFI3:
 115              		.cfi_restore 4
 116              		.cfi_def_cfa_offset 0
 264:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->CR |= CRYP_InitStruct->CRYP_AlgoDir;
 117              		.loc 1 264 0
 118 0044 1A68     		ldr	r2, [r3]
 119 0046 22F00402 		bic	r2, r2, #4
 120 004a 1A60     		str	r2, [r3]
 265:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->CR |= CRYP_InitStruct->CRYP_AlgoDir;
 121              		.loc 1 265 0
 122 004c 0268     		ldr	r2, [r0]
 123 004e 1968     		ldr	r1, [r3]
 124 0050 0A43     		orrs	r2, r2, r1
 125 0052 1A60     		str	r2, [r3]
 126              		.loc 1 266 0
 127 0054 7047     		bx	lr
 128              	.L11:
 129 0056 00BF     		.align	2
 130              	.L10:
 131 0058 00000650 		.word	1342570496
 132              		.cfi_endproc
 133              	.LFE111:
 135              		.section	.text.CRYP_StructInit,"ax",%progbits
 136              		.align	2
 137              		.global	CRYP_StructInit
 138              		.thumb
 139              		.thumb_func
 141              	CRYP_StructInit:
 142              	.LFB112:
 267:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 268:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 269:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @brief  Fills each CRYP_InitStruct member with its default value.
 270:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @param  CRYP_InitStruct: pointer to a CRYP_InitTypeDef structure which will
 271:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *         be initialized.
 272:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @retval None
 273:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 274:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** void CRYP_StructInit(CRYP_InitTypeDef* CRYP_InitStruct)
 275:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** {
 143              		.loc 1 275 0
 144              		.cfi_startproc
 145              		@ args = 0, pretend = 0, frame = 0
 146              		@ frame_needed = 0, uses_anonymous_args = 0
 147              		@ link register save eliminated.
 148              	.LVL3:
 276:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Initialize the CRYP_AlgoDir member */
 277:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP_InitStruct->CRYP_AlgoDir = CRYP_AlgoDir_Encrypt;
 149              		.loc 1 277 0
 150 0000 0023     		movs	r3, #0
 151 0002 0360     		str	r3, [r0]
 278:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 279:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* initialize the CRYP_AlgoMode member */
 280:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP_InitStruct->CRYP_AlgoMode = CRYP_AlgoMode_TDES_ECB;
 152              		.loc 1 280 0
 153 0004 4360     		str	r3, [r0, #4]
 281:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 282:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* initialize the CRYP_DataType member */
 283:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP_InitStruct->CRYP_DataType = CRYP_DataType_32b;
 154              		.loc 1 283 0
 155 0006 8360     		str	r3, [r0, #8]
 284:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   
 285:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Initialize the CRYP_KeySize member */
 286:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP_InitStruct->CRYP_KeySize = CRYP_KeySize_128b;
 156              		.loc 1 286 0
 157 0008 C360     		str	r3, [r0, #12]
 158 000a 7047     		bx	lr
 159              		.cfi_endproc
 160              	.LFE112:
 162              		.section	.text.CRYP_KeyInit,"ax",%progbits
 163              		.align	2
 164              		.global	CRYP_KeyInit
 165              		.thumb
 166              		.thumb_func
 168              	CRYP_KeyInit:
 169              	.LFB113:
 287:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** }
 288:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 289:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 290:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @brief  Initializes the CRYP Keys according to the specified parameters in
 291:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *         the CRYP_KeyInitStruct.
 292:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @param  CRYP_KeyInitStruct: pointer to a CRYP_KeyInitTypeDef structure that
 293:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *         contains the configuration information for the CRYP Keys.
 294:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @retval None
 295:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 296:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** void CRYP_KeyInit(CRYP_KeyInitTypeDef* CRYP_KeyInitStruct)
 297:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** {
 170              		.loc 1 297 0
 171              		.cfi_startproc
 172              		@ args = 0, pretend = 0, frame = 0
 173              		@ frame_needed = 0, uses_anonymous_args = 0
 174              		@ link register save eliminated.
 175              	.LVL4:
 298:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Key Initialisation */
 299:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->K0LR = CRYP_KeyInitStruct->CRYP_Key0Left;
 176              		.loc 1 299 0
 177 0000 084B     		ldr	r3, .L14
 178 0002 0268     		ldr	r2, [r0]
 179 0004 1A62     		str	r2, [r3, #32]
 300:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->K0RR = CRYP_KeyInitStruct->CRYP_Key0Right;
 180              		.loc 1 300 0
 181 0006 4268     		ldr	r2, [r0, #4]
 182 0008 5A62     		str	r2, [r3, #36]
 301:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->K1LR = CRYP_KeyInitStruct->CRYP_Key1Left;
 183              		.loc 1 301 0
 184 000a 8268     		ldr	r2, [r0, #8]
 185 000c 9A62     		str	r2, [r3, #40]
 302:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->K1RR = CRYP_KeyInitStruct->CRYP_Key1Right;
 186              		.loc 1 302 0
 187 000e C268     		ldr	r2, [r0, #12]
 188 0010 DA62     		str	r2, [r3, #44]
 303:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->K2LR = CRYP_KeyInitStruct->CRYP_Key2Left;
 189              		.loc 1 303 0
 190 0012 0269     		ldr	r2, [r0, #16]
 191 0014 1A63     		str	r2, [r3, #48]
 304:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->K2RR = CRYP_KeyInitStruct->CRYP_Key2Right;
 192              		.loc 1 304 0
 193 0016 4269     		ldr	r2, [r0, #20]
 194 0018 5A63     		str	r2, [r3, #52]
 305:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->K3LR = CRYP_KeyInitStruct->CRYP_Key3Left;
 195              		.loc 1 305 0
 196 001a 8269     		ldr	r2, [r0, #24]
 197 001c 9A63     		str	r2, [r3, #56]
 306:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->K3RR = CRYP_KeyInitStruct->CRYP_Key3Right;
 198              		.loc 1 306 0
 199 001e C269     		ldr	r2, [r0, #28]
 200 0020 DA63     		str	r2, [r3, #60]
 201 0022 7047     		bx	lr
 202              	.L15:
 203              		.align	2
 204              	.L14:
 205 0024 00000650 		.word	1342570496
 206              		.cfi_endproc
 207              	.LFE113:
 209              		.section	.text.CRYP_KeyStructInit,"ax",%progbits
 210              		.align	2
 211              		.global	CRYP_KeyStructInit
 212              		.thumb
 213              		.thumb_func
 215              	CRYP_KeyStructInit:
 216              	.LFB114:
 307:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** }
 308:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 309:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 310:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @brief  Fills each CRYP_KeyInitStruct member with its default value.
 311:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @param  CRYP_KeyInitStruct: pointer to a CRYP_KeyInitTypeDef structure 
 312:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *         which will be initialized.
 313:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @retval None
 314:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 315:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** void CRYP_KeyStructInit(CRYP_KeyInitTypeDef* CRYP_KeyInitStruct)
 316:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** {
 217              		.loc 1 316 0
 218              		.cfi_startproc
 219              		@ args = 0, pretend = 0, frame = 0
 220              		@ frame_needed = 0, uses_anonymous_args = 0
 221              		@ link register save eliminated.
 222              	.LVL5:
 317:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP_KeyInitStruct->CRYP_Key0Left  = 0;
 223              		.loc 1 317 0
 224 0000 0023     		movs	r3, #0
 225 0002 0360     		str	r3, [r0]
 318:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP_KeyInitStruct->CRYP_Key0Right = 0;
 226              		.loc 1 318 0
 227 0004 4360     		str	r3, [r0, #4]
 319:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP_KeyInitStruct->CRYP_Key1Left  = 0;
 228              		.loc 1 319 0
 229 0006 8360     		str	r3, [r0, #8]
 320:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP_KeyInitStruct->CRYP_Key1Right = 0;
 230              		.loc 1 320 0
 231 0008 C360     		str	r3, [r0, #12]
 321:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP_KeyInitStruct->CRYP_Key2Left  = 0;
 232              		.loc 1 321 0
 233 000a 0361     		str	r3, [r0, #16]
 322:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP_KeyInitStruct->CRYP_Key2Right = 0;
 234              		.loc 1 322 0
 235 000c 4361     		str	r3, [r0, #20]
 323:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP_KeyInitStruct->CRYP_Key3Left  = 0;
 236              		.loc 1 323 0
 237 000e 8361     		str	r3, [r0, #24]
 324:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP_KeyInitStruct->CRYP_Key3Right = 0;
 238              		.loc 1 324 0
 239 0010 C361     		str	r3, [r0, #28]
 240 0012 7047     		bx	lr
 241              		.cfi_endproc
 242              	.LFE114:
 244              		.section	.text.CRYP_IVInit,"ax",%progbits
 245              		.align	2
 246              		.global	CRYP_IVInit
 247              		.thumb
 248              		.thumb_func
 250              	CRYP_IVInit:
 251              	.LFB115:
 325:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** }
 326:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 327:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @brief  Initializes the CRYP Initialization Vectors(IV) according to the
 328:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *         specified parameters in the CRYP_IVInitStruct.
 329:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @param  CRYP_IVInitStruct: pointer to a CRYP_IVInitTypeDef structure that contains
 330:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *         the configuration information for the CRYP Initialization Vectors(IV).
 331:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @retval None
 332:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 333:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** void CRYP_IVInit(CRYP_IVInitTypeDef* CRYP_IVInitStruct)
 334:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** {
 252              		.loc 1 334 0
 253              		.cfi_startproc
 254              		@ args = 0, pretend = 0, frame = 0
 255              		@ frame_needed = 0, uses_anonymous_args = 0
 256              		@ link register save eliminated.
 257              	.LVL6:
 335:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->IV0LR = CRYP_IVInitStruct->CRYP_IV0Left;
 258              		.loc 1 335 0
 259 0000 044B     		ldr	r3, .L18
 260 0002 0268     		ldr	r2, [r0]
 261 0004 1A64     		str	r2, [r3, #64]
 336:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->IV0RR = CRYP_IVInitStruct->CRYP_IV0Right;
 262              		.loc 1 336 0
 263 0006 4268     		ldr	r2, [r0, #4]
 264 0008 5A64     		str	r2, [r3, #68]
 337:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->IV1LR = CRYP_IVInitStruct->CRYP_IV1Left;
 265              		.loc 1 337 0
 266 000a 8268     		ldr	r2, [r0, #8]
 267 000c 9A64     		str	r2, [r3, #72]
 338:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->IV1RR = CRYP_IVInitStruct->CRYP_IV1Right;
 268              		.loc 1 338 0
 269 000e C268     		ldr	r2, [r0, #12]
 270 0010 DA64     		str	r2, [r3, #76]
 271 0012 7047     		bx	lr
 272              	.L19:
 273              		.align	2
 274              	.L18:
 275 0014 00000650 		.word	1342570496
 276              		.cfi_endproc
 277              	.LFE115:
 279              		.section	.text.CRYP_IVStructInit,"ax",%progbits
 280              		.align	2
 281              		.global	CRYP_IVStructInit
 282              		.thumb
 283              		.thumb_func
 285              	CRYP_IVStructInit:
 286              	.LFB116:
 339:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** }
 340:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 341:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 342:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @brief  Fills each CRYP_IVInitStruct member with its default value.
 343:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @param  CRYP_IVInitStruct: pointer to a CRYP_IVInitTypeDef Initialization 
 344:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *         Vectors(IV) structure which will be initialized.
 345:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @retval None
 346:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 347:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** void CRYP_IVStructInit(CRYP_IVInitTypeDef* CRYP_IVInitStruct)
 348:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** {
 287              		.loc 1 348 0
 288              		.cfi_startproc
 289              		@ args = 0, pretend = 0, frame = 0
 290              		@ frame_needed = 0, uses_anonymous_args = 0
 291              		@ link register save eliminated.
 292              	.LVL7:
 349:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP_IVInitStruct->CRYP_IV0Left  = 0;
 293              		.loc 1 349 0
 294 0000 0023     		movs	r3, #0
 295 0002 0360     		str	r3, [r0]
 350:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP_IVInitStruct->CRYP_IV0Right = 0;
 296              		.loc 1 350 0
 297 0004 4360     		str	r3, [r0, #4]
 351:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP_IVInitStruct->CRYP_IV1Left  = 0;
 298              		.loc 1 351 0
 299 0006 8360     		str	r3, [r0, #8]
 352:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP_IVInitStruct->CRYP_IV1Right = 0;
 300              		.loc 1 352 0
 301 0008 C360     		str	r3, [r0, #12]
 302 000a 7047     		bx	lr
 303              		.cfi_endproc
 304              	.LFE116:
 306              		.section	.text.CRYP_PhaseConfig,"ax",%progbits
 307              		.align	2
 308              		.global	CRYP_PhaseConfig
 309              		.thumb
 310              		.thumb_func
 312              	CRYP_PhaseConfig:
 313              	.LFB117:
 353:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** }
 354:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 355:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 356:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @brief  Configures the AES-CCM and AES-GCM phases
 357:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @note   This function is used only with AES-CCM or AES-GCM Algorithms  
 358:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @param  CRYP_Phase: specifies the CRYP AES-CCM and AES-GCM phase to be configured.
 359:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *           This parameter can be one of the following values:
 360:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *            @arg CRYP_Phase_Init: Initialization phase
 361:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *            @arg CRYP_Phase_Header: Header phase
 362:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *            @arg CRYP_Phase_Payload: Payload phase
 363:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *            @arg CRYP_Phase_Final: Final phase 
 364:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @retval None
 365:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 366:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** void CRYP_PhaseConfig(uint32_t CRYP_Phase)
 367:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** { uint32_t tempcr = 0;
 314              		.loc 1 367 0
 315              		.cfi_startproc
 316              		@ args = 0, pretend = 0, frame = 0
 317              		@ frame_needed = 0, uses_anonymous_args = 0
 318              		@ link register save eliminated.
 319              	.LVL8:
 368:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 369:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Check the parameter */
 370:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   assert_param(IS_CRYP_PHASE(CRYP_Phase));
 371:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 372:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Get the CR register */
 373:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   tempcr = CRYP->CR;
 320              		.loc 1 373 0
 321 0000 034A     		ldr	r2, .L22
 322 0002 1368     		ldr	r3, [r2]
 323              	.LVL9:
 374:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   
 375:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Reset the phase configuration bits: GCMP_CCMPH */
 376:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   tempcr &= (uint32_t)(~CRYP_CR_GCM_CCMPH);
 324              		.loc 1 376 0
 325 0004 23F44033 		bic	r3, r3, #196608
 326              	.LVL10:
 377:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Set the selected phase */
 378:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   tempcr |= (uint32_t)CRYP_Phase;
 327              		.loc 1 378 0
 328 0008 1843     		orrs	r0, r0, r3
 329              	.LVL11:
 379:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 380:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Set the CR register */ 
 381:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->CR = tempcr;    
 330              		.loc 1 381 0
 331 000a 1060     		str	r0, [r2]
 332 000c 7047     		bx	lr
 333              	.L23:
 334 000e 00BF     		.align	2
 335              	.L22:
 336 0010 00000650 		.word	1342570496
 337              		.cfi_endproc
 338              	.LFE117:
 340              		.section	.text.CRYP_FIFOFlush,"ax",%progbits
 341              		.align	2
 342              		.global	CRYP_FIFOFlush
 343              		.thumb
 344              		.thumb_func
 346              	CRYP_FIFOFlush:
 347              	.LFB118:
 382:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** }
 383:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 384:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 385:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @brief  Flushes the IN and OUT FIFOs (that is read and write pointers of the 
 386:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *         FIFOs are reset)
 387:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @note   The FIFOs must be flushed only when BUSY flag is reset.  
 388:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @param  None
 389:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @retval None
 390:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 391:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** void CRYP_FIFOFlush(void)
 392:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** {
 348              		.loc 1 392 0
 349              		.cfi_startproc
 350              		@ args = 0, pretend = 0, frame = 0
 351              		@ frame_needed = 0, uses_anonymous_args = 0
 352              		@ link register save eliminated.
 393:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Reset the read and write pointers of the FIFOs */
 394:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->CR |= CRYP_CR_FFLUSH;
 353              		.loc 1 394 0
 354 0000 024A     		ldr	r2, .L25
 355 0002 1368     		ldr	r3, [r2]
 356 0004 43F48043 		orr	r3, r3, #16384
 357 0008 1360     		str	r3, [r2]
 358 000a 7047     		bx	lr
 359              	.L26:
 360              		.align	2
 361              	.L25:
 362 000c 00000650 		.word	1342570496
 363              		.cfi_endproc
 364              	.LFE118:
 366              		.section	.text.CRYP_Cmd,"ax",%progbits
 367              		.align	2
 368              		.global	CRYP_Cmd
 369              		.thumb
 370              		.thumb_func
 372              	CRYP_Cmd:
 373              	.LFB119:
 395:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** }
 396:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 397:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 398:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @brief  Enables or disables the CRYP peripheral.
 399:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @param  NewState: new state of the CRYP peripheral.
 400:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          This parameter can be: ENABLE or DISABLE.
 401:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @retval None
 402:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 403:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** void CRYP_Cmd(FunctionalState NewState)
 404:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** {
 374              		.loc 1 404 0
 375              		.cfi_startproc
 376              		@ args = 0, pretend = 0, frame = 0
 377              		@ frame_needed = 0, uses_anonymous_args = 0
 378              		@ link register save eliminated.
 379              	.LVL12:
 405:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Check the parameters */
 406:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 407:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 408:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   if (NewState != DISABLE)
 409:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   {
 410:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     /* Enable the Cryptographic processor */
 411:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP->CR |= CRYP_CR_CRYPEN;
 380              		.loc 1 411 0
 381 0000 054A     		ldr	r2, .L31
 382 0002 1368     		ldr	r3, [r2]
 408:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   {
 383              		.loc 1 408 0
 384 0004 18B9     		cbnz	r0, .L30
 412:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   }
 413:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   else
 414:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   {
 415:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     /* Disable the Cryptographic processor */
 416:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP->CR &= ~CRYP_CR_CRYPEN;
 385              		.loc 1 416 0
 386 0006 23F40043 		bic	r3, r3, #32768
 387 000a 1360     		str	r3, [r2]
 388 000c 7047     		bx	lr
 389              	.L30:
 411:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   }
 390              		.loc 1 411 0
 391 000e 43F40043 		orr	r3, r3, #32768
 392 0012 1360     		str	r3, [r2]
 393 0014 7047     		bx	lr
 394              	.L32:
 395 0016 00BF     		.align	2
 396              	.L31:
 397 0018 00000650 		.word	1342570496
 398              		.cfi_endproc
 399              	.LFE119:
 401              		.section	.text.CRYP_DataIn,"ax",%progbits
 402              		.align	2
 403              		.global	CRYP_DataIn
 404              		.thumb
 405              		.thumb_func
 407              	CRYP_DataIn:
 408              	.LFB120:
 417:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   }
 418:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** }
 419:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 420:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @}
 421:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 422:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   
 423:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /** @defgroup CRYP_Group2 CRYP Data processing functions
 424:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  *  @brief    CRYP Data processing functions
 425:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  *
 426:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** @verbatim    
 427:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  ===============================================================================
 428:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                     ##### CRYP Data processing functions #####
 429:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  ===============================================================================  
 430:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  [..] This section provides functions allowing the encryption and decryption 
 431:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****       operations: 
 432:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****    (+) Enter data to be treated in the IN FIFO : using CRYP_DataIn() function.
 433:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****    (+) Get the data result from the OUT FIFO : using CRYP_DataOut() function.
 434:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 435:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** @endverbatim
 436:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @{
 437:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 438:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 439:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 440:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @brief  Writes data in the Data Input register (DIN).
 441:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @note   After the DIN register has been read once or several times, 
 442:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *         the FIFO must be flushed (using CRYP_FIFOFlush() function).  
 443:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @param  Data: data to write in Data Input register
 444:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @retval None
 445:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 446:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** void CRYP_DataIn(uint32_t Data)
 447:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** {
 409              		.loc 1 447 0
 410              		.cfi_startproc
 411              		@ args = 0, pretend = 0, frame = 0
 412              		@ frame_needed = 0, uses_anonymous_args = 0
 413              		@ link register save eliminated.
 414              	.LVL13:
 448:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->DR = Data;
 415              		.loc 1 448 0
 416 0000 014B     		ldr	r3, .L34
 417 0002 9860     		str	r0, [r3, #8]
 418 0004 7047     		bx	lr
 419              	.L35:
 420 0006 00BF     		.align	2
 421              	.L34:
 422 0008 00000650 		.word	1342570496
 423              		.cfi_endproc
 424              	.LFE120:
 426              		.section	.text.CRYP_DataOut,"ax",%progbits
 427              		.align	2
 428              		.global	CRYP_DataOut
 429              		.thumb
 430              		.thumb_func
 432              	CRYP_DataOut:
 433              	.LFB121:
 449:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** }
 450:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 451:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 452:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @brief  Returns the last data entered into the output FIFO.
 453:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @param  None
 454:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @retval Last data entered into the output FIFO.
 455:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 456:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** uint32_t CRYP_DataOut(void)
 457:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** {
 434              		.loc 1 457 0
 435              		.cfi_startproc
 436              		@ args = 0, pretend = 0, frame = 0
 437              		@ frame_needed = 0, uses_anonymous_args = 0
 438              		@ link register save eliminated.
 458:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   return CRYP->DOUT;
 439              		.loc 1 458 0
 440 0000 014B     		ldr	r3, .L37
 441 0002 D868     		ldr	r0, [r3, #12]
 459:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** }
 442              		.loc 1 459 0
 443 0004 7047     		bx	lr
 444              	.L38:
 445 0006 00BF     		.align	2
 446              	.L37:
 447 0008 00000650 		.word	1342570496
 448              		.cfi_endproc
 449              	.LFE121:
 451              		.section	.text.CRYP_SaveContext,"ax",%progbits
 452              		.align	2
 453              		.global	CRYP_SaveContext
 454              		.thumb
 455              		.thumb_func
 457              	CRYP_SaveContext:
 458              	.LFB122:
 460:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 461:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @}
 462:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 463:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   
 464:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /** @defgroup CRYP_Group3 Context swapping functions
 465:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  *  @brief   Context swapping functions
 466:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  *
 467:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** @verbatim   
 468:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  ===============================================================================
 469:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                       ##### Context swapping functions #####
 470:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  ===============================================================================  
 471:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  [..] This section provides functions allowing to save and store CRYP Context
 472:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 473:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  [..] It is possible to interrupt an encryption/ decryption/ key generation process 
 474:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****       to perform another processing with a higher priority, and to complete the 
 475:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****       interrupted process later on, when the higher-priority task is complete. To do 
 476:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****       so, the context of the interrupted task must be saved from the CRYP registers 
 477:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****       to memory, and then be restored from memory to the CRYP registers.
 478:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****    
 479:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****    (#) To save the current context, use CRYP_SaveContext() function
 480:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****    (#) To restore the saved context, use CRYP_RestoreContext() function 
 481:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 482:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** @endverbatim
 483:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @{
 484:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 485:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   
 486:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 487:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @brief  Saves the CRYP peripheral Context. 
 488:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @note   This function stops DMA transfer before to save the context. After 
 489:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *         restoring the context, you have to enable the DMA again (if the DMA
 490:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *         was previously used).
 491:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @param  CRYP_ContextSave: pointer to a CRYP_Context structure that contains
 492:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *         the repository for current context.
 493:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @param  CRYP_KeyInitStruct: pointer to a CRYP_KeyInitTypeDef structure that 
 494:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *         contains the configuration information for the CRYP Keys.  
 495:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @retval None
 496:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 497:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** ErrorStatus CRYP_SaveContext(CRYP_Context* CRYP_ContextSave,
 498:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                              CRYP_KeyInitTypeDef* CRYP_KeyInitStruct)
 499:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** {
 459              		.loc 1 499 0
 460              		.cfi_startproc
 461              		@ args = 0, pretend = 0, frame = 8
 462              		@ frame_needed = 0, uses_anonymous_args = 0
 463              	.LVL14:
 464 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 465              	.LCFI4:
 466              		.cfi_def_cfa_offset 32
 467              		.cfi_offset 4, -32
 468              		.cfi_offset 5, -28
 469              		.cfi_offset 6, -24
 470              		.cfi_offset 7, -20
 471              		.cfi_offset 8, -16
 472              		.cfi_offset 9, -12
 473              		.cfi_offset 10, -8
 474              		.cfi_offset 14, -4
 475 0004 82B0     		sub	sp, sp, #8
 476              	.LCFI5:
 477              		.cfi_def_cfa_offset 40
 500:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   __IO uint32_t timeout = 0;
 501:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   uint32_t ckeckmask = 0, bitstatus;    
 502:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   ErrorStatus status = ERROR;
 503:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 504:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Stop DMA transfers on the IN FIFO by clearing the DIEN bit in the CRYP_DMACR */
 505:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->DMACR &= ~(uint32_t)CRYP_DMACR_DIEN;
 478              		.loc 1 505 0
 479 0006 3C4C     		ldr	r4, .L50
 500:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   __IO uint32_t timeout = 0;
 480              		.loc 1 500 0
 481 0008 0023     		movs	r3, #0
 482 000a 0193     		str	r3, [sp, #4]
 483              	.LVL15:
 484              		.loc 1 505 0
 485 000c 2369     		ldr	r3, [r4, #16]
 486 000e 23F00103 		bic	r3, r3, #1
 487 0012 2361     		str	r3, [r4, #16]
 506:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     
 507:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Wait until both the IN and OUT FIFOs are empty  
 508:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     (IFEM=1 and OFNE=0 in the CRYP_SR register) and the 
 509:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****      BUSY bit is cleared. */
 510:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 511:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   if ((CRYP->CR & (uint32_t)(CRYP_CR_ALGOMODE_TDES_ECB | CRYP_CR_ALGOMODE_TDES_CBC)) != (uint32_t)0
 488              		.loc 1 511 0
 489 0014 2368     		ldr	r3, [r4]
 512:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   { 
 513:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     ckeckmask =  CRYP_SR_IFEM | CRYP_SR_BUSY ;
 514:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   }
 515:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   else /* AES or DES */
 516:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   {
 517:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     ckeckmask =  CRYP_SR_IFEM | CRYP_SR_BUSY | CRYP_SR_OFNE;
 490              		.loc 1 517 0
 491 0016 13F0080F 		tst	r3, #8
 492 001a 14BF     		ite	ne
 493 001c 1125     		movne	r5, #17
 494 001e 1525     		moveq	r5, #21
 518:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   }           
 519:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****    
 520:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   do 
 521:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   {
 522:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     bitstatus = CRYP->SR & ckeckmask;
 523:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     timeout++;
 524:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   }
 525:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   while ((timeout != MAX_TIMEOUT) && (bitstatus != CRYP_SR_IFEM));
 495              		.loc 1 525 0
 496 0020 4FF6FF76 		movw	r6, #65535
 497 0024 01E0     		b	.L42
 498              	.LVL16:
 499              	.L48:
 500              		.loc 1 525 0 is_stmt 0 discriminator 1
 501 0026 012A     		cmp	r2, #1
 502 0028 08D0     		beq	.L41
 503              	.LVL17:
 504              	.L42:
 522:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     timeout++;
 505              		.loc 1 522 0 is_stmt 1 discriminator 2
 506 002a 6268     		ldr	r2, [r4, #4]
 523:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   }
 507              		.loc 1 523 0 discriminator 2
 508 002c 019B     		ldr	r3, [sp, #4]
 509 002e 0133     		adds	r3, r3, #1
 510 0030 0193     		str	r3, [sp, #4]
 511              		.loc 1 525 0 discriminator 2
 512 0032 019B     		ldr	r3, [sp, #4]
 513 0034 B342     		cmp	r3, r6
 522:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     timeout++;
 514              		.loc 1 522 0 discriminator 2
 515 0036 02EA0502 		and	r2, r2, r5
 516              	.LVL18:
 517              		.loc 1 525 0 discriminator 2
 518 003a F4D1     		bne	.L48
 519              	.L41:
 526:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****      
 527:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   if ((CRYP->SR & ckeckmask) != CRYP_SR_IFEM)
 520              		.loc 1 527 0
 521 003c 2E4B     		ldr	r3, .L50
 522 003e 5A68     		ldr	r2, [r3, #4]
 523              	.LVL19:
 524 0040 1540     		ands	r5, r5, r2
 525              	.LVL20:
 526 0042 012D     		cmp	r5, #1
 527 0044 03D0     		beq	.L49
 528:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   {
 529:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     status = ERROR;
 528              		.loc 1 529 0
 529 0046 0020     		movs	r0, #0
 530              	.LVL21:
 530:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   }
 531:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   else
 532:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   {      
 533:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     /* Stop DMA transfers on the OUT FIFO by 
 534:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****        - writing the DOEN bit to 0 in the CRYP_DMACR register 
 535:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****        - and clear the CRYPEN bit. */
 536:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 537:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP->DMACR &= ~(uint32_t)CRYP_DMACR_DOEN;
 538:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP->CR &= ~(uint32_t)CRYP_CR_CRYPEN;
 539:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 540:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     /* Save the current configuration (bit 19, bit[17:16] and bits [9:2] in the CRYP_CR register) *
 541:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CR_CurrentConfig  = CRYP->CR & (CRYP_CR_GCM_CCMPH |
 542:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                                                       CRYP_CR_KEYSIZE  |
 543:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                                                       CRYP_CR_DATATYPE |
 544:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                                                       CRYP_CR_ALGOMODE |
 545:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                                                       CRYP_CR_ALGODIR);
 546:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 547:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     /* and, if not in ECB mode, the initialization vectors. */
 548:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_IV0LR = CRYP->IV0LR;
 549:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_IV0RR = CRYP->IV0RR;
 550:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_IV1LR = CRYP->IV1LR;
 551:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_IV1RR = CRYP->IV1RR;
 552:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 553:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     /* save The key value */
 554:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_K0LR = CRYP_KeyInitStruct->CRYP_Key0Left; 
 555:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_K0RR = CRYP_KeyInitStruct->CRYP_Key0Right; 
 556:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_K1LR = CRYP_KeyInitStruct->CRYP_Key1Left; 
 557:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_K1RR = CRYP_KeyInitStruct->CRYP_Key1Right; 
 558:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_K2LR = CRYP_KeyInitStruct->CRYP_Key2Left; 
 559:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_K2RR = CRYP_KeyInitStruct->CRYP_Key2Right; 
 560:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_K3LR = CRYP_KeyInitStruct->CRYP_Key3Left; 
 561:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_K3RR = CRYP_KeyInitStruct->CRYP_Key3Right; 
 562:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 563:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     /* Save the content of context swap registers */
 564:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMCCMR[0] = CRYP->CSGCMCCM0R;
 565:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMCCMR[1] = CRYP->CSGCMCCM1R;
 566:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMCCMR[2] = CRYP->CSGCMCCM2R;
 567:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMCCMR[3] = CRYP->CSGCMCCM3R;
 568:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMCCMR[4] = CRYP->CSGCMCCM4R;
 569:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMCCMR[5] = CRYP->CSGCMCCM5R;
 570:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMCCMR[6] = CRYP->CSGCMCCM6R;
 571:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMCCMR[7] = CRYP->CSGCMCCM7R;
 572:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     
 573:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMR[0] = CRYP->CSGCM0R;
 574:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMR[1] = CRYP->CSGCM1R;
 575:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMR[2] = CRYP->CSGCM2R;
 576:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMR[3] = CRYP->CSGCM3R;
 577:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMR[4] = CRYP->CSGCM4R;
 578:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMR[5] = CRYP->CSGCM5R;
 579:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMR[6] = CRYP->CSGCM6R;
 580:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMR[7] = CRYP->CSGCM7R;
 581:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     
 582:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****    /* When needed, save the DMA status (pointers for IN and OUT messages, 
 583:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****       number of remaining bytes, etc.) */
 584:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****      
 585:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     status = SUCCESS;
 586:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   }
 587:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 588:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****    return status;
 589:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** }
 531              		.loc 1 589 0
 532 0048 02B0     		add	sp, sp, #8
 533              	.LCFI6:
 534              		.cfi_remember_state
 535              		.cfi_def_cfa_offset 32
 536              		@ sp needed
 537 004a BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 538              	.LVL22:
 539              	.L49:
 540              	.LCFI7:
 541              		.cfi_restore_state
 537:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP->CR &= ~(uint32_t)CRYP_CR_CRYPEN;
 542              		.loc 1 537 0
 543 004e 1C69     		ldr	r4, [r3, #16]
 541:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                                                       CRYP_CR_KEYSIZE  |
 544              		.loc 1 541 0
 545 0050 2A4A     		ldr	r2, .L50+4
 537:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP->CR &= ~(uint32_t)CRYP_CR_CRYPEN;
 546              		.loc 1 537 0
 547 0052 24F00204 		bic	r4, r4, #2
 548 0056 1C61     		str	r4, [r3, #16]
 538:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 549              		.loc 1 538 0
 550 0058 1C68     		ldr	r4, [r3]
 551 005a 24F40044 		bic	r4, r4, #32768
 552 005e 1C60     		str	r4, [r3]
 541:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                                                       CRYP_CR_KEYSIZE  |
 553              		.loc 1 541 0
 554 0060 D3F800A0 		ldr	r10, [r3]
 554:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_K0RR = CRYP_KeyInitStruct->CRYP_Key0Right; 
 555              		.loc 1 554 0
 556 0064 D1F80090 		ldr	r9, [r1]
 558:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_K2RR = CRYP_KeyInitStruct->CRYP_Key2Right; 
 557              		.loc 1 558 0
 558 0068 0F69     		ldr	r7, [r1, #16]
 559:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_K3LR = CRYP_KeyInitStruct->CRYP_Key3Left; 
 559              		.loc 1 559 0
 560 006a 4E69     		ldr	r6, [r1, #20]
 560:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_K3RR = CRYP_KeyInitStruct->CRYP_Key3Right; 
 561              		.loc 1 560 0
 562 006c 8C69     		ldr	r4, [r1, #24]
 541:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                                                       CRYP_CR_KEYSIZE  |
 563              		.loc 1 541 0
 564 006e 0AEA0202 		and	r2, r10, r2
 557:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_K2LR = CRYP_KeyInitStruct->CRYP_Key2Left; 
 565              		.loc 1 557 0
 566 0072 01F10408 		add	r8, r1, #4
 567 0076 98E80051 		ldmia	r8, {r8, ip, lr}
 561:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 568              		.loc 1 561 0
 569 007a C969     		ldr	r1, [r1, #28]
 570              	.LVL23:
 541:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                                                       CRYP_CR_KEYSIZE  |
 571              		.loc 1 541 0
 572 007c 0260     		str	r2, [r0]
 548:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_IV0RR = CRYP->IV0RR;
 573              		.loc 1 548 0
 574 007e 1A6C     		ldr	r2, [r3, #64]
 575 0080 4260     		str	r2, [r0, #4]
 549:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_IV1LR = CRYP->IV1LR;
 576              		.loc 1 549 0
 577 0082 5A6C     		ldr	r2, [r3, #68]
 578 0084 8260     		str	r2, [r0, #8]
 550:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_IV1RR = CRYP->IV1RR;
 579              		.loc 1 550 0
 580 0086 9A6C     		ldr	r2, [r3, #72]
 581 0088 C260     		str	r2, [r0, #12]
 551:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 582              		.loc 1 551 0
 583 008a DA6C     		ldr	r2, [r3, #76]
 584 008c 0261     		str	r2, [r0, #16]
 554:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_K0RR = CRYP_KeyInitStruct->CRYP_Key0Right; 
 585              		.loc 1 554 0
 586 008e C0F81490 		str	r9, [r0, #20]
 555:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_K1LR = CRYP_KeyInitStruct->CRYP_Key1Left; 
 587              		.loc 1 555 0
 588 0092 C0F81880 		str	r8, [r0, #24]
 556:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_K1RR = CRYP_KeyInitStruct->CRYP_Key1Right; 
 589              		.loc 1 556 0
 590 0096 C0F81CC0 		str	ip, [r0, #28]
 557:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_K2LR = CRYP_KeyInitStruct->CRYP_Key2Left; 
 591              		.loc 1 557 0
 592 009a C0F820E0 		str	lr, [r0, #32]
 558:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_K2RR = CRYP_KeyInitStruct->CRYP_Key2Right; 
 593              		.loc 1 558 0
 594 009e 4762     		str	r7, [r0, #36]
 559:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_K3LR = CRYP_KeyInitStruct->CRYP_Key3Left; 
 595              		.loc 1 559 0
 596 00a0 8662     		str	r6, [r0, #40]
 560:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_K3RR = CRYP_KeyInitStruct->CRYP_Key3Right; 
 597              		.loc 1 560 0
 598 00a2 C462     		str	r4, [r0, #44]
 561:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 599              		.loc 1 561 0
 600 00a4 0163     		str	r1, [r0, #48]
 564:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMCCMR[1] = CRYP->CSGCMCCM1R;
 601              		.loc 1 564 0
 602 00a6 1A6D     		ldr	r2, [r3, #80]
 603 00a8 4263     		str	r2, [r0, #52]
 565:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMCCMR[2] = CRYP->CSGCMCCM2R;
 604              		.loc 1 565 0
 605 00aa 5A6D     		ldr	r2, [r3, #84]
 606 00ac 8263     		str	r2, [r0, #56]
 566:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMCCMR[3] = CRYP->CSGCMCCM3R;
 607              		.loc 1 566 0
 608 00ae 9A6D     		ldr	r2, [r3, #88]
 609 00b0 C263     		str	r2, [r0, #60]
 567:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMCCMR[4] = CRYP->CSGCMCCM4R;
 610              		.loc 1 567 0
 611 00b2 DA6D     		ldr	r2, [r3, #92]
 612 00b4 0264     		str	r2, [r0, #64]
 568:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMCCMR[5] = CRYP->CSGCMCCM5R;
 613              		.loc 1 568 0
 614 00b6 1A6E     		ldr	r2, [r3, #96]
 615 00b8 4264     		str	r2, [r0, #68]
 569:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMCCMR[6] = CRYP->CSGCMCCM6R;
 616              		.loc 1 569 0
 617 00ba 5A6E     		ldr	r2, [r3, #100]
 618 00bc 8264     		str	r2, [r0, #72]
 570:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMCCMR[7] = CRYP->CSGCMCCM7R;
 619              		.loc 1 570 0
 620 00be 9A6E     		ldr	r2, [r3, #104]
 621 00c0 C264     		str	r2, [r0, #76]
 571:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     
 622              		.loc 1 571 0
 623 00c2 DA6E     		ldr	r2, [r3, #108]
 624 00c4 0265     		str	r2, [r0, #80]
 573:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMR[1] = CRYP->CSGCM1R;
 625              		.loc 1 573 0
 626 00c6 1A6F     		ldr	r2, [r3, #112]
 627 00c8 4265     		str	r2, [r0, #84]
 574:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMR[2] = CRYP->CSGCM2R;
 628              		.loc 1 574 0
 629 00ca 5A6F     		ldr	r2, [r3, #116]
 630 00cc 8265     		str	r2, [r0, #88]
 575:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMR[3] = CRYP->CSGCM3R;
 631              		.loc 1 575 0
 632 00ce 9A6F     		ldr	r2, [r3, #120]
 633 00d0 C265     		str	r2, [r0, #92]
 576:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMR[4] = CRYP->CSGCM4R;
 634              		.loc 1 576 0
 635 00d2 DA6F     		ldr	r2, [r3, #124]
 636 00d4 0266     		str	r2, [r0, #96]
 577:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMR[5] = CRYP->CSGCM5R;
 637              		.loc 1 577 0
 638 00d6 D3F88020 		ldr	r2, [r3, #128]
 639 00da 4266     		str	r2, [r0, #100]
 578:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMR[6] = CRYP->CSGCM6R;
 640              		.loc 1 578 0
 641 00dc D3F88420 		ldr	r2, [r3, #132]
 642 00e0 8266     		str	r2, [r0, #104]
 579:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMR[7] = CRYP->CSGCM7R;
 643              		.loc 1 579 0
 644 00e2 D3F88820 		ldr	r2, [r3, #136]
 645 00e6 C266     		str	r2, [r0, #108]
 580:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     
 646              		.loc 1 580 0
 647 00e8 D3F88C30 		ldr	r3, [r3, #140]
 648 00ec 0367     		str	r3, [r0, #112]
 649              	.LVL24:
 585:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   }
 650              		.loc 1 585 0
 651 00ee 2846     		mov	r0, r5
 652              	.LVL25:
 653              		.loc 1 589 0
 654 00f0 02B0     		add	sp, sp, #8
 655              	.LCFI8:
 656              		.cfi_def_cfa_offset 32
 657              		@ sp needed
 658 00f2 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 659              	.L51:
 660 00f6 00BF     		.align	2
 661              	.L50:
 662 00f8 00000650 		.word	1342570496
 663 00fc FC030B00 		.word	721916
 664              		.cfi_endproc
 665              	.LFE122:
 667              		.section	.text.CRYP_RestoreContext,"ax",%progbits
 668              		.align	2
 669              		.global	CRYP_RestoreContext
 670              		.thumb
 671              		.thumb_func
 673              	CRYP_RestoreContext:
 674              	.LFB123:
 590:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 591:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 592:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @brief  Restores the CRYP peripheral Context.
 593:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @note   Since teh DMA transfer is stopped in CRYP_SaveContext() function,
 594:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *         after restoring the context, you have to enable the DMA again (if the
 595:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *         DMA was previously used).  
 596:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @param  CRYP_ContextRestore: pointer to a CRYP_Context structure that contains
 597:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *         the repository for saved context.
 598:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @note   The data that were saved during context saving must be rewrited into
 599:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *         the IN FIFO.
 600:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @retval None
 601:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 602:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** void CRYP_RestoreContext(CRYP_Context* CRYP_ContextRestore)  
 603:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** {
 675              		.loc 1 603 0
 676              		.cfi_startproc
 677              		@ args = 0, pretend = 0, frame = 0
 678              		@ frame_needed = 0, uses_anonymous_args = 0
 679              		@ link register save eliminated.
 680              	.LVL26:
 604:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 605:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Configure the processor with the saved configuration */
 606:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->CR = CRYP_ContextRestore->CR_CurrentConfig;
 681              		.loc 1 606 0
 682 0000 214B     		ldr	r3, .L53
 683 0002 0268     		ldr	r2, [r0]
 684 0004 1A60     		str	r2, [r3]
 607:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 608:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* restore The key value */
 609:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->K0LR = CRYP_ContextRestore->CRYP_K0LR; 
 685              		.loc 1 609 0
 686 0006 4269     		ldr	r2, [r0, #20]
 687 0008 1A62     		str	r2, [r3, #32]
 610:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->K0RR = CRYP_ContextRestore->CRYP_K0RR;
 688              		.loc 1 610 0
 689 000a 8269     		ldr	r2, [r0, #24]
 690 000c 5A62     		str	r2, [r3, #36]
 611:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->K1LR = CRYP_ContextRestore->CRYP_K1LR;
 691              		.loc 1 611 0
 692 000e C269     		ldr	r2, [r0, #28]
 693 0010 9A62     		str	r2, [r3, #40]
 612:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->K1RR = CRYP_ContextRestore->CRYP_K1RR;
 694              		.loc 1 612 0
 695 0012 026A     		ldr	r2, [r0, #32]
 696 0014 DA62     		str	r2, [r3, #44]
 613:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->K2LR = CRYP_ContextRestore->CRYP_K2LR;
 697              		.loc 1 613 0
 698 0016 426A     		ldr	r2, [r0, #36]
 699 0018 1A63     		str	r2, [r3, #48]
 614:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->K2RR = CRYP_ContextRestore->CRYP_K2RR;
 700              		.loc 1 614 0
 701 001a 826A     		ldr	r2, [r0, #40]
 702 001c 5A63     		str	r2, [r3, #52]
 615:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->K3LR = CRYP_ContextRestore->CRYP_K3LR;
 703              		.loc 1 615 0
 704 001e C26A     		ldr	r2, [r0, #44]
 705 0020 9A63     		str	r2, [r3, #56]
 616:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->K3RR = CRYP_ContextRestore->CRYP_K3RR;
 706              		.loc 1 616 0
 707 0022 026B     		ldr	r2, [r0, #48]
 708 0024 DA63     		str	r2, [r3, #60]
 617:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 618:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* and the initialization vectors. */
 619:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->IV0LR = CRYP_ContextRestore->CRYP_IV0LR;
 709              		.loc 1 619 0
 710 0026 4268     		ldr	r2, [r0, #4]
 711 0028 1A64     		str	r2, [r3, #64]
 620:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->IV0RR = CRYP_ContextRestore->CRYP_IV0RR;
 712              		.loc 1 620 0
 713 002a 8268     		ldr	r2, [r0, #8]
 714 002c 5A64     		str	r2, [r3, #68]
 621:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->IV1LR = CRYP_ContextRestore->CRYP_IV1LR;
 715              		.loc 1 621 0
 716 002e C268     		ldr	r2, [r0, #12]
 717 0030 9A64     		str	r2, [r3, #72]
 622:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->IV1RR = CRYP_ContextRestore->CRYP_IV1RR;
 718              		.loc 1 622 0
 719 0032 0269     		ldr	r2, [r0, #16]
 720 0034 DA64     		str	r2, [r3, #76]
 623:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 624:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Restore the content of context swap registers */
 625:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->CSGCMCCM0R = CRYP_ContextRestore->CRYP_CSGCMCCMR[0];
 721              		.loc 1 625 0
 722 0036 426B     		ldr	r2, [r0, #52]
 723 0038 1A65     		str	r2, [r3, #80]
 626:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->CSGCMCCM1R = CRYP_ContextRestore->CRYP_CSGCMCCMR[1];
 724              		.loc 1 626 0
 725 003a 826B     		ldr	r2, [r0, #56]
 726 003c 5A65     		str	r2, [r3, #84]
 627:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->CSGCMCCM2R = CRYP_ContextRestore->CRYP_CSGCMCCMR[2];
 727              		.loc 1 627 0
 728 003e C26B     		ldr	r2, [r0, #60]
 729 0040 9A65     		str	r2, [r3, #88]
 628:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->CSGCMCCM3R = CRYP_ContextRestore->CRYP_CSGCMCCMR[3];
 730              		.loc 1 628 0
 731 0042 026C     		ldr	r2, [r0, #64]
 732 0044 DA65     		str	r2, [r3, #92]
 629:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->CSGCMCCM4R = CRYP_ContextRestore->CRYP_CSGCMCCMR[4];
 733              		.loc 1 629 0
 734 0046 426C     		ldr	r2, [r0, #68]
 735 0048 1A66     		str	r2, [r3, #96]
 630:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->CSGCMCCM5R = CRYP_ContextRestore->CRYP_CSGCMCCMR[5];
 736              		.loc 1 630 0
 737 004a 826C     		ldr	r2, [r0, #72]
 738 004c 5A66     		str	r2, [r3, #100]
 631:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->CSGCMCCM6R = CRYP_ContextRestore->CRYP_CSGCMCCMR[6];
 739              		.loc 1 631 0
 740 004e C26C     		ldr	r2, [r0, #76]
 741 0050 9A66     		str	r2, [r3, #104]
 632:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->CSGCMCCM7R = CRYP_ContextRestore->CRYP_CSGCMCCMR[7];
 742              		.loc 1 632 0
 743 0052 026D     		ldr	r2, [r0, #80]
 744 0054 DA66     		str	r2, [r3, #108]
 633:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   
 634:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->CSGCM0R = CRYP_ContextRestore->CRYP_CSGCMR[0];
 745              		.loc 1 634 0
 746 0056 426D     		ldr	r2, [r0, #84]
 747 0058 1A67     		str	r2, [r3, #112]
 635:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->CSGCM1R = CRYP_ContextRestore->CRYP_CSGCMR[1];
 748              		.loc 1 635 0
 749 005a 826D     		ldr	r2, [r0, #88]
 750 005c 5A67     		str	r2, [r3, #116]
 636:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->CSGCM2R = CRYP_ContextRestore->CRYP_CSGCMR[2];
 751              		.loc 1 636 0
 752 005e C26D     		ldr	r2, [r0, #92]
 753 0060 9A67     		str	r2, [r3, #120]
 637:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->CSGCM3R = CRYP_ContextRestore->CRYP_CSGCMR[3];
 754              		.loc 1 637 0
 755 0062 026E     		ldr	r2, [r0, #96]
 756 0064 DA67     		str	r2, [r3, #124]
 638:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->CSGCM4R = CRYP_ContextRestore->CRYP_CSGCMR[4];
 757              		.loc 1 638 0
 758 0066 426E     		ldr	r2, [r0, #100]
 759 0068 C3F88020 		str	r2, [r3, #128]
 639:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->CSGCM5R = CRYP_ContextRestore->CRYP_CSGCMR[5];
 760              		.loc 1 639 0
 761 006c 826E     		ldr	r2, [r0, #104]
 762 006e C3F88420 		str	r2, [r3, #132]
 640:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->CSGCM6R = CRYP_ContextRestore->CRYP_CSGCMR[6];
 763              		.loc 1 640 0
 764 0072 C26E     		ldr	r2, [r0, #108]
 765 0074 C3F88820 		str	r2, [r3, #136]
 641:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->CSGCM7R = CRYP_ContextRestore->CRYP_CSGCMR[7];
 766              		.loc 1 641 0
 767 0078 026F     		ldr	r2, [r0, #112]
 768 007a C3F88C20 		str	r2, [r3, #140]
 642:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   
 643:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Enable the cryptographic processor */
 644:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->CR |= CRYP_CR_CRYPEN;
 769              		.loc 1 644 0
 770 007e 1A68     		ldr	r2, [r3]
 771 0080 42F40042 		orr	r2, r2, #32768
 772 0084 1A60     		str	r2, [r3]
 773 0086 7047     		bx	lr
 774              	.L54:
 775              		.align	2
 776              	.L53:
 777 0088 00000650 		.word	1342570496
 778              		.cfi_endproc
 779              	.LFE123:
 781              		.section	.text.CRYP_DMACmd,"ax",%progbits
 782              		.align	2
 783              		.global	CRYP_DMACmd
 784              		.thumb
 785              		.thumb_func
 787              	CRYP_DMACmd:
 788              	.LFB124:
 645:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** }
 646:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 647:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @}
 648:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 649:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 650:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /** @defgroup CRYP_Group4 CRYP's DMA interface Configuration function
 651:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  *  @brief   CRYP's DMA interface Configuration function 
 652:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  *
 653:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** @verbatim   
 654:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  ===============================================================================
 655:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****              ##### CRYP's DMA interface Configuration function #####
 656:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  ===============================================================================  
 657:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  [..] This section provides functions allowing to configure the DMA interface for 
 658:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****       CRYP data input and output transfer.
 659:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****    
 660:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  [..] When the DMA mode is enabled (using the CRYP_DMACmd() function), data can be 
 661:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****       transferred:
 662:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****    (+) From memory to the CRYP IN FIFO using the DMA peripheral by enabling 
 663:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****        the CRYP_DMAReq_DataIN request.
 664:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****    (+) From the CRYP OUT FIFO to the memory using the DMA peripheral by enabling 
 665:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****        the CRYP_DMAReq_DataOUT request.
 666:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 667:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** @endverbatim
 668:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @{
 669:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 670:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 671:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 672:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @brief  Enables or disables the CRYP DMA interface.
 673:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @param  CRYP_DMAReq: specifies the CRYP DMA transfer request to be enabled or disabled.
 674:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *           This parameter can be any combination of the following values:
 675:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *            @arg CRYP_DMAReq_DataOUT: DMA for outgoing(Tx) data transfer
 676:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *            @arg CRYP_DMAReq_DataIN: DMA for incoming(Rx) data transfer
 677:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @param  NewState: new state of the selected CRYP DMA transfer request.
 678:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          This parameter can be: ENABLE or DISABLE.
 679:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @retval None
 680:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 681:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** void CRYP_DMACmd(uint8_t CRYP_DMAReq, FunctionalState NewState)
 682:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** {
 789              		.loc 1 682 0
 790              		.cfi_startproc
 791              		@ args = 0, pretend = 0, frame = 0
 792              		@ frame_needed = 0, uses_anonymous_args = 0
 793              		@ link register save eliminated.
 794              	.LVL27:
 683:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Check the parameters */
 684:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   assert_param(IS_CRYP_DMAREQ(CRYP_DMAReq));
 685:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 686:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 687:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   if (NewState != DISABLE)
 688:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   {
 689:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     /* Enable the selected CRYP DMA request */
 690:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP->DMACR |= CRYP_DMAReq;
 795              		.loc 1 690 0
 796 0000 054A     		ldr	r2, .L59
 797 0002 1369     		ldr	r3, [r2, #16]
 687:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   {
 798              		.loc 1 687 0
 799 0004 29B9     		cbnz	r1, .L58
 691:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   }
 692:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   else
 693:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   {
 694:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     /* Disable the selected CRYP DMA request */
 695:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP->DMACR &= (uint8_t)~CRYP_DMAReq;
 800              		.loc 1 695 0
 801 0006 23EA0000 		bic	r0, r3, r0
 802              	.LVL28:
 803 000a 00F0FF00 		and	r0, r0, #255
 804 000e 1061     		str	r0, [r2, #16]
 805 0010 7047     		bx	lr
 806              	.LVL29:
 807              	.L58:
 690:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   }
 808              		.loc 1 690 0
 809 0012 1843     		orrs	r0, r0, r3
 810              	.LVL30:
 811 0014 1061     		str	r0, [r2, #16]
 812 0016 7047     		bx	lr
 813              	.L60:
 814              		.align	2
 815              	.L59:
 816 0018 00000650 		.word	1342570496
 817              		.cfi_endproc
 818              	.LFE124:
 820              		.section	.text.CRYP_ITConfig,"ax",%progbits
 821              		.align	2
 822              		.global	CRYP_ITConfig
 823              		.thumb
 824              		.thumb_func
 826              	CRYP_ITConfig:
 827              	.LFB125:
 696:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   }
 697:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** }
 698:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 699:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @}
 700:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 701:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 702:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /** @defgroup CRYP_Group5 Interrupts and flags management functions
 703:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  *  @brief   Interrupts and flags management functions
 704:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  *
 705:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** @verbatim   
 706:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  ===============================================================================
 707:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****               ##### Interrupts and flags management functions #####
 708:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  ===============================================================================  
 709:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  
 710:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  [..] This section provides functions allowing to configure the CRYP Interrupts and 
 711:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****       to get the status and Interrupts pending bits.
 712:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 713:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  [..] The CRYP provides 2 Interrupts sources and 7 Flags:
 714:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 715:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  *** Flags : ***
 716:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  ===============
 717:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  [..] 
 718:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****    (#) CRYP_FLAG_IFEM :  Set when Input FIFO is empty. This Flag is cleared only
 719:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****        by hardware.
 720:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****       
 721:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****    (#) CRYP_FLAG_IFNF :  Set when Input FIFO is not full. This Flag is cleared 
 722:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****        only by hardware.
 723:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 724:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 725:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****    (#) CRYP_FLAG_INRIS  : Set when Input FIFO Raw interrupt is pending it gives 
 726:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****        the raw interrupt state prior to masking of the input FIFO service interrupt.
 727:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****        This Flag is cleared only by hardware.
 728:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****      
 729:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****    (#) CRYP_FLAG_OFNE   : Set when Output FIFO not empty. This Flag is cleared 
 730:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****        only by hardware.
 731:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****         
 732:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****    (#) CRYP_FLAG_OFFU   : Set when Output FIFO is full. This Flag is cleared only 
 733:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****        by hardware.
 734:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                            
 735:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****    (#) CRYP_FLAG_OUTRIS : Set when Output FIFO Raw interrupt is pending it gives 
 736:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****        the raw interrupt state prior to masking of the output FIFO service interrupt.
 737:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****        This Flag is cleared only by hardware.
 738:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                                
 739:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****    (#) CRYP_FLAG_BUSY   : Set when the CRYP core is currently processing a block 
 740:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****        of data or a key preparation (for AES decryption). This Flag is cleared 
 741:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****        only by hardware. To clear it, the CRYP core must be disabled and the last
 742:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****        processing has completed. 
 743:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 744:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  *** Interrupts : ***
 745:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  ====================
 746:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  [..]
 747:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****    (#) CRYP_IT_INI   : The input FIFO service interrupt is asserted when there 
 748:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****       are less than 4 words in the input FIFO. This interrupt is associated to 
 749:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****       CRYP_FLAG_INRIS flag.
 750:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 751:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****       -@- This interrupt is cleared by performing write operations to the input FIFO 
 752:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****           until it holds 4 or more words. The input FIFO service interrupt INMIS is 
 753:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****           enabled with the CRYP enable bit. Consequently, when CRYP is disabled, the 
 754:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****           INMIS signal is low even if the input FIFO is empty.
 755:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 756:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 757:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 758:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****    (#) CRYP_IT_OUTI  : The output FIFO service interrupt is asserted when there 
 759:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****        is one or more (32-bit word) data items in the output FIFO. This interrupt 
 760:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****        is associated to CRYP_FLAG_OUTRIS flag.
 761:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 762:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****        -@- This interrupt is cleared by reading data from the output FIFO until there 
 763:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****            is no valid (32-bit) word left (that is, the interrupt follows the state 
 764:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****            of the OFNE (output FIFO not empty) flag).
 765:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 766:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  *** Managing the CRYP controller events : ***
 767:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  =============================================
 768:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  [..] The user should identify which mode will be used in his application to manage 
 769:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****       the CRYP controller events: Polling mode or Interrupt mode.
 770:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 771:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****    (#) In the Polling Mode it is advised to use the following functions:
 772:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****        (++) CRYP_GetFlagStatus() : to check if flags events occur. 
 773:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 774:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****        -@@- The CRYPT flags do not need to be cleared since they are cleared as 
 775:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****             soon as the associated event are reset.   
 776:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 777:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 778:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****    (#) In the Interrupt Mode it is advised to use the following functions:
 779:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****        (++) CRYP_ITConfig()       : to enable or disable the interrupt source.
 780:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****        (++) CRYP_GetITStatus()    : to check if Interrupt occurs.
 781:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 782:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****        -@@- The CRYPT interrupts have no pending bits, the interrupt is cleared as 
 783:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****              soon as the associated event is reset. 
 784:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 785:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** @endverbatim
 786:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @{
 787:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */ 
 788:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 789:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 790:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @brief  Enables or disables the specified CRYP interrupts.
 791:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @param  CRYP_IT: specifies the CRYP interrupt source to be enabled or disabled.
 792:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          This parameter can be any combination of the following values:
 793:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *            @arg CRYP_IT_INI: Input FIFO interrupt
 794:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *            @arg CRYP_IT_OUTI: Output FIFO interrupt
 795:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @param  NewState: new state of the specified CRYP interrupt.
 796:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *           This parameter can be: ENABLE or DISABLE.
 797:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @retval None
 798:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 799:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** void CRYP_ITConfig(uint8_t CRYP_IT, FunctionalState NewState)
 800:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** {
 828              		.loc 1 800 0
 829              		.cfi_startproc
 830              		@ args = 0, pretend = 0, frame = 0
 831              		@ frame_needed = 0, uses_anonymous_args = 0
 832              		@ link register save eliminated.
 833              	.LVL31:
 801:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Check the parameters */
 802:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   assert_param(IS_CRYP_CONFIG_IT(CRYP_IT));
 803:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 804:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 805:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   if (NewState != DISABLE)
 806:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   {
 807:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     /* Enable the selected CRYP interrupt */
 808:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP->IMSCR |= CRYP_IT;
 834              		.loc 1 808 0
 835 0000 054A     		ldr	r2, .L65
 836 0002 5369     		ldr	r3, [r2, #20]
 805:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   {
 837              		.loc 1 805 0
 838 0004 29B9     		cbnz	r1, .L64
 809:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   }
 810:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   else
 811:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   {
 812:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     /* Disable the selected CRYP interrupt */
 813:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP->IMSCR &= (uint8_t)~CRYP_IT;
 839              		.loc 1 813 0
 840 0006 23EA0000 		bic	r0, r3, r0
 841              	.LVL32:
 842 000a 00F0FF00 		and	r0, r0, #255
 843 000e 5061     		str	r0, [r2, #20]
 844 0010 7047     		bx	lr
 845              	.LVL33:
 846              	.L64:
 808:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   }
 847              		.loc 1 808 0
 848 0012 1843     		orrs	r0, r0, r3
 849              	.LVL34:
 850 0014 5061     		str	r0, [r2, #20]
 851 0016 7047     		bx	lr
 852              	.L66:
 853              		.align	2
 854              	.L65:
 855 0018 00000650 		.word	1342570496
 856              		.cfi_endproc
 857              	.LFE125:
 859              		.section	.text.CRYP_GetITStatus,"ax",%progbits
 860              		.align	2
 861              		.global	CRYP_GetITStatus
 862              		.thumb
 863              		.thumb_func
 865              	CRYP_GetITStatus:
 866              	.LFB126:
 814:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   }
 815:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** }
 816:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 817:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 818:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @brief  Checks whether the specified CRYP interrupt has occurred or not.
 819:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @note   This function checks the status of the masked interrupt (i.e the 
 820:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *         interrupt should be previously enabled).     
 821:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @param  CRYP_IT: specifies the CRYP (masked) interrupt source to check.
 822:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *           This parameter can be one of the following values:
 823:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *            @arg CRYP_IT_INI: Input FIFO interrupt
 824:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *            @arg CRYP_IT_OUTI: Output FIFO interrupt
 825:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @retval The new state of CRYP_IT (SET or RESET).
 826:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 827:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** ITStatus CRYP_GetITStatus(uint8_t CRYP_IT)
 828:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** {
 867              		.loc 1 828 0
 868              		.cfi_startproc
 869              		@ args = 0, pretend = 0, frame = 0
 870              		@ frame_needed = 0, uses_anonymous_args = 0
 871              		@ link register save eliminated.
 872              	.LVL35:
 829:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   ITStatus bitstatus = RESET;
 830:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Check the parameters */
 831:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   assert_param(IS_CRYP_GET_IT(CRYP_IT));
 832:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 833:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Check the status of the specified CRYP interrupt */
 834:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   if ((CRYP->MISR &  CRYP_IT) != (uint8_t)RESET)
 873              		.loc 1 834 0
 874 0000 034B     		ldr	r3, .L68
 875 0002 DB69     		ldr	r3, [r3, #28]
 876              	.LVL36:
 877 0004 1842     		tst	r0, r3
 835:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   {
 836:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     /* CRYP_IT is set */
 837:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     bitstatus = SET;
 838:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   }
 839:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   else
 840:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   {
 841:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     /* CRYP_IT is reset */
 842:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     bitstatus = RESET;
 843:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   }
 844:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Return the CRYP_IT status */
 845:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   return bitstatus;
 846:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** }
 878              		.loc 1 846 0
 879 0006 14BF     		ite	ne
 880 0008 0120     		movne	r0, #1
 881              	.LVL37:
 882 000a 0020     		moveq	r0, #0
 883 000c 7047     		bx	lr
 884              	.L69:
 885 000e 00BF     		.align	2
 886              	.L68:
 887 0010 00000650 		.word	1342570496
 888              		.cfi_endproc
 889              	.LFE126:
 891              		.section	.text.CRYP_GetCmdStatus,"ax",%progbits
 892              		.align	2
 893              		.global	CRYP_GetCmdStatus
 894              		.thumb
 895              		.thumb_func
 897              	CRYP_GetCmdStatus:
 898              	.LFB127:
 847:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 848:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 849:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @brief  Returns whether CRYP peripheral is enabled or disabled.
 850:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @param  none.
 851:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @retval Current state of the CRYP peripheral (ENABLE or DISABLE).
 852:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 853:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** FunctionalState CRYP_GetCmdStatus(void)
 854:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** {
 899              		.loc 1 854 0
 900              		.cfi_startproc
 901              		@ args = 0, pretend = 0, frame = 0
 902              		@ frame_needed = 0, uses_anonymous_args = 0
 903              		@ link register save eliminated.
 904              	.LVL38:
 855:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   FunctionalState state = DISABLE;
 856:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 857:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   if ((CRYP->CR & CRYP_CR_CRYPEN) != 0)
 905              		.loc 1 857 0
 906 0000 024B     		ldr	r3, .L71
 907 0002 1868     		ldr	r0, [r3]
 908              	.LVL39:
 858:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   {
 859:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     /* CRYPEN bit is set */
 860:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     state = ENABLE;
 861:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   }
 862:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   else
 863:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   {
 864:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     /* CRYPEN bit is reset */
 865:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     state = DISABLE;
 866:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   }
 867:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   return state;
 868:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** }
 909              		.loc 1 868 0
 910 0004 C0F3C030 		ubfx	r0, r0, #15, #1
 911              	.LVL40:
 912 0008 7047     		bx	lr
 913              	.L72:
 914 000a 00BF     		.align	2
 915              	.L71:
 916 000c 00000650 		.word	1342570496
 917              		.cfi_endproc
 918              	.LFE127:
 920              		.section	.text.CRYP_GetFlagStatus,"ax",%progbits
 921              		.align	2
 922              		.global	CRYP_GetFlagStatus
 923              		.thumb
 924              		.thumb_func
 926              	CRYP_GetFlagStatus:
 927              	.LFB128:
 869:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 870:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 871:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @brief  Checks whether the specified CRYP flag is set or not.
 872:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @param  CRYP_FLAG: specifies the CRYP flag to check.
 873:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          This parameter can be one of the following values:
 874:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *            @arg CRYP_FLAG_IFEM: Input FIFO Empty flag.
 875:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *            @arg CRYP_FLAG_IFNF: Input FIFO Not Full flag.
 876:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *            @arg CRYP_FLAG_OFNE: Output FIFO Not Empty flag.
 877:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *            @arg CRYP_FLAG_OFFU: Output FIFO Full flag.
 878:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *            @arg CRYP_FLAG_BUSY: Busy flag.
 879:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *            @arg CRYP_FLAG_OUTRIS: Output FIFO raw interrupt flag.
 880:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *            @arg CRYP_FLAG_INRIS: Input FIFO raw interrupt flag.
 881:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @retval The new state of CRYP_FLAG (SET or RESET).
 882:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 883:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** FlagStatus CRYP_GetFlagStatus(uint8_t CRYP_FLAG)
 884:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** {
 928              		.loc 1 884 0
 929              		.cfi_startproc
 930              		@ args = 0, pretend = 0, frame = 0
 931              		@ frame_needed = 0, uses_anonymous_args = 0
 932              		@ link register save eliminated.
 933              	.LVL41:
 885:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   FlagStatus bitstatus = RESET;
 886:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   uint32_t tempreg = 0;
 887:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 888:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Check the parameters */
 889:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   assert_param(IS_CRYP_GET_FLAG(CRYP_FLAG));
 890:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 891:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* check if the FLAG is in RISR register */
 892:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   if ((CRYP_FLAG & FLAG_MASK) != 0x00) 
 893:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   {
 894:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     tempreg = CRYP->RISR;
 934              		.loc 1 894 0
 935 0000 044B     		ldr	r3, .L76
 892:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   {
 936              		.loc 1 892 0
 937 0002 8206     		lsls	r2, r0, #26
 938              		.loc 1 894 0
 939 0004 4CBF     		ite	mi
 940 0006 9B69     		ldrmi	r3, [r3, #24]
 941              	.LVL42:
 895:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   }
 896:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   else  /* The FLAG is in SR register */
 897:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   {
 898:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     tempreg = CRYP->SR;
 942              		.loc 1 898 0
 943 0008 5B68     		ldrpl	r3, [r3, #4]
 944              	.LVL43:
 899:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   }
 900:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 901:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 902:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Check the status of the specified CRYP flag */
 903:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   if ((tempreg & CRYP_FLAG ) != (uint8_t)RESET)
 945              		.loc 1 903 0
 946 000a 0342     		tst	r3, r0
 904:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   {
 905:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     /* CRYP_FLAG is set */
 906:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     bitstatus = SET;
 907:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   }
 908:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   else
 909:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   {
 910:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     /* CRYP_FLAG is reset */
 911:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     bitstatus = RESET;
 912:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   }
 913:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 914:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Return the CRYP_FLAG status */
 915:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   return  bitstatus;
 916:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** }
 947              		.loc 1 916 0
 948 000c 14BF     		ite	ne
 949 000e 0120     		movne	r0, #1
 950              	.LVL44:
 951 0010 0020     		moveq	r0, #0
 952 0012 7047     		bx	lr
 953              	.L77:
 954              		.align	2
 955              	.L76:
 956 0014 00000650 		.word	1342570496
 957              		.cfi_endproc
 958              	.LFE128:
 960              		.text
 961              	.Letext0:
 962              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\4.9 2014q4\\arm-none-eabi\\include\\mach
 963              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\4.9 2014q4\\arm-none-eabi\\include\\stdi
 964              		.file 4 "libs/Device/STM32F4xx/Include/stm32f4xx.h"
 965              		.file 5 "libs/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_cryp.h"
 966              		.file 6 "libs/CMSIS/Include/core_cm4.h"
 967              		.file 7 "libs/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_rcc.h"
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_cryp.c
C:\Users\Student\AppData\Local\Temp\cc2VaN7C.s:20     .text.CRYP_DeInit:00000000 $t
C:\Users\Student\AppData\Local\Temp\cc2VaN7C.s:25     .text.CRYP_DeInit:00000000 CRYP_DeInit
C:\Users\Student\AppData\Local\Temp\cc2VaN7C.s:58     .text.CRYP_Init:00000000 $t
C:\Users\Student\AppData\Local\Temp\cc2VaN7C.s:63     .text.CRYP_Init:00000000 CRYP_Init
C:\Users\Student\AppData\Local\Temp\cc2VaN7C.s:131    .text.CRYP_Init:00000058 $d
C:\Users\Student\AppData\Local\Temp\cc2VaN7C.s:136    .text.CRYP_StructInit:00000000 $t
C:\Users\Student\AppData\Local\Temp\cc2VaN7C.s:141    .text.CRYP_StructInit:00000000 CRYP_StructInit
C:\Users\Student\AppData\Local\Temp\cc2VaN7C.s:163    .text.CRYP_KeyInit:00000000 $t
C:\Users\Student\AppData\Local\Temp\cc2VaN7C.s:168    .text.CRYP_KeyInit:00000000 CRYP_KeyInit
C:\Users\Student\AppData\Local\Temp\cc2VaN7C.s:205    .text.CRYP_KeyInit:00000024 $d
C:\Users\Student\AppData\Local\Temp\cc2VaN7C.s:210    .text.CRYP_KeyStructInit:00000000 $t
C:\Users\Student\AppData\Local\Temp\cc2VaN7C.s:215    .text.CRYP_KeyStructInit:00000000 CRYP_KeyStructInit
C:\Users\Student\AppData\Local\Temp\cc2VaN7C.s:245    .text.CRYP_IVInit:00000000 $t
C:\Users\Student\AppData\Local\Temp\cc2VaN7C.s:250    .text.CRYP_IVInit:00000000 CRYP_IVInit
C:\Users\Student\AppData\Local\Temp\cc2VaN7C.s:275    .text.CRYP_IVInit:00000014 $d
C:\Users\Student\AppData\Local\Temp\cc2VaN7C.s:280    .text.CRYP_IVStructInit:00000000 $t
C:\Users\Student\AppData\Local\Temp\cc2VaN7C.s:285    .text.CRYP_IVStructInit:00000000 CRYP_IVStructInit
C:\Users\Student\AppData\Local\Temp\cc2VaN7C.s:307    .text.CRYP_PhaseConfig:00000000 $t
C:\Users\Student\AppData\Local\Temp\cc2VaN7C.s:312    .text.CRYP_PhaseConfig:00000000 CRYP_PhaseConfig
C:\Users\Student\AppData\Local\Temp\cc2VaN7C.s:336    .text.CRYP_PhaseConfig:00000010 $d
C:\Users\Student\AppData\Local\Temp\cc2VaN7C.s:341    .text.CRYP_FIFOFlush:00000000 $t
C:\Users\Student\AppData\Local\Temp\cc2VaN7C.s:346    .text.CRYP_FIFOFlush:00000000 CRYP_FIFOFlush
C:\Users\Student\AppData\Local\Temp\cc2VaN7C.s:362    .text.CRYP_FIFOFlush:0000000c $d
C:\Users\Student\AppData\Local\Temp\cc2VaN7C.s:367    .text.CRYP_Cmd:00000000 $t
C:\Users\Student\AppData\Local\Temp\cc2VaN7C.s:372    .text.CRYP_Cmd:00000000 CRYP_Cmd
C:\Users\Student\AppData\Local\Temp\cc2VaN7C.s:397    .text.CRYP_Cmd:00000018 $d
C:\Users\Student\AppData\Local\Temp\cc2VaN7C.s:402    .text.CRYP_DataIn:00000000 $t
C:\Users\Student\AppData\Local\Temp\cc2VaN7C.s:407    .text.CRYP_DataIn:00000000 CRYP_DataIn
C:\Users\Student\AppData\Local\Temp\cc2VaN7C.s:422    .text.CRYP_DataIn:00000008 $d
C:\Users\Student\AppData\Local\Temp\cc2VaN7C.s:427    .text.CRYP_DataOut:00000000 $t
C:\Users\Student\AppData\Local\Temp\cc2VaN7C.s:432    .text.CRYP_DataOut:00000000 CRYP_DataOut
C:\Users\Student\AppData\Local\Temp\cc2VaN7C.s:447    .text.CRYP_DataOut:00000008 $d
C:\Users\Student\AppData\Local\Temp\cc2VaN7C.s:452    .text.CRYP_SaveContext:00000000 $t
C:\Users\Student\AppData\Local\Temp\cc2VaN7C.s:457    .text.CRYP_SaveContext:00000000 CRYP_SaveContext
C:\Users\Student\AppData\Local\Temp\cc2VaN7C.s:662    .text.CRYP_SaveContext:000000f8 $d
C:\Users\Student\AppData\Local\Temp\cc2VaN7C.s:668    .text.CRYP_RestoreContext:00000000 $t
C:\Users\Student\AppData\Local\Temp\cc2VaN7C.s:673    .text.CRYP_RestoreContext:00000000 CRYP_RestoreContext
C:\Users\Student\AppData\Local\Temp\cc2VaN7C.s:777    .text.CRYP_RestoreContext:00000088 $d
C:\Users\Student\AppData\Local\Temp\cc2VaN7C.s:782    .text.CRYP_DMACmd:00000000 $t
C:\Users\Student\AppData\Local\Temp\cc2VaN7C.s:787    .text.CRYP_DMACmd:00000000 CRYP_DMACmd
C:\Users\Student\AppData\Local\Temp\cc2VaN7C.s:816    .text.CRYP_DMACmd:00000018 $d
C:\Users\Student\AppData\Local\Temp\cc2VaN7C.s:821    .text.CRYP_ITConfig:00000000 $t
C:\Users\Student\AppData\Local\Temp\cc2VaN7C.s:826    .text.CRYP_ITConfig:00000000 CRYP_ITConfig
C:\Users\Student\AppData\Local\Temp\cc2VaN7C.s:855    .text.CRYP_ITConfig:00000018 $d
C:\Users\Student\AppData\Local\Temp\cc2VaN7C.s:860    .text.CRYP_GetITStatus:00000000 $t
C:\Users\Student\AppData\Local\Temp\cc2VaN7C.s:865    .text.CRYP_GetITStatus:00000000 CRYP_GetITStatus
C:\Users\Student\AppData\Local\Temp\cc2VaN7C.s:887    .text.CRYP_GetITStatus:00000010 $d
C:\Users\Student\AppData\Local\Temp\cc2VaN7C.s:892    .text.CRYP_GetCmdStatus:00000000 $t
C:\Users\Student\AppData\Local\Temp\cc2VaN7C.s:897    .text.CRYP_GetCmdStatus:00000000 CRYP_GetCmdStatus
C:\Users\Student\AppData\Local\Temp\cc2VaN7C.s:916    .text.CRYP_GetCmdStatus:0000000c $d
C:\Users\Student\AppData\Local\Temp\cc2VaN7C.s:921    .text.CRYP_GetFlagStatus:00000000 $t
C:\Users\Student\AppData\Local\Temp\cc2VaN7C.s:926    .text.CRYP_GetFlagStatus:00000000 CRYP_GetFlagStatus
C:\Users\Student\AppData\Local\Temp\cc2VaN7C.s:956    .text.CRYP_GetFlagStatus:00000014 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
RCC_AHB2PeriphResetCmd
