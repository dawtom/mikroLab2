   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 2
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"stm32f4xx_adc.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.ADC_DeInit,"ax",%progbits
  20              		.align	2
  21              		.global	ADC_DeInit
  22              		.thumb
  23              		.thumb_func
  25              	ADC_DeInit:
  26              	.LFB110:
  27              		.file 1 "libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c"
   1:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /**
   2:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   ******************************************************************************
   3:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @file    stm32f4xx_adc.c
   4:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @author  MCD Application Team
   5:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @version V1.3.0
   6:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @date    08-November-2013
   7:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @brief   This file provides firmware functions to manage the following 
   8:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *          functionalities of the Analog to Digital Convertor (ADC) peripheral:
   9:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *           + Initialization and Configuration (in addition to ADC multi mode 
  10:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *             selection)
  11:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *           + Analog Watchdog configuration
  12:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *           + Temperature Sensor & Vrefint (Voltage Reference internal) & VBAT
  13:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *             management 
  14:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *           + Regular Channels Configuration
  15:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *           + Regular Channels DMA Configuration
  16:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *           + Injected channels Configuration
  17:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *           + Interrupts and flags management
  18:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *         
  19:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   @verbatim
  20:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****  ===============================================================================
  21:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****                      ##### How to use this driver #####
  22:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****  ===============================================================================
  23:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     [..]
  24:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     (#) Enable the ADC interface clock using 
  25:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****         RCC_APB2PeriphClockCmd(RCC_APB2Periph_ADCx, ENABLE); 
  26:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****        
  27:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     (#) ADC pins configuration
  28:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****          (++) Enable the clock for the ADC GPIOs using the following function:
  29:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****              RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOx, ENABLE);   
  30:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****          (++) Configure these ADC pins in analog mode using GPIO_Init();  
  31:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
  32:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****      (#) Configure the ADC Prescaler, conversion resolution and data 
  33:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****          alignment using the ADC_Init() function.
  34:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****      (#) Activate the ADC peripheral using ADC_Cmd() function.
  35:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
  36:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****      *** Regular channels group configuration ***
  37:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****      ============================================
  38:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****      [..]    
  39:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****        (+) To configure the ADC regular channels group features, use 
  40:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****            ADC_Init() and ADC_RegularChannelConfig() functions.
  41:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****        (+) To activate the continuous mode, use the ADC_continuousModeCmd()
  42:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****            function.
  43:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****        (+) To configurate and activate the Discontinuous mode, use the 
  44:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****            ADC_DiscModeChannelCountConfig() and ADC_DiscModeCmd() functions.
  45:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****        (+) To read the ADC converted values, use the ADC_GetConversionValue()
  46:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****            function.
  47:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
  48:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****      *** Multi mode ADCs Regular channels configuration ***
  49:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****      ======================================================
  50:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****      [..]
  51:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****        (+) Refer to "Regular channels group configuration" description to
  52:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****            configure the ADC1, ADC2 and ADC3 regular channels.        
  53:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****        (+) Select the Multi mode ADC regular channels features (dual or 
  54:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****            triple mode) using ADC_CommonInit() function and configure 
  55:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****            the DMA mode using ADC_MultiModeDMARequestAfterLastTransferCmd() 
  56:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****            functions.        
  57:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****        (+) Read the ADCs converted values using the 
  58:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****            ADC_GetMultiModeConversionValue() function.
  59:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
  60:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****      *** DMA for Regular channels group features configuration ***
  61:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****      ============================================================= 
  62:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****      [..]
  63:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****        (+) To enable the DMA mode for regular channels group, use the 
  64:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****            ADC_DMACmd() function.
  65:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****        (+) To enable the generation of DMA requests continuously at the end
  66:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****            of the last DMA transfer, use the ADC_DMARequestAfterLastTransferCmd() 
  67:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****            function.
  68:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
  69:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****      *** Injected channels group configuration ***
  70:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****      =============================================    
  71:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****      [..]
  72:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****        (+) To configure the ADC Injected channels group features, use 
  73:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****            ADC_InjectedChannelConfig() and  ADC_InjectedSequencerLengthConfig()
  74:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****            functions.
  75:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****        (+) To activate the continuous mode, use the ADC_continuousModeCmd()
  76:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****            function.
  77:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****        (+) To activate the Injected Discontinuous mode, use the 
  78:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****            ADC_InjectedDiscModeCmd() function.  
  79:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****        (+) To activate the AutoInjected mode, use the ADC_AutoInjectedConvCmd() 
  80:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****            function.        
  81:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****        (+) To read the ADC converted values, use the ADC_GetInjectedConversionValue() 
  82:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****            function.
  83:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
  84:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     @endverbatim
  85:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   ******************************************************************************
  86:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @attention
  87:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *
  88:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * <h2><center>&copy; COPYRIGHT 2013 STMicroelectronics</center></h2>
  89:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *
  90:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
  91:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * You may not use this file except in compliance with the License.
  92:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * You may obtain a copy of the License at:
  93:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *
  94:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *        http://www.st.com/software_license_agreement_liberty_v2
  95:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *
  96:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * Unless required by applicable law or agreed to in writing, software 
  97:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * distributed under the License is distributed on an "AS IS" BASIS, 
  98:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  99:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * See the License for the specific language governing permissions and
 100:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * limitations under the License.
 101:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *
 102:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   ******************************************************************************  
 103:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   */ 
 104:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
 105:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /* Includes ------------------------------------------------------------------*/
 106:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** #include "stm32f4xx_adc.h"
 107:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** #include "stm32f4xx_rcc.h"
 108:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
 109:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
 110:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @{
 111:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   */
 112:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
 113:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /** @defgroup ADC 
 114:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @brief ADC driver modules
 115:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @{
 116:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   */ 
 117:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
 118:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /* Private typedef -----------------------------------------------------------*/
 119:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /* Private define ------------------------------------------------------------*/ 
 120:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
 121:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /* ADC DISCNUM mask */
 122:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** #define CR1_DISCNUM_RESET         ((uint32_t)0xFFFF1FFF)
 123:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
 124:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /* ADC AWDCH mask */
 125:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** #define CR1_AWDCH_RESET           ((uint32_t)0xFFFFFFE0)   
 126:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
 127:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /* ADC Analog watchdog enable mode mask */
 128:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** #define CR1_AWDMode_RESET         ((uint32_t)0xFF3FFDFF)   
 129:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
 130:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /* CR1 register Mask */
 131:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** #define CR1_CLEAR_MASK            ((uint32_t)0xFCFFFEFF)
 132:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
 133:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /* ADC EXTEN mask */
 134:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** #define CR2_EXTEN_RESET           ((uint32_t)0xCFFFFFFF)  
 135:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
 136:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /* ADC JEXTEN mask */
 137:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** #define CR2_JEXTEN_RESET          ((uint32_t)0xFFCFFFFF)  
 138:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
 139:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /* ADC JEXTSEL mask */
 140:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** #define CR2_JEXTSEL_RESET         ((uint32_t)0xFFF0FFFF)  
 141:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
 142:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /* CR2 register Mask */
 143:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** #define CR2_CLEAR_MASK            ((uint32_t)0xC0FFF7FD)
 144:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
 145:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /* ADC SQx mask */
 146:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** #define SQR3_SQ_SET               ((uint32_t)0x0000001F)  
 147:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** #define SQR2_SQ_SET               ((uint32_t)0x0000001F)  
 148:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** #define SQR1_SQ_SET               ((uint32_t)0x0000001F)  
 149:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
 150:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /* ADC L Mask */
 151:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** #define SQR1_L_RESET              ((uint32_t)0xFF0FFFFF) 
 152:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
 153:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /* ADC JSQx mask */
 154:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** #define JSQR_JSQ_SET              ((uint32_t)0x0000001F) 
 155:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
 156:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /* ADC JL mask */
 157:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** #define JSQR_JL_SET               ((uint32_t)0x00300000) 
 158:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** #define JSQR_JL_RESET             ((uint32_t)0xFFCFFFFF) 
 159:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
 160:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /* ADC SMPx mask */
 161:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** #define SMPR1_SMP_SET             ((uint32_t)0x00000007)  
 162:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** #define SMPR2_SMP_SET             ((uint32_t)0x00000007) 
 163:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
 164:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /* ADC JDRx registers offset */
 165:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** #define JDR_OFFSET                ((uint8_t)0x28) 
 166:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
 167:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /* ADC CDR register base address */
 168:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** #define CDR_ADDRESS               ((uint32_t)0x40012308)   
 169:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
 170:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /* ADC CCR register Mask */
 171:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** #define CR_CLEAR_MASK             ((uint32_t)0xFFFC30E0)  
 172:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
 173:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /* Private macro -------------------------------------------------------------*/
 174:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /* Private variables ---------------------------------------------------------*/
 175:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /* Private function prototypes -----------------------------------------------*/
 176:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /* Private functions ---------------------------------------------------------*/
 177:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
 178:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /** @defgroup ADC_Private_Functions
 179:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @{
 180:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   */ 
 181:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
 182:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /** @defgroup ADC_Group1 Initialization and Configuration functions
 183:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****  *  @brief    Initialization and Configuration functions 
 184:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****  *
 185:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** @verbatim    
 186:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****  ===============================================================================
 187:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****               ##### Initialization and Configuration functions #####
 188:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****  ===============================================================================
 189:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     [..]  This section provides functions allowing to:
 190:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****       (+) Initialize and configure the ADC Prescaler
 191:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****       (+) ADC Conversion Resolution (12bit..6bit)
 192:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****       (+) Scan Conversion Mode (multichannel or one channel) for regular group
 193:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****       (+) ADC Continuous Conversion Mode (Continuous or Single conversion) for 
 194:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****           regular group
 195:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****       (+) External trigger Edge and source of regular group, 
 196:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****       (+) Converted data alignment (left or right)
 197:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****       (+) The number of ADC conversions that will be done using the sequencer for 
 198:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****           regular channel group
 199:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****       (+) Multi ADC mode selection
 200:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****       (+) Direct memory access mode selection for multi ADC mode  
 201:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****       (+) Delay between 2 sampling phases (used in dual or triple interleaved modes)
 202:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****       (+) Enable or disable the ADC peripheral   
 203:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** @endverbatim
 204:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @{
 205:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   */
 206:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
 207:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /**
 208:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @brief  Deinitializes all ADCs peripherals registers to their default reset 
 209:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *         values.
 210:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  None
 211:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @retval None
 212:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   */
 213:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** void ADC_DeInit(void)
 214:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** {
  28              		.loc 1 214 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 08B5     		push	{r3, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 3, -8
  36              		.cfi_offset 14, -4
 215:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Enable all ADCs reset state */
 216:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   RCC_APB2PeriphResetCmd(RCC_APB2Periph_ADC, ENABLE);
  37              		.loc 1 216 0
  38 0002 4FF48070 		mov	r0, #256
  39 0006 0121     		movs	r1, #1
  40 0008 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
  41              	.LVL0:
 217:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
 218:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Release all ADCs from reset state */
 219:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   RCC_APB2PeriphResetCmd(RCC_APB2Periph_ADC, DISABLE);
  42              		.loc 1 219 0
  43 000c 4FF48070 		mov	r0, #256
  44 0010 0021     		movs	r1, #0
 220:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** }
  45              		.loc 1 220 0
  46 0012 BDE80840 		pop	{r3, lr}
  47              	.LCFI1:
  48              		.cfi_restore 14
  49              		.cfi_restore 3
  50              		.cfi_def_cfa_offset 0
 219:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** }
  51              		.loc 1 219 0
  52 0016 FFF7FEBF 		b	RCC_APB2PeriphResetCmd
  53              	.LVL1:
  54              		.cfi_endproc
  55              	.LFE110:
  57 001a 00BF     		.section	.text.ADC_Init,"ax",%progbits
  58              		.align	2
  59              		.global	ADC_Init
  60              		.thumb
  61              		.thumb_func
  63              	ADC_Init:
  64              	.LFB111:
 221:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
 222:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /**
 223:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @brief  Initializes the ADCx peripheral according to the specified parameters 
 224:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *         in the ADC_InitStruct.
 225:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @note   This function is used to configure the global features of the ADC ( 
 226:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *         Resolution and Data Alignment), however, the rest of the configuration
 227:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *         parameters are specific to the regular channels group (scan mode 
 228:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *         activation, continuous mode activation, External trigger source and 
 229:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *         edge, number of conversion in the regular channels group sequencer).  
 230:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 231:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  ADC_InitStruct: pointer to an ADC_InitTypeDef structure that contains
 232:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *         the configuration information for the specified ADC peripheral.
 233:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @retval None
 234:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   */
 235:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** void ADC_Init(ADC_TypeDef* ADCx, ADC_InitTypeDef* ADC_InitStruct)
 236:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** {
  65              		.loc 1 236 0
  66              		.cfi_startproc
  67              		@ args = 0, pretend = 0, frame = 0
  68              		@ frame_needed = 0, uses_anonymous_args = 0
  69              	.LVL2:
  70 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  71              	.LCFI2:
  72              		.cfi_def_cfa_offset 20
  73              		.cfi_offset 4, -20
  74              		.cfi_offset 5, -16
  75              		.cfi_offset 6, -12
  76              		.cfi_offset 7, -8
  77              		.cfi_offset 14, -4
 237:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   uint32_t tmpreg1 = 0;
 238:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   uint8_t tmpreg2 = 0;
 239:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Check the parameters */
 240:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 241:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_RESOLUTION(ADC_InitStruct->ADC_Resolution)); 
 242:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(ADC_InitStruct->ADC_ScanConvMode));
 243:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(ADC_InitStruct->ADC_ContinuousConvMode)); 
 244:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_EXT_TRIG_EDGE(ADC_InitStruct->ADC_ExternalTrigConvEdge)); 
 245:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_EXT_TRIG(ADC_InitStruct->ADC_ExternalTrigConv));    
 246:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_DATA_ALIGN(ADC_InitStruct->ADC_DataAlign)); 
 247:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_REGULAR_LENGTH(ADC_InitStruct->ADC_NbrOfConversion));
 248:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
 249:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /*---------------------------- ADCx CR1 Configuration -----------------*/
 250:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Get the ADCx CR1 value */
 251:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   tmpreg1 = ADCx->CR1;
  78              		.loc 1 251 0
  79 0002 4468     		ldr	r4, [r0, #4]
  80              	.LVL3:
  81 0004 0A68     		ldr	r2, [r1]
 252:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
 253:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Clear RES and SCAN bits */
 254:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   tmpreg1 &= CR1_CLEAR_MASK;
 255:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
 256:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Configure ADCx: scan conversion mode and resolution */
 257:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Set SCAN bit according to ADC_ScanConvMode value */
 258:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Set RES bit according to ADC_Resolution value */ 
 259:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   tmpreg1 |= (uint32_t)(((uint32_t)ADC_InitStruct->ADC_ScanConvMode << 8) | \
  82              		.loc 1 259 0
  83 0006 91F804C0 		ldrb	ip, [r1, #4]	@ zero_extendqisi2
  84 000a D1F80CE0 		ldr	lr, [r1, #12]
  85 000e 0E69     		ldr	r6, [r1, #16]
  86 0010 8D68     		ldr	r5, [r1, #8]
 260:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****                                    ADC_InitStruct->ADC_Resolution);
 261:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Write to ADCx CR1 */
 262:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   ADCx->CR1 = tmpreg1;
 263:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /*---------------------------- ADCx CR2 Configuration -----------------*/
 264:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Get the ADCx CR2 value */
 265:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   tmpreg1 = ADCx->CR2;
 266:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
 267:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Clear CONT, ALIGN, EXTEN and EXTSEL bits */
 268:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   tmpreg1 &= CR2_CLEAR_MASK;
 269:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
 270:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Configure ADCx: external trigger event and edge, data alignment and 
 271:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****      continuous conversion mode */
 272:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Set ALIGN bit according to ADC_DataAlign value */
 273:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Set EXTEN bits according to ADC_ExternalTrigConvEdge value */ 
 274:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Set EXTSEL bits according to ADC_ExternalTrigConv value */
 275:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Set CONT bit according to ADC_ContinuousConvMode value */
 276:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   tmpreg1 |= (uint32_t)(ADC_InitStruct->ADC_DataAlign | \
 277:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****                         ADC_InitStruct->ADC_ExternalTrigConv | 
 278:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****                         ADC_InitStruct->ADC_ExternalTrigConvEdge | \
 279:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****                         ((uint32_t)ADC_InitStruct->ADC_ContinuousConvMode << 1));
  87              		.loc 1 279 0
  88 0012 4F79     		ldrb	r7, [r1, #5]	@ zero_extendqisi2
 268:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
  89              		.loc 1 268 0
  90 0014 0D4B     		ldr	r3, .L5
 254:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
  91              		.loc 1 254 0
  92 0016 24F04074 		bic	r4, r4, #50331648
  93              	.LVL4:
  94 001a 24F48074 		bic	r4, r4, #256
  95 001e 2243     		orrs	r2, r2, r4
 259:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****                                    ADC_InitStruct->ADC_Resolution);
  96              		.loc 1 259 0
  97 0020 42EA0C22 		orr	r2, r2, ip, lsl #8
  98              	.LVL5:
 262:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /*---------------------------- ADCx CR2 Configuration -----------------*/
  99              		.loc 1 262 0
 100 0024 4260     		str	r2, [r0, #4]
 265:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
 101              		.loc 1 265 0
 102 0026 8468     		ldr	r4, [r0, #8]
 103              	.LVL6:
 104 0028 4EEA0602 		orr	r2, lr, r6
 105 002c 2A43     		orrs	r2, r2, r5
 268:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
 106              		.loc 1 268 0
 107 002e 2340     		ands	r3, r3, r4
 108              	.LVL7:
 109 0030 1343     		orrs	r3, r3, r2
 110              	.LVL8:
 276:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****                         ADC_InitStruct->ADC_ExternalTrigConv | 
 111              		.loc 1 276 0
 112 0032 43EA4703 		orr	r3, r3, r7, lsl #1
 113              	.LVL9:
 280:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****                         
 281:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Write to ADCx CR2 */
 282:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   ADCx->CR2 = tmpreg1;
 114              		.loc 1 282 0
 115 0036 8360     		str	r3, [r0, #8]
 283:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /*---------------------------- ADCx SQR1 Configuration -----------------*/
 284:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Get the ADCx SQR1 value */
 285:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   tmpreg1 = ADCx->SQR1;
 286:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
 287:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Clear L bits */
 288:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   tmpreg1 &= SQR1_L_RESET;
 289:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
 290:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Configure ADCx: regular channel sequence length */
 291:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Set L bits according to ADC_NbrOfConversion value */
 292:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   tmpreg2 |= (uint8_t)(ADC_InitStruct->ADC_NbrOfConversion - (uint8_t)1);
 116              		.loc 1 292 0
 117 0038 0A7D     		ldrb	r2, [r1, #20]	@ zero_extendqisi2
 285:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
 118              		.loc 1 285 0
 119 003a C36A     		ldr	r3, [r0, #44]
 120              	.LVL10:
 121              		.loc 1 292 0
 122 003c 013A     		subs	r2, r2, #1
 293:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   tmpreg1 |= ((uint32_t)tmpreg2 << 20);
 123              		.loc 1 293 0
 124 003e D2B2     		uxtb	r2, r2
 288:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
 125              		.loc 1 288 0
 126 0040 23F47003 		bic	r3, r3, #15728640
 127              	.LVL11:
 128              		.loc 1 293 0
 129 0044 43EA0253 		orr	r3, r3, r2, lsl #20
 130              	.LVL12:
 294:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
 295:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Write to ADCx SQR1 */
 296:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   ADCx->SQR1 = tmpreg1;
 131              		.loc 1 296 0
 132 0048 C362     		str	r3, [r0, #44]
 133              	.LVL13:
 134 004a F0BD     		pop	{r4, r5, r6, r7, pc}
 135              	.L6:
 136              		.align	2
 137              	.L5:
 138 004c FDF7FFC0 		.word	-1056966659
 139              		.cfi_endproc
 140              	.LFE111:
 142              		.section	.text.ADC_StructInit,"ax",%progbits
 143              		.align	2
 144              		.global	ADC_StructInit
 145              		.thumb
 146              		.thumb_func
 148              	ADC_StructInit:
 149              	.LFB112:
 297:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** }
 298:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
 299:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /**
 300:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @brief  Fills each ADC_InitStruct member with its default value.
 301:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @note   This function is used to initialize the global features of the ADC ( 
 302:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *         Resolution and Data Alignment), however, the rest of the configuration
 303:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *         parameters are specific to the regular channels group (scan mode 
 304:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *         activation, continuous mode activation, External trigger source and 
 305:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *         edge, number of conversion in the regular channels group sequencer).  
 306:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  ADC_InitStruct: pointer to an ADC_InitTypeDef structure which will 
 307:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *         be initialized.
 308:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @retval None
 309:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   */
 310:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** void ADC_StructInit(ADC_InitTypeDef* ADC_InitStruct)
 311:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** {
 150              		.loc 1 311 0
 151              		.cfi_startproc
 152              		@ args = 0, pretend = 0, frame = 0
 153              		@ frame_needed = 0, uses_anonymous_args = 0
 154              		@ link register save eliminated.
 155              	.LVL14:
 312:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Initialize the ADC_Mode member */
 313:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   ADC_InitStruct->ADC_Resolution = ADC_Resolution_12b;
 156              		.loc 1 313 0
 157 0000 0023     		movs	r3, #0
 314:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
 315:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* initialize the ADC_ScanConvMode member */
 316:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   ADC_InitStruct->ADC_ScanConvMode = DISABLE;
 317:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
 318:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Initialize the ADC_ContinuousConvMode member */
 319:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   ADC_InitStruct->ADC_ContinuousConvMode = DISABLE;
 320:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
 321:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Initialize the ADC_ExternalTrigConvEdge member */
 322:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   ADC_InitStruct->ADC_ExternalTrigConvEdge = ADC_ExternalTrigConvEdge_None;
 323:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
 324:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Initialize the ADC_ExternalTrigConv member */
 325:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   ADC_InitStruct->ADC_ExternalTrigConv = ADC_ExternalTrigConv_T1_CC1;
 326:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
 327:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Initialize the ADC_DataAlign member */
 328:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   ADC_InitStruct->ADC_DataAlign = ADC_DataAlign_Right;
 329:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
 330:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Initialize the ADC_NbrOfConversion member */
 331:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   ADC_InitStruct->ADC_NbrOfConversion = 1;
 158              		.loc 1 331 0
 159 0002 0122     		movs	r2, #1
 160 0004 0275     		strb	r2, [r0, #20]
 313:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
 161              		.loc 1 313 0
 162 0006 0360     		str	r3, [r0]
 316:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
 163              		.loc 1 316 0
 164 0008 0371     		strb	r3, [r0, #4]
 319:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
 165              		.loc 1 319 0
 166 000a 4371     		strb	r3, [r0, #5]
 322:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
 167              		.loc 1 322 0
 168 000c 8360     		str	r3, [r0, #8]
 325:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
 169              		.loc 1 325 0
 170 000e C360     		str	r3, [r0, #12]
 328:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
 171              		.loc 1 328 0
 172 0010 0361     		str	r3, [r0, #16]
 173 0012 7047     		bx	lr
 174              		.cfi_endproc
 175              	.LFE112:
 177              		.section	.text.ADC_CommonInit,"ax",%progbits
 178              		.align	2
 179              		.global	ADC_CommonInit
 180              		.thumb
 181              		.thumb_func
 183              	ADC_CommonInit:
 184              	.LFB113:
 332:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** }
 333:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
 334:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /**
 335:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @brief  Initializes the ADCs peripherals according to the specified parameters 
 336:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *         in the ADC_CommonInitStruct.
 337:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  ADC_CommonInitStruct: pointer to an ADC_CommonInitTypeDef structure 
 338:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *         that contains the configuration information for  All ADCs peripherals.
 339:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @retval None
 340:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   */
 341:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** void ADC_CommonInit(ADC_CommonInitTypeDef* ADC_CommonInitStruct)
 342:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** {
 185              		.loc 1 342 0
 186              		.cfi_startproc
 187              		@ args = 0, pretend = 0, frame = 0
 188              		@ frame_needed = 0, uses_anonymous_args = 0
 189              		@ link register save eliminated.
 190              	.LVL15:
 191 0000 70B4     		push	{r4, r5, r6}
 192              	.LCFI3:
 193              		.cfi_def_cfa_offset 12
 194              		.cfi_offset 4, -12
 195              		.cfi_offset 5, -8
 196              		.cfi_offset 6, -4
 343:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   uint32_t tmpreg1 = 0;
 344:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Check the parameters */
 345:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_MODE(ADC_CommonInitStruct->ADC_Mode));
 346:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_PRESCALER(ADC_CommonInitStruct->ADC_Prescaler));
 347:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_DMA_ACCESS_MODE(ADC_CommonInitStruct->ADC_DMAAccessMode));
 348:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_SAMPLING_DELAY(ADC_CommonInitStruct->ADC_TwoSamplingDelay));
 349:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /*---------------------------- ADC CCR Configuration -----------------*/
 350:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Get the ADC CCR value */
 351:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   tmpreg1 = ADC->CCR;
 352:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
 353:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Clear MULTI, DELAY, DMA and ADCPRE bits */
 354:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   tmpreg1 &= CR_CLEAR_MASK;
 355:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
 356:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Configure ADCx: Multi mode, Delay between two sampling time, ADC prescaler,
 357:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****      and DMA access mode for multimode */
 358:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Set MULTI bits according to ADC_Mode value */
 359:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Set ADCPRE bits according to ADC_Prescaler value */
 360:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Set DMA bits according to ADC_DMAAccessMode value */
 361:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Set DELAY bits according to ADC_TwoSamplingDelay value */    
 362:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   tmpreg1 |= (uint32_t)(ADC_CommonInitStruct->ADC_Mode | 
 197              		.loc 1 362 0
 198 0002 90E84400 		ldmia	r0, {r2, r6}
 351:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
 199              		.loc 1 351 0
 200 0006 064D     		ldr	r5, .L10
 363:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****                         ADC_CommonInitStruct->ADC_Prescaler | 
 201              		.loc 1 363 0
 202 0008 8468     		ldr	r4, [r0, #8]
 362:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****                         ADC_CommonInitStruct->ADC_Prescaler | 
 203              		.loc 1 362 0
 204 000a C168     		ldr	r1, [r0, #12]
 354:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
 205              		.loc 1 354 0
 206 000c 054B     		ldr	r3, .L10+4
 351:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
 207              		.loc 1 351 0
 208 000e 6868     		ldr	r0, [r5, #4]
 209              	.LVL16:
 362:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****                         ADC_CommonInitStruct->ADC_Prescaler | 
 210              		.loc 1 362 0
 211 0010 3243     		orrs	r2, r2, r6
 212              		.loc 1 363 0
 213 0012 2243     		orrs	r2, r2, r4
 362:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****                         ADC_CommonInitStruct->ADC_Prescaler | 
 214              		.loc 1 362 0
 215 0014 0A43     		orrs	r2, r2, r1
 354:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
 216              		.loc 1 354 0
 217 0016 0340     		ands	r3, r3, r0
 218              	.LVL17:
 362:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****                         ADC_CommonInitStruct->ADC_Prescaler | 
 219              		.loc 1 362 0
 220 0018 1343     		orrs	r3, r3, r2
 221              	.LVL18:
 364:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****                         ADC_CommonInitStruct->ADC_DMAAccessMode | 
 365:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****                         ADC_CommonInitStruct->ADC_TwoSamplingDelay);
 366:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****                         
 367:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Write to ADC CCR */
 368:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   ADC->CCR = tmpreg1;
 222              		.loc 1 368 0
 223 001a 6B60     		str	r3, [r5, #4]
 369:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** }
 224              		.loc 1 369 0
 225 001c 70BC     		pop	{r4, r5, r6}
 226              	.LCFI4:
 227              		.cfi_restore 6
 228              		.cfi_restore 5
 229              		.cfi_restore 4
 230              		.cfi_def_cfa_offset 0
 231 001e 7047     		bx	lr
 232              	.L11:
 233              		.align	2
 234              	.L10:
 235 0020 00230140 		.word	1073816320
 236 0024 E030FCFF 		.word	-249632
 237              		.cfi_endproc
 238              	.LFE113:
 240              		.section	.text.ADC_CommonStructInit,"ax",%progbits
 241              		.align	2
 242              		.global	ADC_CommonStructInit
 243              		.thumb
 244              		.thumb_func
 246              	ADC_CommonStructInit:
 247              	.LFB114:
 370:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
 371:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /**
 372:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @brief  Fills each ADC_CommonInitStruct member with its default value.
 373:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  ADC_CommonInitStruct: pointer to an ADC_CommonInitTypeDef structure
 374:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *         which will be initialized.
 375:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @retval None
 376:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   */
 377:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** void ADC_CommonStructInit(ADC_CommonInitTypeDef* ADC_CommonInitStruct)
 378:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** {
 248              		.loc 1 378 0
 249              		.cfi_startproc
 250              		@ args = 0, pretend = 0, frame = 0
 251              		@ frame_needed = 0, uses_anonymous_args = 0
 252              		@ link register save eliminated.
 253              	.LVL19:
 379:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Initialize the ADC_Mode member */
 380:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   ADC_CommonInitStruct->ADC_Mode = ADC_Mode_Independent;
 254              		.loc 1 380 0
 255 0000 0023     		movs	r3, #0
 256 0002 0360     		str	r3, [r0]
 381:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
 382:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* initialize the ADC_Prescaler member */
 383:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   ADC_CommonInitStruct->ADC_Prescaler = ADC_Prescaler_Div2;
 257              		.loc 1 383 0
 258 0004 4360     		str	r3, [r0, #4]
 384:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
 385:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Initialize the ADC_DMAAccessMode member */
 386:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   ADC_CommonInitStruct->ADC_DMAAccessMode = ADC_DMAAccessMode_Disabled;
 259              		.loc 1 386 0
 260 0006 8360     		str	r3, [r0, #8]
 387:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
 388:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Initialize the ADC_TwoSamplingDelay member */
 389:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   ADC_CommonInitStruct->ADC_TwoSamplingDelay = ADC_TwoSamplingDelay_5Cycles;
 261              		.loc 1 389 0
 262 0008 C360     		str	r3, [r0, #12]
 263 000a 7047     		bx	lr
 264              		.cfi_endproc
 265              	.LFE114:
 267              		.section	.text.ADC_Cmd,"ax",%progbits
 268              		.align	2
 269              		.global	ADC_Cmd
 270              		.thumb
 271              		.thumb_func
 273              	ADC_Cmd:
 274              	.LFB115:
 390:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** }
 391:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
 392:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /**
 393:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @brief  Enables or disables the specified ADC peripheral.
 394:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 395:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  NewState: new state of the ADCx peripheral. 
 396:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *          This parameter can be: ENABLE or DISABLE.
 397:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @retval None
 398:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   */
 399:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** void ADC_Cmd(ADC_TypeDef* ADCx, FunctionalState NewState)
 400:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** {
 275              		.loc 1 400 0
 276              		.cfi_startproc
 277              		@ args = 0, pretend = 0, frame = 0
 278              		@ frame_needed = 0, uses_anonymous_args = 0
 279              		@ link register save eliminated.
 280              	.LVL20:
 401:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Check the parameters */
 402:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 403:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 404:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   if (NewState != DISABLE)
 405:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   {
 406:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Set the ADON bit to wake up the ADC from power down mode */
 407:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     ADCx->CR2 |= (uint32_t)ADC_CR2_ADON;
 281              		.loc 1 407 0
 282 0000 8368     		ldr	r3, [r0, #8]
 404:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   {
 283              		.loc 1 404 0
 284 0002 19B9     		cbnz	r1, .L17
 408:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   }
 409:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   else
 410:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   {
 411:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Disable the selected ADC peripheral */
 412:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     ADCx->CR2 &= (uint32_t)(~ADC_CR2_ADON);
 285              		.loc 1 412 0
 286 0004 23F00103 		bic	r3, r3, #1
 287 0008 8360     		str	r3, [r0, #8]
 288 000a 7047     		bx	lr
 289              	.L17:
 407:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   }
 290              		.loc 1 407 0
 291 000c 43F00103 		orr	r3, r3, #1
 292 0010 8360     		str	r3, [r0, #8]
 293 0012 7047     		bx	lr
 294              		.cfi_endproc
 295              	.LFE115:
 297              		.section	.text.ADC_AnalogWatchdogCmd,"ax",%progbits
 298              		.align	2
 299              		.global	ADC_AnalogWatchdogCmd
 300              		.thumb
 301              		.thumb_func
 303              	ADC_AnalogWatchdogCmd:
 304              	.LFB116:
 413:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   }
 414:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** }
 415:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /**
 416:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @}
 417:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   */
 418:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
 419:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /** @defgroup ADC_Group2 Analog Watchdog configuration functions
 420:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****  *  @brief    Analog Watchdog configuration functions 
 421:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****  *
 422:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** @verbatim   
 423:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****  ===============================================================================
 424:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****              ##### Analog Watchdog configuration functions #####
 425:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****  ===============================================================================  
 426:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     [..] This section provides functions allowing to configure the Analog Watchdog
 427:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****          (AWD) feature in the ADC.
 428:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
 429:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     [..] A typical configuration Analog Watchdog is done following these steps :
 430:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****       (#) the ADC guarded channel(s) is (are) selected using the 
 431:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****           ADC_AnalogWatchdogSingleChannelConfig() function.
 432:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****       (#) The Analog watchdog lower and higher threshold are configured using the  
 433:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****           ADC_AnalogWatchdogThresholdsConfig() function.
 434:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****       (#) The Analog watchdog is enabled and configured to enable the check, on one
 435:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****           or more channels, using the  ADC_AnalogWatchdogCmd() function.
 436:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** @endverbatim
 437:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @{
 438:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   */
 439:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
 440:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /**
 441:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @brief  Enables or disables the analog watchdog on single/all regular or 
 442:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *         injected channels
 443:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 444:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  ADC_AnalogWatchdog: the ADC analog watchdog configuration.
 445:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *         This parameter can be one of the following values:
 446:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_AnalogWatchdog_SingleRegEnable: Analog watchdog on a single regular channel
 447:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_AnalogWatchdog_SingleInjecEnable: Analog watchdog on a single injected chan
 448:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_AnalogWatchdog_SingleRegOrInjecEnable: Analog watchdog on a single regular 
 449:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_AnalogWatchdog_AllRegEnable: Analog watchdog on all regular channel
 450:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_AnalogWatchdog_AllInjecEnable: Analog watchdog on all injected channel
 451:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_AnalogWatchdog_AllRegAllInjecEnable: Analog watchdog on all regular and inj
 452:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_AnalogWatchdog_None: No channel guarded by the analog watchdog
 453:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @retval None	  
 454:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   */
 455:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** void ADC_AnalogWatchdogCmd(ADC_TypeDef* ADCx, uint32_t ADC_AnalogWatchdog)
 456:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** {
 305              		.loc 1 456 0
 306              		.cfi_startproc
 307              		@ args = 0, pretend = 0, frame = 0
 308              		@ frame_needed = 0, uses_anonymous_args = 0
 309              		@ link register save eliminated.
 310              	.LVL21:
 457:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   uint32_t tmpreg = 0;
 458:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Check the parameters */
 459:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 460:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_ANALOG_WATCHDOG(ADC_AnalogWatchdog));
 461:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
 462:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Get the old register value */
 463:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   tmpreg = ADCx->CR1;
 311              		.loc 1 463 0
 312 0000 4368     		ldr	r3, [r0, #4]
 313              	.LVL22:
 464:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
 465:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Clear AWDEN, JAWDEN and AWDSGL bits */
 466:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   tmpreg &= CR1_AWDMode_RESET;
 314              		.loc 1 466 0
 315 0002 23F44003 		bic	r3, r3, #12582912
 316              	.LVL23:
 317 0006 23F40073 		bic	r3, r3, #512
 318              	.LVL24:
 467:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
 468:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Set the analog watchdog enable mode */
 469:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   tmpreg |= ADC_AnalogWatchdog;
 319              		.loc 1 469 0
 320 000a 1943     		orrs	r1, r1, r3
 321              	.LVL25:
 470:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
 471:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Store the new register value */
 472:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   ADCx->CR1 = tmpreg;
 322              		.loc 1 472 0
 323 000c 4160     		str	r1, [r0, #4]
 324 000e 7047     		bx	lr
 325              		.cfi_endproc
 326              	.LFE116:
 328              		.section	.text.ADC_AnalogWatchdogThresholdsConfig,"ax",%progbits
 329              		.align	2
 330              		.global	ADC_AnalogWatchdogThresholdsConfig
 331              		.thumb
 332              		.thumb_func
 334              	ADC_AnalogWatchdogThresholdsConfig:
 335              	.LFB117:
 473:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** }
 474:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
 475:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /**
 476:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @brief  Configures the high and low thresholds of the analog watchdog.
 477:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 478:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  HighThreshold: the ADC analog watchdog High threshold value.
 479:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *          This parameter must be a 12-bit value.
 480:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  LowThreshold:  the ADC analog watchdog Low threshold value.
 481:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *          This parameter must be a 12-bit value.
 482:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @retval None
 483:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   */
 484:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** void ADC_AnalogWatchdogThresholdsConfig(ADC_TypeDef* ADCx, uint16_t HighThreshold,
 485:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****                                         uint16_t LowThreshold)
 486:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** {
 336              		.loc 1 486 0
 337              		.cfi_startproc
 338              		@ args = 0, pretend = 0, frame = 0
 339              		@ frame_needed = 0, uses_anonymous_args = 0
 340              		@ link register save eliminated.
 341              	.LVL26:
 487:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Check the parameters */
 488:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 489:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_THRESHOLD(HighThreshold));
 490:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_THRESHOLD(LowThreshold));
 491:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
 492:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Set the ADCx high threshold */
 493:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   ADCx->HTR = HighThreshold;
 342              		.loc 1 493 0
 343 0000 4162     		str	r1, [r0, #36]
 494:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
 495:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Set the ADCx low threshold */
 496:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   ADCx->LTR = LowThreshold;
 344              		.loc 1 496 0
 345 0002 8262     		str	r2, [r0, #40]
 346 0004 7047     		bx	lr
 347              		.cfi_endproc
 348              	.LFE117:
 350 0006 00BF     		.section	.text.ADC_AnalogWatchdogSingleChannelConfig,"ax",%progbits
 351              		.align	2
 352              		.global	ADC_AnalogWatchdogSingleChannelConfig
 353              		.thumb
 354              		.thumb_func
 356              	ADC_AnalogWatchdogSingleChannelConfig:
 357              	.LFB118:
 497:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** }
 498:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
 499:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /**
 500:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @brief  Configures the analog watchdog guarded single channel
 501:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 502:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  ADC_Channel: the ADC channel to configure for the analog watchdog. 
 503:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *          This parameter can be one of the following values:
 504:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_0: ADC Channel0 selected
 505:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_1: ADC Channel1 selected
 506:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_2: ADC Channel2 selected
 507:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_3: ADC Channel3 selected
 508:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_4: ADC Channel4 selected
 509:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_5: ADC Channel5 selected
 510:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_6: ADC Channel6 selected
 511:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_7: ADC Channel7 selected
 512:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_8: ADC Channel8 selected
 513:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_9: ADC Channel9 selected
 514:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_10: ADC Channel10 selected
 515:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_11: ADC Channel11 selected
 516:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_12: ADC Channel12 selected
 517:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_13: ADC Channel13 selected
 518:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_14: ADC Channel14 selected
 519:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_15: ADC Channel15 selected
 520:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_16: ADC Channel16 selected
 521:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_17: ADC Channel17 selected
 522:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_18: ADC Channel18 selected
 523:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @retval None
 524:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   */
 525:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** void ADC_AnalogWatchdogSingleChannelConfig(ADC_TypeDef* ADCx, uint8_t ADC_Channel)
 526:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** {
 358              		.loc 1 526 0
 359              		.cfi_startproc
 360              		@ args = 0, pretend = 0, frame = 0
 361              		@ frame_needed = 0, uses_anonymous_args = 0
 362              		@ link register save eliminated.
 363              	.LVL27:
 527:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   uint32_t tmpreg = 0;
 528:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Check the parameters */
 529:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 530:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_CHANNEL(ADC_Channel));
 531:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
 532:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Get the old register value */
 533:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   tmpreg = ADCx->CR1;
 364              		.loc 1 533 0
 365 0000 4368     		ldr	r3, [r0, #4]
 366              	.LVL28:
 534:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
 535:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Clear the Analog watchdog channel select bits */
 536:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   tmpreg &= CR1_AWDCH_RESET;
 367              		.loc 1 536 0
 368 0002 23F01F03 		bic	r3, r3, #31
 369              	.LVL29:
 537:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
 538:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Set the Analog watchdog channel */
 539:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   tmpreg |= ADC_Channel;
 370              		.loc 1 539 0
 371 0006 1943     		orrs	r1, r1, r3
 372              	.LVL30:
 540:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
 541:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Store the new register value */
 542:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   ADCx->CR1 = tmpreg;
 373              		.loc 1 542 0
 374 0008 4160     		str	r1, [r0, #4]
 375 000a 7047     		bx	lr
 376              		.cfi_endproc
 377              	.LFE118:
 379              		.section	.text.ADC_TempSensorVrefintCmd,"ax",%progbits
 380              		.align	2
 381              		.global	ADC_TempSensorVrefintCmd
 382              		.thumb
 383              		.thumb_func
 385              	ADC_TempSensorVrefintCmd:
 386              	.LFB119:
 543:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** }
 544:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /**
 545:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @}
 546:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   */
 547:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
 548:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /** @defgroup ADC_Group3 Temperature Sensor, Vrefint (Voltage Reference internal) 
 549:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****  *            and VBAT (Voltage BATtery) management functions
 550:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****  *  @brief   Temperature Sensor, Vrefint and VBAT management functions 
 551:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****  *
 552:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** @verbatim   
 553:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****  ===============================================================================
 554:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****       ##### Temperature Sensor, Vrefint and VBAT management functions #####
 555:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****  ===============================================================================  
 556:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     [..] This section provides functions allowing to enable/ disable the internal 
 557:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****          connections between the ADC and the Temperature Sensor, the Vrefint and 
 558:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****          the Vbat sources.
 559:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****      
 560:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     [..] A typical configuration to get the Temperature sensor and Vrefint channels 
 561:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****          voltages is done following these steps :
 562:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****       (#) Enable the internal connection of Temperature sensor and Vrefint sources 
 563:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****           with the ADC channels using ADC_TempSensorVrefintCmd() function. 
 564:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****       (#) Select the ADC_Channel_TempSensor and/or ADC_Channel_Vrefint using 
 565:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****           ADC_RegularChannelConfig() or  ADC_InjectedChannelConfig() functions 
 566:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****       (#) Get the voltage values, using ADC_GetConversionValue() or  
 567:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****           ADC_GetInjectedConversionValue().
 568:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
 569:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     [..] A typical configuration to get the VBAT channel voltage is done following 
 570:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****          these steps :
 571:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****       (#) Enable the internal connection of VBAT source with the ADC channel using 
 572:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****           ADC_VBATCmd() function. 
 573:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****       (#) Select the ADC_Channel_Vbat using ADC_RegularChannelConfig() or  
 574:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****           ADC_InjectedChannelConfig() functions 
 575:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****       (#) Get the voltage value, using ADC_GetConversionValue() or  
 576:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****           ADC_GetInjectedConversionValue().
 577:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****  
 578:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** @endverbatim
 579:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @{
 580:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   */
 581:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
 582:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
 583:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /**
 584:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @brief  Enables or disables the temperature sensor and Vrefint channels.
 585:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  NewState: new state of the temperature sensor and Vrefint channels.
 586:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *          This parameter can be: ENABLE or DISABLE.
 587:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @retval None
 588:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   */
 589:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** void ADC_TempSensorVrefintCmd(FunctionalState NewState)                
 590:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** {
 387              		.loc 1 590 0
 388              		.cfi_startproc
 389              		@ args = 0, pretend = 0, frame = 0
 390              		@ frame_needed = 0, uses_anonymous_args = 0
 391              		@ link register save eliminated.
 392              	.LVL31:
 591:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Check the parameters */
 592:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 593:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   if (NewState != DISABLE)
 594:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   {
 595:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Enable the temperature sensor and Vrefint channel*/
 596:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     ADC->CCR |= (uint32_t)ADC_CCR_TSVREFE;
 393              		.loc 1 596 0
 394 0000 054A     		ldr	r2, .L25
 395 0002 5368     		ldr	r3, [r2, #4]
 593:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   {
 396              		.loc 1 593 0
 397 0004 18B9     		cbnz	r0, .L24
 597:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   }
 598:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   else
 599:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   {
 600:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Disable the temperature sensor and Vrefint channel*/
 601:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     ADC->CCR &= (uint32_t)(~ADC_CCR_TSVREFE);
 398              		.loc 1 601 0
 399 0006 23F40003 		bic	r3, r3, #8388608
 400 000a 5360     		str	r3, [r2, #4]
 401 000c 7047     		bx	lr
 402              	.L24:
 596:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   }
 403              		.loc 1 596 0
 404 000e 43F40003 		orr	r3, r3, #8388608
 405 0012 5360     		str	r3, [r2, #4]
 406 0014 7047     		bx	lr
 407              	.L26:
 408 0016 00BF     		.align	2
 409              	.L25:
 410 0018 00230140 		.word	1073816320
 411              		.cfi_endproc
 412              	.LFE119:
 414              		.section	.text.ADC_VBATCmd,"ax",%progbits
 415              		.align	2
 416              		.global	ADC_VBATCmd
 417              		.thumb
 418              		.thumb_func
 420              	ADC_VBATCmd:
 421              	.LFB120:
 602:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   }
 603:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** }
 604:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
 605:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /**
 606:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @brief  Enables or disables the VBAT (Voltage Battery) channel.
 607:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * 
 608:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @note   the Battery voltage measured is equal to VBAT/2 on STM32F40xx and 
 609:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *         STM32F41xx devices and equal to VBAT/4 on STM32F42xx and STM32F43xx devices 
 610:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *              
 611:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  NewState: new state of the VBAT channel.
 612:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *          This parameter can be: ENABLE or DISABLE.
 613:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @retval None
 614:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   */
 615:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** void ADC_VBATCmd(FunctionalState NewState)                             
 616:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** {
 422              		.loc 1 616 0
 423              		.cfi_startproc
 424              		@ args = 0, pretend = 0, frame = 0
 425              		@ frame_needed = 0, uses_anonymous_args = 0
 426              		@ link register save eliminated.
 427              	.LVL32:
 617:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Check the parameters */
 618:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 619:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   if (NewState != DISABLE)
 620:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   {
 621:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Enable the VBAT channel*/
 622:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     ADC->CCR |= (uint32_t)ADC_CCR_VBATE;
 428              		.loc 1 622 0
 429 0000 054A     		ldr	r2, .L31
 430 0002 5368     		ldr	r3, [r2, #4]
 619:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   {
 431              		.loc 1 619 0
 432 0004 18B9     		cbnz	r0, .L30
 623:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   }
 624:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   else
 625:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   {
 626:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Disable the VBAT channel*/
 627:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     ADC->CCR &= (uint32_t)(~ADC_CCR_VBATE);
 433              		.loc 1 627 0
 434 0006 23F48003 		bic	r3, r3, #4194304
 435 000a 5360     		str	r3, [r2, #4]
 436 000c 7047     		bx	lr
 437              	.L30:
 622:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   }
 438              		.loc 1 622 0
 439 000e 43F48003 		orr	r3, r3, #4194304
 440 0012 5360     		str	r3, [r2, #4]
 441 0014 7047     		bx	lr
 442              	.L32:
 443 0016 00BF     		.align	2
 444              	.L31:
 445 0018 00230140 		.word	1073816320
 446              		.cfi_endproc
 447              	.LFE120:
 449              		.section	.text.ADC_RegularChannelConfig,"ax",%progbits
 450              		.align	2
 451              		.global	ADC_RegularChannelConfig
 452              		.thumb
 453              		.thumb_func
 455              	ADC_RegularChannelConfig:
 456              	.LFB121:
 628:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   }
 629:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** }
 630:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
 631:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /**
 632:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @}
 633:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   */
 634:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
 635:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /** @defgroup ADC_Group4 Regular Channels Configuration functions
 636:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****  *  @brief   Regular Channels Configuration functions 
 637:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****  *
 638:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** @verbatim   
 639:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****  ===============================================================================
 640:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****              ##### Regular Channels Configuration functions #####
 641:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****  ===============================================================================  
 642:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
 643:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     [..] This section provides functions allowing to manage the ADC's regular channels,
 644:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****          it is composed of 2 sub sections : 
 645:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
 646:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****       (#) Configuration and management functions for regular channels: This subsection 
 647:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****           provides functions allowing to configure the ADC regular channels :    
 648:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****          (++) Configure the rank in the regular group sequencer for each channel
 649:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****          (++) Configure the sampling time for each channel
 650:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****          (++) select the conversion Trigger for regular channels
 651:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****          (++) select the desired EOC event behavior configuration
 652:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****          (++) Activate the continuous Mode  (*)
 653:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****          (++) Activate the Discontinuous Mode 
 654:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****          -@@- Please Note that the following features for regular channels 
 655:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****              are configurated using the ADC_Init() function : 
 656:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****            (+@@) scan mode activation 
 657:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****            (+@@) continuous mode activation (**) 
 658:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****            (+@@) External trigger source  
 659:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****            (+@@) External trigger edge 
 660:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****            (+@@) number of conversion in the regular channels group sequencer.
 661:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****      
 662:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****          -@@- (*) and (**) are performing the same configuration
 663:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****      
 664:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****       (#) Get the conversion data: This subsection provides an important function in 
 665:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****           the ADC peripheral since it returns the converted data of the current 
 666:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****           regular channel. When the Conversion value is read, the EOC Flag is 
 667:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****           automatically cleared.
 668:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****      
 669:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****           -@- For multi ADC mode, the last ADC1, ADC2 and ADC3 regular conversions 
 670:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****               results data (in the selected multi mode) can be returned in the same 
 671:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****               time using ADC_GetMultiModeConversionValue() function. 
 672:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****          
 673:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** @endverbatim
 674:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @{
 675:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   */
 676:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /**
 677:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @brief  Configures for the selected ADC regular channel its corresponding
 678:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *         rank in the sequencer and its sample time.
 679:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 680:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  ADC_Channel: the ADC channel to configure. 
 681:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *          This parameter can be one of the following values:
 682:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_0: ADC Channel0 selected
 683:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_1: ADC Channel1 selected
 684:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_2: ADC Channel2 selected
 685:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_3: ADC Channel3 selected
 686:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_4: ADC Channel4 selected
 687:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_5: ADC Channel5 selected
 688:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_6: ADC Channel6 selected
 689:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_7: ADC Channel7 selected
 690:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_8: ADC Channel8 selected
 691:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_9: ADC Channel9 selected
 692:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_10: ADC Channel10 selected
 693:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_11: ADC Channel11 selected
 694:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_12: ADC Channel12 selected
 695:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_13: ADC Channel13 selected
 696:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_14: ADC Channel14 selected
 697:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_15: ADC Channel15 selected
 698:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_16: ADC Channel16 selected
 699:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_17: ADC Channel17 selected
 700:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_18: ADC Channel18 selected                       
 701:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  Rank: The rank in the regular group sequencer.
 702:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *          This parameter must be between 1 to 16.
 703:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  ADC_SampleTime: The sample time value to be set for the selected channel. 
 704:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *          This parameter can be one of the following values:
 705:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_SampleTime_3Cycles: Sample time equal to 3 cycles
 706:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_SampleTime_15Cycles: Sample time equal to 15 cycles
 707:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_SampleTime_28Cycles: Sample time equal to 28 cycles
 708:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_SampleTime_56Cycles: Sample time equal to 56 cycles	
 709:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_SampleTime_84Cycles: Sample time equal to 84 cycles	
 710:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_SampleTime_112Cycles: Sample time equal to 112 cycles	
 711:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_SampleTime_144Cycles: Sample time equal to 144 cycles	
 712:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_SampleTime_480Cycles: Sample time equal to 480 cycles	
 713:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @retval None
 714:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   */
 715:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** void ADC_RegularChannelConfig(ADC_TypeDef* ADCx, uint8_t ADC_Channel, uint8_t Rank, uint8_t ADC_Sam
 716:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** {
 457              		.loc 1 716 0
 458              		.cfi_startproc
 459              		@ args = 0, pretend = 0, frame = 0
 460              		@ frame_needed = 0, uses_anonymous_args = 0
 461              		@ link register save eliminated.
 462              	.LVL33:
 717:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   uint32_t tmpreg1 = 0, tmpreg2 = 0;
 718:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Check the parameters */
 719:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 720:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_CHANNEL(ADC_Channel));
 721:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_REGULAR_RANK(Rank));
 722:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_SAMPLE_TIME(ADC_SampleTime));
 723:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
 724:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* if ADC_Channel_10 ... ADC_Channel_18 is selected */
 725:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   if (ADC_Channel > ADC_Channel_9)
 463              		.loc 1 725 0
 464 0000 0929     		cmp	r1, #9
 716:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   uint32_t tmpreg1 = 0, tmpreg2 = 0;
 465              		.loc 1 716 0
 466 0002 70B4     		push	{r4, r5, r6}
 467              	.LCFI5:
 468              		.cfi_def_cfa_offset 12
 469              		.cfi_offset 4, -12
 470              		.cfi_offset 5, -8
 471              		.cfi_offset 6, -4
 472              		.loc 1 725 0
 473 0004 1CD9     		bls	.L34
 726:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   {
 727:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Get the old register value */
 728:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     tmpreg1 = ADCx->SMPR1;
 729:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     
 730:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Calculate the mask to clear */
 731:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     tmpreg2 = SMPR1_SMP_SET << (3 * (ADC_Channel - 10));
 474              		.loc 1 731 0
 475 0006 A1F10A04 		sub	r4, r1, #10
 476 000a 04EB4404 		add	r4, r4, r4, lsl #1
 728:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     
 477              		.loc 1 728 0
 478 000e C568     		ldr	r5, [r0, #12]
 479              	.LVL34:
 480              		.loc 1 731 0
 481 0010 0726     		movs	r6, #7
 482 0012 A640     		lsls	r6, r6, r4
 483              	.LVL35:
 732:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     
 733:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Clear the old sample time */
 734:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     tmpreg1 &= ~tmpreg2;
 735:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     
 736:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Calculate the mask to set */
 737:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     tmpreg2 = (uint32_t)ADC_SampleTime << (3 * (ADC_Channel - 10));
 484              		.loc 1 737 0
 485 0014 A340     		lsls	r3, r3, r4
 486              	.LVL36:
 734:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     
 487              		.loc 1 734 0
 488 0016 25EA0604 		bic	r4, r5, r6
 489              	.LVL37:
 738:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     
 739:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Set the new sample time */
 740:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     tmpreg1 |= tmpreg2;
 490              		.loc 1 740 0
 491 001a 2343     		orrs	r3, r3, r4
 492              	.LVL38:
 741:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     
 742:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Store the new register value */
 743:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     ADCx->SMPR1 = tmpreg1;
 744:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   }
 745:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   else /* ADC_Channel include in ADC_Channel_[0..9] */
 746:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   {
 747:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Get the old register value */
 748:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     tmpreg1 = ADCx->SMPR2;
 749:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     
 750:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Calculate the mask to clear */
 751:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     tmpreg2 = SMPR2_SMP_SET << (3 * ADC_Channel);
 752:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     
 753:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Clear the old sample time */
 754:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     tmpreg1 &= ~tmpreg2;
 755:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     
 756:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Calculate the mask to set */
 757:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     tmpreg2 = (uint32_t)ADC_SampleTime << (3 * ADC_Channel);
 758:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     
 759:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Set the new sample time */
 760:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     tmpreg1 |= tmpreg2;
 761:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     
 762:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Store the new register value */
 763:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     ADCx->SMPR2 = tmpreg1;
 764:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   }
 765:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* For Rank 1 to 6 */
 766:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   if (Rank < 7)
 493              		.loc 1 766 0
 494 001c 062A     		cmp	r2, #6
 743:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   }
 495              		.loc 1 743 0
 496 001e C360     		str	r3, [r0, #12]
 497              		.loc 1 766 0
 498 0020 1AD9     		bls	.L40
 499              	.L36:
 767:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   {
 768:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Get the old register value */
 769:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     tmpreg1 = ADCx->SQR3;
 770:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     
 771:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Calculate the mask to clear */
 772:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     tmpreg2 = SQR3_SQ_SET << (5 * (Rank - 1));
 773:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     
 774:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Clear the old SQx bits for the selected rank */
 775:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     tmpreg1 &= ~tmpreg2;
 776:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     
 777:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Calculate the mask to set */
 778:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     tmpreg2 = (uint32_t)ADC_Channel << (5 * (Rank - 1));
 779:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     
 780:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Set the SQx bits for the selected rank */
 781:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     tmpreg1 |= tmpreg2;
 782:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     
 783:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Store the new register value */
 784:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     ADCx->SQR3 = tmpreg1;
 785:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   }
 786:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* For Rank 7 to 12 */
 787:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   else if (Rank < 13)
 500              		.loc 1 787 0
 501 0022 0C2A     		cmp	r2, #12
 502 0024 25D9     		bls	.L41
 788:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   {
 789:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Get the old register value */
 790:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     tmpreg1 = ADCx->SQR2;
 791:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     
 792:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Calculate the mask to clear */
 793:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     tmpreg2 = SQR2_SQ_SET << (5 * (Rank - 7));
 794:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     
 795:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Clear the old SQx bits for the selected rank */
 796:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     tmpreg1 &= ~tmpreg2;
 797:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     
 798:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Calculate the mask to set */
 799:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     tmpreg2 = (uint32_t)ADC_Channel << (5 * (Rank - 7));
 800:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     
 801:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Set the SQx bits for the selected rank */
 802:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     tmpreg1 |= tmpreg2;
 803:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     
 804:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Store the new register value */
 805:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     ADCx->SQR2 = tmpreg1;
 806:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   }
 807:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* For Rank 13 to 16 */
 808:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   else
 809:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   {
 810:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Get the old register value */
 811:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     tmpreg1 = ADCx->SQR1;
 812:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     
 813:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Calculate the mask to clear */
 814:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     tmpreg2 = SQR1_SQ_SET << (5 * (Rank - 13));
 503              		.loc 1 814 0
 504 0026 0D3A     		subs	r2, r2, #13
 505              	.LVL39:
 811:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     
 506              		.loc 1 811 0
 507 0028 C46A     		ldr	r4, [r0, #44]
 508              	.LVL40:
 509              		.loc 1 814 0
 510 002a 02EB8202 		add	r2, r2, r2, lsl #2
 511              	.LVL41:
 512 002e 1F23     		movs	r3, #31
 513 0030 9340     		lsls	r3, r3, r2
 514              	.LVL42:
 815:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     
 816:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Clear the old SQx bits for the selected rank */
 817:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     tmpreg1 &= ~tmpreg2;
 515              		.loc 1 817 0
 516 0032 24EA0303 		bic	r3, r4, r3
 517              	.LVL43:
 818:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     
 819:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Calculate the mask to set */
 820:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     tmpreg2 = (uint32_t)ADC_Channel << (5 * (Rank - 13));
 518              		.loc 1 820 0
 519 0036 9140     		lsls	r1, r1, r2
 520              	.LVL44:
 821:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     
 822:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Set the SQx bits for the selected rank */
 823:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     tmpreg1 |= tmpreg2;
 521              		.loc 1 823 0
 522 0038 1943     		orrs	r1, r1, r3
 523              	.LVL45:
 824:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     
 825:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Store the new register value */
 826:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     ADCx->SQR1 = tmpreg1;
 524              		.loc 1 826 0
 525 003a C162     		str	r1, [r0, #44]
 827:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   }
 828:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** }
 526              		.loc 1 828 0
 527 003c 70BC     		pop	{r4, r5, r6}
 528              	.LCFI6:
 529              		.cfi_remember_state
 530              		.cfi_restore 6
 531              		.cfi_restore 5
 532              		.cfi_restore 4
 533              		.cfi_def_cfa_offset 0
 534 003e 7047     		bx	lr
 535              	.LVL46:
 536              	.L34:
 537              	.LCFI7:
 538              		.cfi_restore_state
 751:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     
 539              		.loc 1 751 0
 540 0040 01EB4106 		add	r6, r1, r1, lsl #1
 748:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     
 541              		.loc 1 748 0
 542 0044 0569     		ldr	r5, [r0, #16]
 543              	.LVL47:
 751:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     
 544              		.loc 1 751 0
 545 0046 0724     		movs	r4, #7
 546 0048 B440     		lsls	r4, r4, r6
 547              	.LVL48:
 757:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     
 548              		.loc 1 757 0
 549 004a B340     		lsls	r3, r3, r6
 550              	.LVL49:
 754:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     
 551              		.loc 1 754 0
 552 004c 25EA0404 		bic	r4, r5, r4
 553              	.LVL50:
 760:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     
 554              		.loc 1 760 0
 555 0050 2343     		orrs	r3, r3, r4
 556              	.LVL51:
 766:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   {
 557              		.loc 1 766 0
 558 0052 062A     		cmp	r2, #6
 763:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   }
 559              		.loc 1 763 0
 560 0054 0361     		str	r3, [r0, #16]
 766:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   {
 561              		.loc 1 766 0
 562 0056 E4D8     		bhi	.L36
 563              	.L40:
 772:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     
 564              		.loc 1 772 0
 565 0058 013A     		subs	r2, r2, #1
 566              	.LVL52:
 769:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     
 567              		.loc 1 769 0
 568 005a 446B     		ldr	r4, [r0, #52]
 569              	.LVL53:
 772:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     
 570              		.loc 1 772 0
 571 005c 02EB8202 		add	r2, r2, r2, lsl #2
 572              	.LVL54:
 573 0060 1F23     		movs	r3, #31
 574 0062 9340     		lsls	r3, r3, r2
 575              	.LVL55:
 775:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     
 576              		.loc 1 775 0
 577 0064 24EA0303 		bic	r3, r4, r3
 578              	.LVL56:
 778:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     
 579              		.loc 1 778 0
 580 0068 9140     		lsls	r1, r1, r2
 581              	.LVL57:
 781:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     
 582              		.loc 1 781 0
 583 006a 1943     		orrs	r1, r1, r3
 584              	.LVL58:
 784:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   }
 585              		.loc 1 784 0
 586 006c 4163     		str	r1, [r0, #52]
 587              		.loc 1 828 0
 588 006e 70BC     		pop	{r4, r5, r6}
 589              	.LCFI8:
 590              		.cfi_remember_state
 591              		.cfi_restore 4
 592              		.cfi_restore 5
 593              		.cfi_restore 6
 594              		.cfi_def_cfa_offset 0
 595 0070 7047     		bx	lr
 596              	.LVL59:
 597              	.L41:
 598              	.LCFI9:
 599              		.cfi_restore_state
 793:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     
 600              		.loc 1 793 0
 601 0072 073A     		subs	r2, r2, #7
 602              	.LVL60:
 790:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     
 603              		.loc 1 790 0
 604 0074 046B     		ldr	r4, [r0, #48]
 605              	.LVL61:
 793:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     
 606              		.loc 1 793 0
 607 0076 02EB8202 		add	r2, r2, r2, lsl #2
 608              	.LVL62:
 609 007a 1F23     		movs	r3, #31
 610 007c 9340     		lsls	r3, r3, r2
 611              	.LVL63:
 796:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     
 612              		.loc 1 796 0
 613 007e 24EA0303 		bic	r3, r4, r3
 614              	.LVL64:
 799:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     
 615              		.loc 1 799 0
 616 0082 9140     		lsls	r1, r1, r2
 617              	.LVL65:
 802:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     
 618              		.loc 1 802 0
 619 0084 1943     		orrs	r1, r1, r3
 620              	.LVL66:
 805:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   }
 621              		.loc 1 805 0
 622 0086 0163     		str	r1, [r0, #48]
 623              		.loc 1 828 0
 624 0088 70BC     		pop	{r4, r5, r6}
 625              	.LCFI10:
 626              		.cfi_restore 4
 627              		.cfi_restore 5
 628              		.cfi_restore 6
 629              		.cfi_def_cfa_offset 0
 630 008a 7047     		bx	lr
 631              		.cfi_endproc
 632              	.LFE121:
 634              		.section	.text.ADC_SoftwareStartConv,"ax",%progbits
 635              		.align	2
 636              		.global	ADC_SoftwareStartConv
 637              		.thumb
 638              		.thumb_func
 640              	ADC_SoftwareStartConv:
 641              	.LFB122:
 829:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
 830:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /**
 831:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @brief  Enables the selected ADC software start conversion of the regular channels.
 832:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 833:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @retval None
 834:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   */
 835:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** void ADC_SoftwareStartConv(ADC_TypeDef* ADCx)
 836:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** {
 642              		.loc 1 836 0
 643              		.cfi_startproc
 644              		@ args = 0, pretend = 0, frame = 0
 645              		@ frame_needed = 0, uses_anonymous_args = 0
 646              		@ link register save eliminated.
 647              	.LVL67:
 837:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Check the parameters */
 838:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 839:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
 840:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Enable the selected ADC conversion for regular group */
 841:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   ADCx->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 648              		.loc 1 841 0
 649 0000 8368     		ldr	r3, [r0, #8]
 650 0002 43F08043 		orr	r3, r3, #1073741824
 651 0006 8360     		str	r3, [r0, #8]
 652 0008 7047     		bx	lr
 653              		.cfi_endproc
 654              	.LFE122:
 656 000a 00BF     		.section	.text.ADC_GetSoftwareStartConvStatus,"ax",%progbits
 657              		.align	2
 658              		.global	ADC_GetSoftwareStartConvStatus
 659              		.thumb
 660              		.thumb_func
 662              	ADC_GetSoftwareStartConvStatus:
 663              	.LFB123:
 842:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** }
 843:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
 844:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /**
 845:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @brief  Gets the selected ADC Software start regular conversion Status.
 846:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 847:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @retval The new state of ADC software start conversion (SET or RESET).
 848:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   */
 849:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** FlagStatus ADC_GetSoftwareStartConvStatus(ADC_TypeDef* ADCx)
 850:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** {
 664              		.loc 1 850 0
 665              		.cfi_startproc
 666              		@ args = 0, pretend = 0, frame = 0
 667              		@ frame_needed = 0, uses_anonymous_args = 0
 668              		@ link register save eliminated.
 669              	.LVL68:
 851:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   FlagStatus bitstatus = RESET;
 852:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Check the parameters */
 853:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 854:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
 855:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Check the status of SWSTART bit */
 856:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   if ((ADCx->CR2 & ADC_CR2_SWSTART) != (uint32_t)RESET)
 670              		.loc 1 856 0
 671 0000 8068     		ldr	r0, [r0, #8]
 672              	.LVL69:
 857:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   {
 858:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* SWSTART bit is set */
 859:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     bitstatus = SET;
 860:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   }
 861:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   else
 862:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   {
 863:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* SWSTART bit is reset */
 864:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     bitstatus = RESET;
 865:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   }
 866:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
 867:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Return the SWSTART bit status */
 868:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   return  bitstatus;
 869:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** }
 673              		.loc 1 869 0
 674 0002 C0F38070 		ubfx	r0, r0, #30, #1
 675              	.LVL70:
 676 0006 7047     		bx	lr
 677              		.cfi_endproc
 678              	.LFE123:
 680              		.section	.text.ADC_EOCOnEachRegularChannelCmd,"ax",%progbits
 681              		.align	2
 682              		.global	ADC_EOCOnEachRegularChannelCmd
 683              		.thumb
 684              		.thumb_func
 686              	ADC_EOCOnEachRegularChannelCmd:
 687              	.LFB124:
 870:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
 871:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
 872:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /**
 873:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @brief  Enables or disables the EOC on each regular channel conversion
 874:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 875:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  NewState: new state of the selected ADC EOC flag rising
 876:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *          This parameter can be: ENABLE or DISABLE.
 877:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @retval None
 878:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   */
 879:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** void ADC_EOCOnEachRegularChannelCmd(ADC_TypeDef* ADCx, FunctionalState NewState)
 880:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** {
 688              		.loc 1 880 0
 689              		.cfi_startproc
 690              		@ args = 0, pretend = 0, frame = 0
 691              		@ frame_needed = 0, uses_anonymous_args = 0
 692              		@ link register save eliminated.
 693              	.LVL71:
 881:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Check the parameters */
 882:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 883:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 884:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
 885:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   if (NewState != DISABLE)
 886:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   {
 887:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Enable the selected ADC EOC rising on each regular channel conversion */
 888:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     ADCx->CR2 |= (uint32_t)ADC_CR2_EOCS;
 694              		.loc 1 888 0
 695 0000 8368     		ldr	r3, [r0, #8]
 885:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   {
 696              		.loc 1 885 0
 697 0002 19B9     		cbnz	r1, .L47
 889:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   }
 890:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   else
 891:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   {
 892:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Disable the selected ADC EOC rising on each regular channel conversion */
 893:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     ADCx->CR2 &= (uint32_t)(~ADC_CR2_EOCS);
 698              		.loc 1 893 0
 699 0004 23F48063 		bic	r3, r3, #1024
 700 0008 8360     		str	r3, [r0, #8]
 701 000a 7047     		bx	lr
 702              	.L47:
 888:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   }
 703              		.loc 1 888 0
 704 000c 43F48063 		orr	r3, r3, #1024
 705 0010 8360     		str	r3, [r0, #8]
 706 0012 7047     		bx	lr
 707              		.cfi_endproc
 708              	.LFE124:
 710              		.section	.text.ADC_ContinuousModeCmd,"ax",%progbits
 711              		.align	2
 712              		.global	ADC_ContinuousModeCmd
 713              		.thumb
 714              		.thumb_func
 716              	ADC_ContinuousModeCmd:
 717              	.LFB125:
 894:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   }
 895:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** }
 896:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
 897:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /**
 898:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @brief  Enables or disables the ADC continuous conversion mode 
 899:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 900:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  NewState: new state of the selected ADC continuous conversion mode
 901:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *          This parameter can be: ENABLE or DISABLE.
 902:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @retval None
 903:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   */
 904:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** void ADC_ContinuousModeCmd(ADC_TypeDef* ADCx, FunctionalState NewState)
 905:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** {
 718              		.loc 1 905 0
 719              		.cfi_startproc
 720              		@ args = 0, pretend = 0, frame = 0
 721              		@ frame_needed = 0, uses_anonymous_args = 0
 722              		@ link register save eliminated.
 723              	.LVL72:
 906:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Check the parameters */
 907:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 908:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 909:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
 910:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   if (NewState != DISABLE)
 911:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   {
 912:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Enable the selected ADC continuous conversion mode */
 913:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     ADCx->CR2 |= (uint32_t)ADC_CR2_CONT;
 724              		.loc 1 913 0
 725 0000 8368     		ldr	r3, [r0, #8]
 910:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   {
 726              		.loc 1 910 0
 727 0002 19B9     		cbnz	r1, .L51
 914:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   }
 915:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   else
 916:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   {
 917:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Disable the selected ADC continuous conversion mode */
 918:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     ADCx->CR2 &= (uint32_t)(~ADC_CR2_CONT);
 728              		.loc 1 918 0
 729 0004 23F00203 		bic	r3, r3, #2
 730 0008 8360     		str	r3, [r0, #8]
 731 000a 7047     		bx	lr
 732              	.L51:
 913:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   }
 733              		.loc 1 913 0
 734 000c 43F00203 		orr	r3, r3, #2
 735 0010 8360     		str	r3, [r0, #8]
 736 0012 7047     		bx	lr
 737              		.cfi_endproc
 738              	.LFE125:
 740              		.section	.text.ADC_DiscModeChannelCountConfig,"ax",%progbits
 741              		.align	2
 742              		.global	ADC_DiscModeChannelCountConfig
 743              		.thumb
 744              		.thumb_func
 746              	ADC_DiscModeChannelCountConfig:
 747              	.LFB126:
 919:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   }
 920:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** }
 921:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
 922:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /**
 923:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @brief  Configures the discontinuous mode for the selected ADC regular group 
 924:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *         channel.
 925:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 926:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  Number: specifies the discontinuous mode regular channel count value.
 927:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *          This number must be between 1 and 8.
 928:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @retval None
 929:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   */
 930:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** void ADC_DiscModeChannelCountConfig(ADC_TypeDef* ADCx, uint8_t Number)
 931:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** {
 748              		.loc 1 931 0
 749              		.cfi_startproc
 750              		@ args = 0, pretend = 0, frame = 0
 751              		@ frame_needed = 0, uses_anonymous_args = 0
 752              		@ link register save eliminated.
 753              	.LVL73:
 932:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   uint32_t tmpreg1 = 0;
 933:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   uint32_t tmpreg2 = 0;
 934:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
 935:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Check the parameters */
 936:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 937:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_REGULAR_DISC_NUMBER(Number));
 938:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
 939:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Get the old register value */
 940:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   tmpreg1 = ADCx->CR1;
 754              		.loc 1 940 0
 755 0000 4368     		ldr	r3, [r0, #4]
 756              	.LVL74:
 941:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
 942:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Clear the old discontinuous mode channel count */
 943:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   tmpreg1 &= CR1_DISCNUM_RESET;
 944:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
 945:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Set the discontinuous mode channel count */
 946:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   tmpreg2 = Number - 1;
 757              		.loc 1 946 0
 758 0002 0139     		subs	r1, r1, #1
 759              	.LVL75:
 943:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
 760              		.loc 1 943 0
 761 0004 23F46043 		bic	r3, r3, #57344
 762              	.LVL76:
 947:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   tmpreg1 |= tmpreg2 << 13;
 763              		.loc 1 947 0
 764 0008 43EA4131 		orr	r1, r3, r1, lsl #13
 765              	.LVL77:
 948:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
 949:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Store the new register value */
 950:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   ADCx->CR1 = tmpreg1;
 766              		.loc 1 950 0
 767 000c 4160     		str	r1, [r0, #4]
 768 000e 7047     		bx	lr
 769              		.cfi_endproc
 770              	.LFE126:
 772              		.section	.text.ADC_DiscModeCmd,"ax",%progbits
 773              		.align	2
 774              		.global	ADC_DiscModeCmd
 775              		.thumb
 776              		.thumb_func
 778              	ADC_DiscModeCmd:
 779              	.LFB127:
 951:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** }
 952:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
 953:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /**
 954:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @brief  Enables or disables the discontinuous mode on regular group channel 
 955:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *         for the specified ADC
 956:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 957:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  NewState: new state of the selected ADC discontinuous mode on 
 958:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *         regular group channel.
 959:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *          This parameter can be: ENABLE or DISABLE.
 960:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @retval None
 961:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   */
 962:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** void ADC_DiscModeCmd(ADC_TypeDef* ADCx, FunctionalState NewState)
 963:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** {
 780              		.loc 1 963 0
 781              		.cfi_startproc
 782              		@ args = 0, pretend = 0, frame = 0
 783              		@ frame_needed = 0, uses_anonymous_args = 0
 784              		@ link register save eliminated.
 785              	.LVL78:
 964:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Check the parameters */
 965:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 966:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 967:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
 968:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   if (NewState != DISABLE)
 969:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   {
 970:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Enable the selected ADC regular discontinuous mode */
 971:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     ADCx->CR1 |= (uint32_t)ADC_CR1_DISCEN;
 786              		.loc 1 971 0
 787 0000 4368     		ldr	r3, [r0, #4]
 968:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   {
 788              		.loc 1 968 0
 789 0002 19B9     		cbnz	r1, .L56
 972:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   }
 973:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   else
 974:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   {
 975:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Disable the selected ADC regular discontinuous mode */
 976:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     ADCx->CR1 &= (uint32_t)(~ADC_CR1_DISCEN);
 790              		.loc 1 976 0
 791 0004 23F40063 		bic	r3, r3, #2048
 792 0008 4360     		str	r3, [r0, #4]
 793 000a 7047     		bx	lr
 794              	.L56:
 971:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   }
 795              		.loc 1 971 0
 796 000c 43F40063 		orr	r3, r3, #2048
 797 0010 4360     		str	r3, [r0, #4]
 798 0012 7047     		bx	lr
 799              		.cfi_endproc
 800              	.LFE127:
 802              		.section	.text.ADC_GetConversionValue,"ax",%progbits
 803              		.align	2
 804              		.global	ADC_GetConversionValue
 805              		.thumb
 806              		.thumb_func
 808              	ADC_GetConversionValue:
 809              	.LFB128:
 977:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   }
 978:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** }
 979:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
 980:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /**
 981:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @brief  Returns the last ADCx conversion result data for regular channel.
 982:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 983:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @retval The Data conversion value.
 984:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   */
 985:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** uint16_t ADC_GetConversionValue(ADC_TypeDef* ADCx)
 986:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** {
 810              		.loc 1 986 0
 811              		.cfi_startproc
 812              		@ args = 0, pretend = 0, frame = 0
 813              		@ frame_needed = 0, uses_anonymous_args = 0
 814              		@ link register save eliminated.
 815              	.LVL79:
 987:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Check the parameters */
 988:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 989:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
 990:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Return the selected ADC conversion value */
 991:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   return (uint16_t) ADCx->DR;
 816              		.loc 1 991 0
 817 0000 C06C     		ldr	r0, [r0, #76]
 818              	.LVL80:
 992:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** }
 819              		.loc 1 992 0
 820 0002 80B2     		uxth	r0, r0
 821 0004 7047     		bx	lr
 822              		.cfi_endproc
 823              	.LFE128:
 825 0006 00BF     		.section	.text.ADC_GetMultiModeConversionValue,"ax",%progbits
 826              		.align	2
 827              		.global	ADC_GetMultiModeConversionValue
 828              		.thumb
 829              		.thumb_func
 831              	ADC_GetMultiModeConversionValue:
 832              	.LFB129:
 993:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
 994:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /**
 995:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @brief  Returns the last ADC1, ADC2 and ADC3 regular conversions results 
 996:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *         data in the selected multi mode.
 997:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  None  
 998:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @retval The Data conversion value.
 999:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @note   In dual mode, the value returned by this function is as following
1000:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *           Data[15:0] : these bits contain the regular data of ADC1.
1001:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *           Data[31:16]: these bits contain the regular data of ADC2.
1002:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @note   In triple mode, the value returned by this function is as following
1003:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *           Data[15:0] : these bits contain alternatively the regular data of ADC1, ADC3 and ADC2
1004:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *           Data[31:16]: these bits contain alternatively the regular data of ADC2, ADC1 and ADC3
1005:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   */
1006:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** uint32_t ADC_GetMultiModeConversionValue(void)
1007:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** {
 833              		.loc 1 1007 0
 834              		.cfi_startproc
 835              		@ args = 0, pretend = 0, frame = 0
 836              		@ frame_needed = 0, uses_anonymous_args = 0
 837              		@ link register save eliminated.
1008:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Return the multi mode conversion value */
1009:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   return (*(__IO uint32_t *) CDR_ADDRESS);
 838              		.loc 1 1009 0
 839 0000 014B     		ldr	r3, .L59
 840 0002 1868     		ldr	r0, [r3]
1010:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** }
 841              		.loc 1 1010 0
 842 0004 7047     		bx	lr
 843              	.L60:
 844 0006 00BF     		.align	2
 845              	.L59:
 846 0008 08230140 		.word	1073816328
 847              		.cfi_endproc
 848              	.LFE129:
 850              		.section	.text.ADC_DMACmd,"ax",%progbits
 851              		.align	2
 852              		.global	ADC_DMACmd
 853              		.thumb
 854              		.thumb_func
 856              	ADC_DMACmd:
 857              	.LFB130:
1011:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /**
1012:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @}
1013:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   */
1014:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
1015:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /** @defgroup ADC_Group5 Regular Channels DMA Configuration functions
1016:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****  *  @brief   Regular Channels DMA Configuration functions 
1017:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****  *
1018:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** @verbatim   
1019:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****  ===============================================================================
1020:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****             ##### Regular Channels DMA Configuration functions #####
1021:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****  ===============================================================================  
1022:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     [..] This section provides functions allowing to configure the DMA for ADC 
1023:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****          regular channels.
1024:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****          Since converted regular channel values are stored into a unique data 
1025:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****          register, it is useful to use DMA for conversion of more than one regular 
1026:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****          channel. This avoids the loss of the data already stored in the ADC 
1027:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****          Data register.   
1028:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****          When the DMA mode is enabled (using the ADC_DMACmd() function), after each
1029:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****          conversion of a regular channel, a DMA request is generated.
1030:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     [..] Depending on the "DMA disable selection for Independent ADC mode" 
1031:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****          configuration (using the ADC_DMARequestAfterLastTransferCmd() function), 
1032:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****          at the end of the last DMA transfer, two possibilities are allowed:
1033:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****       (+) No new DMA request is issued to the DMA controller (feature DISABLED) 
1034:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****       (+) Requests can continue to be generated (feature ENABLED).  
1035:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     [..] Depending on the "DMA disable selection for multi ADC mode" configuration 
1036:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****          (using the void ADC_MultiModeDMARequestAfterLastTransferCmd() function), 
1037:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****          at the end of the last DMA transfer, two possibilities are allowed:
1038:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****         (+) No new DMA request is issued to the DMA controller (feature DISABLED) 
1039:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****         (+) Requests can continue to be generated (feature ENABLED).
1040:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
1041:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** @endverbatim
1042:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @{
1043:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   */
1044:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
1045:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****  /**
1046:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @brief  Enables or disables the specified ADC DMA request.
1047:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1048:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  NewState: new state of the selected ADC DMA transfer.
1049:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *          This parameter can be: ENABLE or DISABLE.
1050:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @retval None
1051:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   */
1052:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** void ADC_DMACmd(ADC_TypeDef* ADCx, FunctionalState NewState)
1053:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** {
 858              		.loc 1 1053 0
 859              		.cfi_startproc
 860              		@ args = 0, pretend = 0, frame = 0
 861              		@ frame_needed = 0, uses_anonymous_args = 0
 862              		@ link register save eliminated.
 863              	.LVL81:
1054:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Check the parameters */
1055:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
1056:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1057:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   if (NewState != DISABLE)
1058:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   {
1059:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Enable the selected ADC DMA request */
1060:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     ADCx->CR2 |= (uint32_t)ADC_CR2_DMA;
 864              		.loc 1 1060 0
 865 0000 8368     		ldr	r3, [r0, #8]
1057:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   {
 866              		.loc 1 1057 0
 867 0002 19B9     		cbnz	r1, .L64
1061:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   }
1062:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   else
1063:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   {
1064:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Disable the selected ADC DMA request */
1065:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     ADCx->CR2 &= (uint32_t)(~ADC_CR2_DMA);
 868              		.loc 1 1065 0
 869 0004 23F48073 		bic	r3, r3, #256
 870 0008 8360     		str	r3, [r0, #8]
 871 000a 7047     		bx	lr
 872              	.L64:
1060:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   }
 873              		.loc 1 1060 0
 874 000c 43F48073 		orr	r3, r3, #256
 875 0010 8360     		str	r3, [r0, #8]
 876 0012 7047     		bx	lr
 877              		.cfi_endproc
 878              	.LFE130:
 880              		.section	.text.ADC_DMARequestAfterLastTransferCmd,"ax",%progbits
 881              		.align	2
 882              		.global	ADC_DMARequestAfterLastTransferCmd
 883              		.thumb
 884              		.thumb_func
 886              	ADC_DMARequestAfterLastTransferCmd:
 887              	.LFB131:
1066:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   }
1067:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** }
1068:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
1069:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /**
1070:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @brief  Enables or disables the ADC DMA request after last transfer (Single-ADC mode)  
1071:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1072:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  NewState: new state of the selected ADC DMA request after last transfer.
1073:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *          This parameter can be: ENABLE or DISABLE.
1074:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @retval None
1075:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   */
1076:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** void ADC_DMARequestAfterLastTransferCmd(ADC_TypeDef* ADCx, FunctionalState NewState)
1077:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** {
 888              		.loc 1 1077 0
 889              		.cfi_startproc
 890              		@ args = 0, pretend = 0, frame = 0
 891              		@ frame_needed = 0, uses_anonymous_args = 0
 892              		@ link register save eliminated.
 893              	.LVL82:
1078:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Check the parameters */
1079:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
1080:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1081:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   if (NewState != DISABLE)
1082:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   {
1083:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Enable the selected ADC DMA request after last transfer */
1084:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     ADCx->CR2 |= (uint32_t)ADC_CR2_DDS;
 894              		.loc 1 1084 0
 895 0000 8368     		ldr	r3, [r0, #8]
1081:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   {
 896              		.loc 1 1081 0
 897 0002 19B9     		cbnz	r1, .L68
1085:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   }
1086:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   else
1087:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   {
1088:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Disable the selected ADC DMA request after last transfer */
1089:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     ADCx->CR2 &= (uint32_t)(~ADC_CR2_DDS);
 898              		.loc 1 1089 0
 899 0004 23F40073 		bic	r3, r3, #512
 900 0008 8360     		str	r3, [r0, #8]
 901 000a 7047     		bx	lr
 902              	.L68:
1084:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   }
 903              		.loc 1 1084 0
 904 000c 43F40073 		orr	r3, r3, #512
 905 0010 8360     		str	r3, [r0, #8]
 906 0012 7047     		bx	lr
 907              		.cfi_endproc
 908              	.LFE131:
 910              		.section	.text.ADC_MultiModeDMARequestAfterLastTransferCmd,"ax",%progbits
 911              		.align	2
 912              		.global	ADC_MultiModeDMARequestAfterLastTransferCmd
 913              		.thumb
 914              		.thumb_func
 916              	ADC_MultiModeDMARequestAfterLastTransferCmd:
 917              	.LFB132:
1090:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   }
1091:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** }
1092:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
1093:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /**
1094:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @brief  Enables or disables the ADC DMA request after last transfer in multi ADC mode       
1095:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  NewState: new state of the selected ADC DMA request after last transfer.
1096:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *          This parameter can be: ENABLE or DISABLE.
1097:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @note   if Enabled, DMA requests are issued as long as data are converted and 
1098:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *         DMA mode for multi ADC mode (selected using ADC_CommonInit() function 
1099:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *         by ADC_CommonInitStruct.ADC_DMAAccessMode structure member) is 
1100:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *          ADC_DMAAccessMode_1, ADC_DMAAccessMode_2 or ADC_DMAAccessMode_3.     
1101:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @retval None
1102:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   */
1103:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** void ADC_MultiModeDMARequestAfterLastTransferCmd(FunctionalState NewState)
1104:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** {
 918              		.loc 1 1104 0
 919              		.cfi_startproc
 920              		@ args = 0, pretend = 0, frame = 0
 921              		@ frame_needed = 0, uses_anonymous_args = 0
 922              		@ link register save eliminated.
 923              	.LVL83:
1105:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Check the parameters */
1106:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1107:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   if (NewState != DISABLE)
1108:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   {
1109:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Enable the selected ADC DMA request after last transfer */
1110:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     ADC->CCR |= (uint32_t)ADC_CCR_DDS;
 924              		.loc 1 1110 0
 925 0000 054A     		ldr	r2, .L73
 926 0002 5368     		ldr	r3, [r2, #4]
1107:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   {
 927              		.loc 1 1107 0
 928 0004 18B9     		cbnz	r0, .L72
1111:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   }
1112:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   else
1113:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   {
1114:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Disable the selected ADC DMA request after last transfer */
1115:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     ADC->CCR &= (uint32_t)(~ADC_CCR_DDS);
 929              		.loc 1 1115 0
 930 0006 23F40053 		bic	r3, r3, #8192
 931 000a 5360     		str	r3, [r2, #4]
 932 000c 7047     		bx	lr
 933              	.L72:
1110:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   }
 934              		.loc 1 1110 0
 935 000e 43F40053 		orr	r3, r3, #8192
 936 0012 5360     		str	r3, [r2, #4]
 937 0014 7047     		bx	lr
 938              	.L74:
 939 0016 00BF     		.align	2
 940              	.L73:
 941 0018 00230140 		.word	1073816320
 942              		.cfi_endproc
 943              	.LFE132:
 945              		.section	.text.ADC_InjectedChannelConfig,"ax",%progbits
 946              		.align	2
 947              		.global	ADC_InjectedChannelConfig
 948              		.thumb
 949              		.thumb_func
 951              	ADC_InjectedChannelConfig:
 952              	.LFB133:
1116:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   }
1117:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** }
1118:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /**
1119:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @}
1120:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   */
1121:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
1122:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /** @defgroup ADC_Group6 Injected channels Configuration functions
1123:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****  *  @brief   Injected channels Configuration functions 
1124:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****  *
1125:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** @verbatim   
1126:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****  ===============================================================================
1127:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****               ##### Injected channels Configuration functions #####
1128:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****  ===============================================================================  
1129:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
1130:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     [..] This section provide functions allowing to configure the ADC Injected channels,
1131:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****          it is composed of 2 sub sections : 
1132:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     
1133:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****       (#) Configuration functions for Injected channels: This subsection provides 
1134:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****           functions allowing to configure the ADC injected channels :    
1135:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****         (++) Configure the rank in the injected group sequencer for each channel
1136:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****         (++) Configure the sampling time for each channel    
1137:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****         (++) Activate the Auto injected Mode  
1138:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****         (++) Activate the Discontinuous Mode 
1139:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****         (++) scan mode activation  
1140:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****         (++) External/software trigger source   
1141:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****         (++) External trigger edge 
1142:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****         (++) injected channels sequencer.
1143:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     
1144:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****       (#) Get the Specified Injected channel conversion data: This subsection 
1145:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****           provides an important function in the ADC peripheral since it returns the 
1146:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****           converted data of the specific injected channel.
1147:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
1148:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** @endverbatim
1149:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @{
1150:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   */ 
1151:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /**
1152:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @brief  Configures for the selected ADC injected channel its corresponding
1153:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *         rank in the sequencer and its sample time.
1154:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1155:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  ADC_Channel: the ADC channel to configure. 
1156:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *          This parameter can be one of the following values:
1157:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_0: ADC Channel0 selected
1158:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_1: ADC Channel1 selected
1159:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_2: ADC Channel2 selected
1160:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_3: ADC Channel3 selected
1161:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_4: ADC Channel4 selected
1162:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_5: ADC Channel5 selected
1163:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_6: ADC Channel6 selected
1164:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_7: ADC Channel7 selected
1165:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_8: ADC Channel8 selected
1166:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_9: ADC Channel9 selected
1167:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_10: ADC Channel10 selected
1168:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_11: ADC Channel11 selected
1169:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_12: ADC Channel12 selected
1170:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_13: ADC Channel13 selected
1171:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_14: ADC Channel14 selected
1172:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_15: ADC Channel15 selected
1173:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_16: ADC Channel16 selected
1174:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_17: ADC Channel17 selected
1175:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_18: ADC Channel18 selected                       
1176:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  Rank: The rank in the injected group sequencer. 
1177:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *          This parameter must be between 1 to 4.
1178:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  ADC_SampleTime: The sample time value to be set for the selected channel. 
1179:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *          This parameter can be one of the following values:
1180:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_SampleTime_3Cycles: Sample time equal to 3 cycles
1181:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_SampleTime_15Cycles: Sample time equal to 15 cycles
1182:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_SampleTime_28Cycles: Sample time equal to 28 cycles
1183:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_SampleTime_56Cycles: Sample time equal to 56 cycles	
1184:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_SampleTime_84Cycles: Sample time equal to 84 cycles	
1185:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_SampleTime_112Cycles: Sample time equal to 112 cycles	
1186:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_SampleTime_144Cycles: Sample time equal to 144 cycles	
1187:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_SampleTime_480Cycles: Sample time equal to 480 cycles	
1188:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @retval None
1189:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   */
1190:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** void ADC_InjectedChannelConfig(ADC_TypeDef* ADCx, uint8_t ADC_Channel, uint8_t Rank, uint8_t ADC_Sa
1191:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** {
 953              		.loc 1 1191 0
 954              		.cfi_startproc
 955              		@ args = 0, pretend = 0, frame = 0
 956              		@ frame_needed = 0, uses_anonymous_args = 0
 957              		@ link register save eliminated.
 958              	.LVL84:
1192:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   uint32_t tmpreg1 = 0, tmpreg2 = 0, tmpreg3 = 0;
1193:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Check the parameters */
1194:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
1195:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_CHANNEL(ADC_Channel));
1196:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_INJECTED_RANK(Rank));
1197:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_SAMPLE_TIME(ADC_SampleTime));
1198:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* if ADC_Channel_10 ... ADC_Channel_18 is selected */
1199:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   if (ADC_Channel > ADC_Channel_9)
 959              		.loc 1 1199 0
 960 0000 0929     		cmp	r1, #9
1191:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   uint32_t tmpreg1 = 0, tmpreg2 = 0, tmpreg3 = 0;
 961              		.loc 1 1191 0
 962 0002 70B4     		push	{r4, r5, r6}
 963              	.LCFI11:
 964              		.cfi_def_cfa_offset 12
 965              		.cfi_offset 4, -12
 966              		.cfi_offset 5, -8
 967              		.cfi_offset 6, -4
 968              		.loc 1 1199 0
 969 0004 1AD8     		bhi	.L79
1200:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   {
1201:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Get the old register value */
1202:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     tmpreg1 = ADCx->SMPR1;
1203:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Calculate the mask to clear */
1204:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     tmpreg2 = SMPR1_SMP_SET << (3*(ADC_Channel - 10));
1205:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Clear the old sample time */
1206:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     tmpreg1 &= ~tmpreg2;
1207:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Calculate the mask to set */
1208:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     tmpreg2 = (uint32_t)ADC_SampleTime << (3*(ADC_Channel - 10));
1209:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Set the new sample time */
1210:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     tmpreg1 |= tmpreg2;
1211:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Store the new register value */
1212:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     ADCx->SMPR1 = tmpreg1;
1213:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   }
1214:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   else /* ADC_Channel include in ADC_Channel_[0..9] */
1215:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   {
1216:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Get the old register value */
1217:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     tmpreg1 = ADCx->SMPR2;
1218:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Calculate the mask to clear */
1219:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     tmpreg2 = SMPR2_SMP_SET << (3 * ADC_Channel);
 970              		.loc 1 1219 0
 971 0006 01EB4106 		add	r6, r1, r1, lsl #1
1217:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Calculate the mask to clear */
 972              		.loc 1 1217 0
 973 000a 0569     		ldr	r5, [r0, #16]
 974              	.LVL85:
 975              		.loc 1 1219 0
 976 000c 0724     		movs	r4, #7
 977 000e B440     		lsls	r4, r4, r6
 978              	.LVL86:
1220:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Clear the old sample time */
1221:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     tmpreg1 &= ~tmpreg2;
1222:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Calculate the mask to set */
1223:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     tmpreg2 = (uint32_t)ADC_SampleTime << (3 * ADC_Channel);
 979              		.loc 1 1223 0
 980 0010 B340     		lsls	r3, r3, r6
 981              	.LVL87:
1221:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Calculate the mask to set */
 982              		.loc 1 1221 0
 983 0012 25EA0404 		bic	r4, r5, r4
 984              	.LVL88:
1224:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Set the new sample time */
1225:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     tmpreg1 |= tmpreg2;
 985              		.loc 1 1225 0
 986 0016 2343     		orrs	r3, r3, r4
 987              	.LVL89:
1226:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Store the new register value */
1227:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     ADCx->SMPR2 = tmpreg1;
 988              		.loc 1 1227 0
 989 0018 0361     		str	r3, [r0, #16]
 990              	.L77:
1228:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   }
1229:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Rank configuration */
1230:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Get the old register value */
1231:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   tmpreg1 = ADCx->JSQR;
 991              		.loc 1 1231 0
 992 001a 836B     		ldr	r3, [r0, #56]
 993              	.LVL90:
 994 001c 0232     		adds	r2, r2, #2
 995              	.LVL91:
1232:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Get JL value: Number = JL+1 */
1233:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   tmpreg3 =  (tmpreg1 & JSQR_JL_SET)>> 20;
 996              		.loc 1 1233 0
 997 001e C3F30154 		ubfx	r4, r3, #20, #2
1234:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Calculate the mask to clear: ((Rank-1)+(4-JL-1)) */
1235:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   tmpreg2 = JSQR_JSQ_SET << (5 * (uint8_t)((Rank + 3) - (tmpreg3 + 1)));
 998              		.loc 1 1235 0
 999 0022 121B     		subs	r2, r2, r4
 1000 0024 D2B2     		uxtb	r2, r2
 1001 0026 02EB8202 		add	r2, r2, r2, lsl #2
 1002              	.LVL92:
 1003 002a 1F24     		movs	r4, #31
 1004 002c 9440     		lsls	r4, r4, r2
 1005              	.LVL93:
1236:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Clear the old JSQx bits for the selected rank */
1237:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   tmpreg1 &= ~tmpreg2;
 1006              		.loc 1 1237 0
 1007 002e 23EA0403 		bic	r3, r3, r4
 1008              	.LVL94:
1238:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Calculate the mask to set: ((Rank-1)+(4-JL-1)) */
1239:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   tmpreg2 = (uint32_t)ADC_Channel << (5 * (uint8_t)((Rank + 3) - (tmpreg3 + 1)));
 1009              		.loc 1 1239 0
 1010 0032 9140     		lsls	r1, r1, r2
 1011              	.LVL95:
1240:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Set the JSQx bits for the selected rank */
1241:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   tmpreg1 |= tmpreg2;
 1012              		.loc 1 1241 0
 1013 0034 1943     		orrs	r1, r1, r3
 1014              	.LVL96:
1242:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Store the new register value */
1243:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   ADCx->JSQR = tmpreg1;
 1015              		.loc 1 1243 0
 1016 0036 8163     		str	r1, [r0, #56]
1244:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** }
 1017              		.loc 1 1244 0
 1018 0038 70BC     		pop	{r4, r5, r6}
 1019              	.LCFI12:
 1020              		.cfi_remember_state
 1021              		.cfi_restore 6
 1022              		.cfi_restore 5
 1023              		.cfi_restore 4
 1024              		.cfi_def_cfa_offset 0
 1025 003a 7047     		bx	lr
 1026              	.LVL97:
 1027              	.L79:
 1028              	.LCFI13:
 1029              		.cfi_restore_state
1204:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Clear the old sample time */
 1030              		.loc 1 1204 0
 1031 003c A1F10A04 		sub	r4, r1, #10
 1032 0040 04EB4404 		add	r4, r4, r4, lsl #1
1202:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Calculate the mask to clear */
 1033              		.loc 1 1202 0
 1034 0044 C568     		ldr	r5, [r0, #12]
 1035              	.LVL98:
1204:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Clear the old sample time */
 1036              		.loc 1 1204 0
 1037 0046 0726     		movs	r6, #7
 1038 0048 A640     		lsls	r6, r6, r4
 1039              	.LVL99:
1208:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Set the new sample time */
 1040              		.loc 1 1208 0
 1041 004a A340     		lsls	r3, r3, r4
 1042              	.LVL100:
1206:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Calculate the mask to set */
 1043              		.loc 1 1206 0
 1044 004c 25EA0604 		bic	r4, r5, r6
 1045              	.LVL101:
1210:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Store the new register value */
 1046              		.loc 1 1210 0
 1047 0050 2343     		orrs	r3, r3, r4
 1048              	.LVL102:
1212:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   }
 1049              		.loc 1 1212 0
 1050 0052 C360     		str	r3, [r0, #12]
 1051 0054 E1E7     		b	.L77
 1052              		.cfi_endproc
 1053              	.LFE133:
 1055 0056 00BF     		.section	.text.ADC_InjectedSequencerLengthConfig,"ax",%progbits
 1056              		.align	2
 1057              		.global	ADC_InjectedSequencerLengthConfig
 1058              		.thumb
 1059              		.thumb_func
 1061              	ADC_InjectedSequencerLengthConfig:
 1062              	.LFB134:
1245:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
1246:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /**
1247:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @brief  Configures the sequencer length for injected channels
1248:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1249:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  Length: The sequencer length. 
1250:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *          This parameter must be a number between 1 to 4.
1251:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @retval None
1252:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   */
1253:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** void ADC_InjectedSequencerLengthConfig(ADC_TypeDef* ADCx, uint8_t Length)
1254:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** {
 1063              		.loc 1 1254 0
 1064              		.cfi_startproc
 1065              		@ args = 0, pretend = 0, frame = 0
 1066              		@ frame_needed = 0, uses_anonymous_args = 0
 1067              		@ link register save eliminated.
 1068              	.LVL103:
1255:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   uint32_t tmpreg1 = 0;
1256:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   uint32_t tmpreg2 = 0;
1257:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Check the parameters */
1258:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
1259:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_INJECTED_LENGTH(Length));
1260:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
1261:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Get the old register value */
1262:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   tmpreg1 = ADCx->JSQR;
 1069              		.loc 1 1262 0
 1070 0000 836B     		ldr	r3, [r0, #56]
 1071              	.LVL104:
1263:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
1264:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Clear the old injected sequence length JL bits */
1265:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   tmpreg1 &= JSQR_JL_RESET;
1266:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
1267:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Set the injected sequence length JL bits */
1268:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   tmpreg2 = Length - 1; 
 1072              		.loc 1 1268 0
 1073 0002 0139     		subs	r1, r1, #1
 1074              	.LVL105:
1265:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
 1075              		.loc 1 1265 0
 1076 0004 23F44013 		bic	r3, r3, #3145728
 1077              	.LVL106:
1269:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   tmpreg1 |= tmpreg2 << 20;
 1078              		.loc 1 1269 0
 1079 0008 43EA0151 		orr	r1, r3, r1, lsl #20
 1080              	.LVL107:
1270:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
1271:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Store the new register value */
1272:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   ADCx->JSQR = tmpreg1;
 1081              		.loc 1 1272 0
 1082 000c 8163     		str	r1, [r0, #56]
 1083 000e 7047     		bx	lr
 1084              		.cfi_endproc
 1085              	.LFE134:
 1087              		.section	.text.ADC_SetInjectedOffset,"ax",%progbits
 1088              		.align	2
 1089              		.global	ADC_SetInjectedOffset
 1090              		.thumb
 1091              		.thumb_func
 1093              	ADC_SetInjectedOffset:
 1094              	.LFB135:
1273:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** }
1274:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
1275:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /**
1276:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @brief  Set the injected channels conversion value offset
1277:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1278:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  ADC_InjectedChannel: the ADC injected channel to set its offset. 
1279:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *          This parameter can be one of the following values:
1280:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_InjectedChannel_1: Injected Channel1 selected
1281:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_InjectedChannel_2: Injected Channel2 selected
1282:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_InjectedChannel_3: Injected Channel3 selected
1283:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_InjectedChannel_4: Injected Channel4 selected
1284:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  Offset: the offset value for the selected ADC injected channel
1285:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *          This parameter must be a 12bit value.
1286:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @retval None
1287:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   */
1288:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** void ADC_SetInjectedOffset(ADC_TypeDef* ADCx, uint8_t ADC_InjectedChannel, uint16_t Offset)
1289:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** {
 1095              		.loc 1 1289 0
 1096              		.cfi_startproc
 1097              		@ args = 0, pretend = 0, frame = 8
 1098              		@ frame_needed = 0, uses_anonymous_args = 0
 1099              		@ link register save eliminated.
 1100              	.LVL108:
 1101 0000 82B0     		sub	sp, sp, #8
 1102              	.LCFI14:
 1103              		.cfi_def_cfa_offset 8
1290:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     __IO uint32_t tmp = 0;
 1104              		.loc 1 1290 0
 1105 0002 0023     		movs	r3, #0
 1106 0004 0193     		str	r3, [sp, #4]
1291:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Check the parameters */
1292:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
1293:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_INJECTED_CHANNEL(ADC_InjectedChannel));
1294:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_OFFSET(Offset));
1295:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
1296:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   tmp = (uint32_t)ADCx;
 1107              		.loc 1 1296 0
 1108 0006 0190     		str	r0, [sp, #4]
1297:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   tmp += ADC_InjectedChannel;
 1109              		.loc 1 1297 0
 1110 0008 019B     		ldr	r3, [sp, #4]
 1111 000a 1944     		add	r1, r1, r3
 1112              	.LVL109:
 1113 000c 0191     		str	r1, [sp, #4]
1298:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
1299:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Set the selected injected channel data offset */
1300:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****  *(__IO uint32_t *) tmp = (uint32_t)Offset;
 1114              		.loc 1 1300 0
 1115 000e 019B     		ldr	r3, [sp, #4]
 1116 0010 1A60     		str	r2, [r3]
1301:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** }
 1117              		.loc 1 1301 0
 1118 0012 02B0     		add	sp, sp, #8
 1119              	.LCFI15:
 1120              		.cfi_def_cfa_offset 0
 1121              		@ sp needed
 1122 0014 7047     		bx	lr
 1123              		.cfi_endproc
 1124              	.LFE135:
 1126 0016 00BF     		.section	.text.ADC_ExternalTrigInjectedConvConfig,"ax",%progbits
 1127              		.align	2
 1128              		.global	ADC_ExternalTrigInjectedConvConfig
 1129              		.thumb
 1130              		.thumb_func
 1132              	ADC_ExternalTrigInjectedConvConfig:
 1133              	.LFB136:
1302:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
1303:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****  /**
1304:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @brief  Configures the ADCx external trigger for injected channels conversion.
1305:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1306:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  ADC_ExternalTrigInjecConv: specifies the ADC trigger to start injected conversion.
1307:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *          This parameter can be one of the following values:                    
1308:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_ExternalTrigInjecConv_T1_CC4: Timer1 capture compare4 selected 
1309:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_ExternalTrigInjecConv_T1_TRGO: Timer1 TRGO event selected 
1310:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_ExternalTrigInjecConv_T2_CC1: Timer2 capture compare1 selected 
1311:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_ExternalTrigInjecConv_T2_TRGO: Timer2 TRGO event selected 
1312:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_ExternalTrigInjecConv_T3_CC2: Timer3 capture compare2 selected 
1313:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_ExternalTrigInjecConv_T3_CC4: Timer3 capture compare4 selected 
1314:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_ExternalTrigInjecConv_T4_CC1: Timer4 capture compare1 selected             
1315:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_ExternalTrigInjecConv_T4_CC2: Timer4 capture compare2 selected 
1316:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_ExternalTrigInjecConv_T4_CC3: Timer4 capture compare3 selected             
1317:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_ExternalTrigInjecConv_T4_TRGO: Timer4 TRGO event selected 
1318:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_ExternalTrigInjecConv_T5_CC4: Timer5 capture compare4 selected             
1319:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_ExternalTrigInjecConv_T5_TRGO: Timer5 TRGO event selected                  
1320:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_ExternalTrigInjecConv_T8_CC2: Timer8 capture compare2 selected
1321:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_ExternalTrigInjecConv_T8_CC3: Timer8 capture compare3 selected             
1322:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_ExternalTrigInjecConv_T8_CC4: Timer8 capture compare4 selected 
1323:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_ExternalTrigInjecConv_Ext_IT15: External interrupt line 15 event selected  
1324:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @retval None
1325:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   */
1326:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** void ADC_ExternalTrigInjectedConvConfig(ADC_TypeDef* ADCx, uint32_t ADC_ExternalTrigInjecConv)
1327:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** {
 1134              		.loc 1 1327 0
 1135              		.cfi_startproc
 1136              		@ args = 0, pretend = 0, frame = 0
 1137              		@ frame_needed = 0, uses_anonymous_args = 0
 1138              		@ link register save eliminated.
 1139              	.LVL110:
1328:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   uint32_t tmpreg = 0;
1329:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Check the parameters */
1330:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
1331:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_EXT_INJEC_TRIG(ADC_ExternalTrigInjecConv));
1332:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
1333:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Get the old register value */
1334:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   tmpreg = ADCx->CR2;
 1140              		.loc 1 1334 0
 1141 0000 8368     		ldr	r3, [r0, #8]
 1142              	.LVL111:
1335:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
1336:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Clear the old external event selection for injected group */
1337:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   tmpreg &= CR2_JEXTSEL_RESET;
 1143              		.loc 1 1337 0
 1144 0002 23F47023 		bic	r3, r3, #983040
 1145              	.LVL112:
1338:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
1339:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Set the external event selection for injected group */
1340:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   tmpreg |= ADC_ExternalTrigInjecConv;
 1146              		.loc 1 1340 0
 1147 0006 1943     		orrs	r1, r1, r3
 1148              	.LVL113:
1341:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
1342:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Store the new register value */
1343:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   ADCx->CR2 = tmpreg;
 1149              		.loc 1 1343 0
 1150 0008 8160     		str	r1, [r0, #8]
 1151 000a 7047     		bx	lr
 1152              		.cfi_endproc
 1153              	.LFE136:
 1155              		.section	.text.ADC_ExternalTrigInjectedConvEdgeConfig,"ax",%progbits
 1156              		.align	2
 1157              		.global	ADC_ExternalTrigInjectedConvEdgeConfig
 1158              		.thumb
 1159              		.thumb_func
 1161              	ADC_ExternalTrigInjectedConvEdgeConfig:
 1162              	.LFB137:
1344:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** }
1345:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
1346:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /**
1347:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @brief  Configures the ADCx external trigger edge for injected channels conversion.
1348:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1349:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  ADC_ExternalTrigInjecConvEdge: specifies the ADC external trigger edge
1350:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *         to start injected conversion. 
1351:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *          This parameter can be one of the following values:
1352:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_ExternalTrigInjecConvEdge_None: external trigger disabled for 
1353:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *                                                     injected conversion
1354:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_ExternalTrigInjecConvEdge_Rising: detection on rising edge
1355:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_ExternalTrigInjecConvEdge_Falling: detection on falling edge
1356:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_ExternalTrigInjecConvEdge_RisingFalling: detection on both rising 
1357:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *                                                               and falling edge
1358:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @retval None
1359:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   */
1360:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** void ADC_ExternalTrigInjectedConvEdgeConfig(ADC_TypeDef* ADCx, uint32_t ADC_ExternalTrigInjecConvEd
1361:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** {
 1163              		.loc 1 1361 0
 1164              		.cfi_startproc
 1165              		@ args = 0, pretend = 0, frame = 0
 1166              		@ frame_needed = 0, uses_anonymous_args = 0
 1167              		@ link register save eliminated.
 1168              	.LVL114:
1362:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   uint32_t tmpreg = 0;
1363:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Check the parameters */
1364:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
1365:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_EXT_INJEC_TRIG_EDGE(ADC_ExternalTrigInjecConvEdge));
1366:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Get the old register value */
1367:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   tmpreg = ADCx->CR2;
 1169              		.loc 1 1367 0
 1170 0000 8368     		ldr	r3, [r0, #8]
 1171              	.LVL115:
1368:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Clear the old external trigger edge for injected group */
1369:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   tmpreg &= CR2_JEXTEN_RESET;
 1172              		.loc 1 1369 0
 1173 0002 23F44013 		bic	r3, r3, #3145728
 1174              	.LVL116:
1370:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Set the new external trigger edge for injected group */
1371:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   tmpreg |= ADC_ExternalTrigInjecConvEdge;
 1175              		.loc 1 1371 0
 1176 0006 1943     		orrs	r1, r1, r3
 1177              	.LVL117:
1372:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Store the new register value */
1373:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   ADCx->CR2 = tmpreg;
 1178              		.loc 1 1373 0
 1179 0008 8160     		str	r1, [r0, #8]
 1180 000a 7047     		bx	lr
 1181              		.cfi_endproc
 1182              	.LFE137:
 1184              		.section	.text.ADC_SoftwareStartInjectedConv,"ax",%progbits
 1185              		.align	2
 1186              		.global	ADC_SoftwareStartInjectedConv
 1187              		.thumb
 1188              		.thumb_func
 1190              	ADC_SoftwareStartInjectedConv:
 1191              	.LFB138:
1374:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** }
1375:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
1376:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /**
1377:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @brief  Enables the selected ADC software start conversion of the injected channels.
1378:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1379:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @retval None
1380:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   */
1381:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** void ADC_SoftwareStartInjectedConv(ADC_TypeDef* ADCx)
1382:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** {
 1192              		.loc 1 1382 0
 1193              		.cfi_startproc
 1194              		@ args = 0, pretend = 0, frame = 0
 1195              		@ frame_needed = 0, uses_anonymous_args = 0
 1196              		@ link register save eliminated.
 1197              	.LVL118:
1383:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Check the parameters */
1384:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
1385:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Enable the selected ADC conversion for injected group */
1386:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   ADCx->CR2 |= (uint32_t)ADC_CR2_JSWSTART;
 1198              		.loc 1 1386 0
 1199 0000 8368     		ldr	r3, [r0, #8]
 1200 0002 43F48003 		orr	r3, r3, #4194304
 1201 0006 8360     		str	r3, [r0, #8]
 1202 0008 7047     		bx	lr
 1203              		.cfi_endproc
 1204              	.LFE138:
 1206 000a 00BF     		.section	.text.ADC_GetSoftwareStartInjectedConvCmdStatus,"ax",%progbits
 1207              		.align	2
 1208              		.global	ADC_GetSoftwareStartInjectedConvCmdStatus
 1209              		.thumb
 1210              		.thumb_func
 1212              	ADC_GetSoftwareStartInjectedConvCmdStatus:
 1213              	.LFB139:
1387:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** }
1388:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
1389:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /**
1390:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @brief  Gets the selected ADC Software start injected conversion Status.
1391:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1392:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @retval The new state of ADC software start injected conversion (SET or RESET).
1393:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   */
1394:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** FlagStatus ADC_GetSoftwareStartInjectedConvCmdStatus(ADC_TypeDef* ADCx)
1395:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** {
 1214              		.loc 1 1395 0
 1215              		.cfi_startproc
 1216              		@ args = 0, pretend = 0, frame = 0
 1217              		@ frame_needed = 0, uses_anonymous_args = 0
 1218              		@ link register save eliminated.
 1219              	.LVL119:
1396:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   FlagStatus bitstatus = RESET;
1397:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Check the parameters */
1398:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
1399:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
1400:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Check the status of JSWSTART bit */
1401:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   if ((ADCx->CR2 & ADC_CR2_JSWSTART) != (uint32_t)RESET)
 1220              		.loc 1 1401 0
 1221 0000 8068     		ldr	r0, [r0, #8]
 1222              	.LVL120:
1402:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   {
1403:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* JSWSTART bit is set */
1404:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     bitstatus = SET;
1405:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   }
1406:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   else
1407:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   {
1408:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* JSWSTART bit is reset */
1409:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     bitstatus = RESET;
1410:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   }
1411:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Return the JSWSTART bit status */
1412:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   return  bitstatus;
1413:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** }
 1223              		.loc 1 1413 0
 1224 0002 C0F38050 		ubfx	r0, r0, #22, #1
 1225              	.LVL121:
 1226 0006 7047     		bx	lr
 1227              		.cfi_endproc
 1228              	.LFE139:
 1230              		.section	.text.ADC_AutoInjectedConvCmd,"ax",%progbits
 1231              		.align	2
 1232              		.global	ADC_AutoInjectedConvCmd
 1233              		.thumb
 1234              		.thumb_func
 1236              	ADC_AutoInjectedConvCmd:
 1237              	.LFB140:
1414:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
1415:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /**
1416:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @brief  Enables or disables the selected ADC automatic injected group 
1417:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *         conversion after regular one.
1418:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1419:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  NewState: new state of the selected ADC auto injected conversion
1420:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *          This parameter can be: ENABLE or DISABLE.
1421:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @retval None
1422:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   */
1423:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** void ADC_AutoInjectedConvCmd(ADC_TypeDef* ADCx, FunctionalState NewState)
1424:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** {
 1238              		.loc 1 1424 0
 1239              		.cfi_startproc
 1240              		@ args = 0, pretend = 0, frame = 0
 1241              		@ frame_needed = 0, uses_anonymous_args = 0
 1242              		@ link register save eliminated.
 1243              	.LVL122:
1425:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Check the parameters */
1426:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
1427:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1428:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   if (NewState != DISABLE)
1429:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   {
1430:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Enable the selected ADC automatic injected group conversion */
1431:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     ADCx->CR1 |= (uint32_t)ADC_CR1_JAUTO;
 1244              		.loc 1 1431 0
 1245 0000 4368     		ldr	r3, [r0, #4]
1428:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   {
 1246              		.loc 1 1428 0
 1247 0002 19B9     		cbnz	r1, .L90
1432:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   }
1433:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   else
1434:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   {
1435:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Disable the selected ADC automatic injected group conversion */
1436:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     ADCx->CR1 &= (uint32_t)(~ADC_CR1_JAUTO);
 1248              		.loc 1 1436 0
 1249 0004 23F48063 		bic	r3, r3, #1024
 1250 0008 4360     		str	r3, [r0, #4]
 1251 000a 7047     		bx	lr
 1252              	.L90:
1431:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   }
 1253              		.loc 1 1431 0
 1254 000c 43F48063 		orr	r3, r3, #1024
 1255 0010 4360     		str	r3, [r0, #4]
 1256 0012 7047     		bx	lr
 1257              		.cfi_endproc
 1258              	.LFE140:
 1260              		.section	.text.ADC_InjectedDiscModeCmd,"ax",%progbits
 1261              		.align	2
 1262              		.global	ADC_InjectedDiscModeCmd
 1263              		.thumb
 1264              		.thumb_func
 1266              	ADC_InjectedDiscModeCmd:
 1267              	.LFB141:
1437:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   }
1438:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** }
1439:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
1440:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /**
1441:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @brief  Enables or disables the discontinuous mode for injected group 
1442:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *         channel for the specified ADC
1443:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1444:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  NewState: new state of the selected ADC discontinuous mode on injected
1445:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *         group channel.
1446:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *          This parameter can be: ENABLE or DISABLE.
1447:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @retval None
1448:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   */
1449:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** void ADC_InjectedDiscModeCmd(ADC_TypeDef* ADCx, FunctionalState NewState)
1450:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** {
 1268              		.loc 1 1450 0
 1269              		.cfi_startproc
 1270              		@ args = 0, pretend = 0, frame = 0
 1271              		@ frame_needed = 0, uses_anonymous_args = 0
 1272              		@ link register save eliminated.
 1273              	.LVL123:
1451:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Check the parameters */
1452:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
1453:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1454:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   if (NewState != DISABLE)
1455:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   {
1456:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Enable the selected ADC injected discontinuous mode */
1457:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     ADCx->CR1 |= (uint32_t)ADC_CR1_JDISCEN;
 1274              		.loc 1 1457 0
 1275 0000 4368     		ldr	r3, [r0, #4]
1454:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   {
 1276              		.loc 1 1454 0
 1277 0002 19B9     		cbnz	r1, .L94
1458:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   }
1459:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   else
1460:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   {
1461:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Disable the selected ADC injected discontinuous mode */
1462:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     ADCx->CR1 &= (uint32_t)(~ADC_CR1_JDISCEN);
 1278              		.loc 1 1462 0
 1279 0004 23F48053 		bic	r3, r3, #4096
 1280 0008 4360     		str	r3, [r0, #4]
 1281 000a 7047     		bx	lr
 1282              	.L94:
1457:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   }
 1283              		.loc 1 1457 0
 1284 000c 43F48053 		orr	r3, r3, #4096
 1285 0010 4360     		str	r3, [r0, #4]
 1286 0012 7047     		bx	lr
 1287              		.cfi_endproc
 1288              	.LFE141:
 1290              		.section	.text.ADC_GetInjectedConversionValue,"ax",%progbits
 1291              		.align	2
 1292              		.global	ADC_GetInjectedConversionValue
 1293              		.thumb
 1294              		.thumb_func
 1296              	ADC_GetInjectedConversionValue:
 1297              	.LFB142:
1463:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   }
1464:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** }
1465:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
1466:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /**
1467:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @brief  Returns the ADC injected channel conversion result
1468:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1469:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  ADC_InjectedChannel: the converted ADC injected channel.
1470:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *          This parameter can be one of the following values:
1471:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_InjectedChannel_1: Injected Channel1 selected
1472:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_InjectedChannel_2: Injected Channel2 selected
1473:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_InjectedChannel_3: Injected Channel3 selected
1474:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_InjectedChannel_4: Injected Channel4 selected
1475:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @retval The Data conversion value.
1476:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   */
1477:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** uint16_t ADC_GetInjectedConversionValue(ADC_TypeDef* ADCx, uint8_t ADC_InjectedChannel)
1478:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** {
 1298              		.loc 1 1478 0
 1299              		.cfi_startproc
 1300              		@ args = 0, pretend = 0, frame = 8
 1301              		@ frame_needed = 0, uses_anonymous_args = 0
 1302              		@ link register save eliminated.
 1303              	.LVL124:
 1304 0000 82B0     		sub	sp, sp, #8
 1305              	.LCFI16:
 1306              		.cfi_def_cfa_offset 8
1479:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   __IO uint32_t tmp = 0;
 1307              		.loc 1 1479 0
 1308 0002 0023     		movs	r3, #0
 1309 0004 0193     		str	r3, [sp, #4]
1480:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
1481:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Check the parameters */
1482:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
1483:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_INJECTED_CHANNEL(ADC_InjectedChannel));
1484:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
1485:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   tmp = (uint32_t)ADCx;
 1310              		.loc 1 1485 0
 1311 0006 0190     		str	r0, [sp, #4]
1486:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   tmp += ADC_InjectedChannel + JDR_OFFSET;
 1312              		.loc 1 1486 0
 1313 0008 019B     		ldr	r3, [sp, #4]
 1314 000a 2833     		adds	r3, r3, #40
 1315 000c 1944     		add	r1, r1, r3
 1316              	.LVL125:
 1317 000e 0191     		str	r1, [sp, #4]
1487:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
1488:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Returns the selected injected channel conversion data value */
1489:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   return (uint16_t) (*(__IO uint32_t*)  tmp); 
 1318              		.loc 1 1489 0
 1319 0010 019B     		ldr	r3, [sp, #4]
 1320 0012 1868     		ldr	r0, [r3]
 1321              	.LVL126:
1490:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** }
 1322              		.loc 1 1490 0
 1323 0014 80B2     		uxth	r0, r0
 1324 0016 02B0     		add	sp, sp, #8
 1325              	.LCFI17:
 1326              		.cfi_def_cfa_offset 0
 1327              		@ sp needed
 1328 0018 7047     		bx	lr
 1329              		.cfi_endproc
 1330              	.LFE142:
 1332 001a 00BF     		.section	.text.ADC_ITConfig,"ax",%progbits
 1333              		.align	2
 1334              		.global	ADC_ITConfig
 1335              		.thumb
 1336              		.thumb_func
 1338              	ADC_ITConfig:
 1339              	.LFB143:
1491:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /**
1492:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @}
1493:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   */
1494:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
1495:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /** @defgroup ADC_Group7 Interrupts and flags management functions
1496:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****  *  @brief   Interrupts and flags management functions
1497:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****  *
1498:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** @verbatim   
1499:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****  ===============================================================================
1500:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****             ##### Interrupts and flags management functions #####
1501:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****  ===============================================================================  
1502:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
1503:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     [..] This section provides functions allowing to configure the ADC Interrupts 
1504:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****          and to get the status and clear flags and Interrupts pending bits.
1505:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
1506:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     [..] Each ADC provides 4 Interrupts sources and 6 Flags which can be divided
1507:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****         into 3 groups:
1508:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
1509:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *** Flags and Interrupts for ADC regular channels ***
1510:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   =====================================================
1511:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     [..]
1512:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****       (+) Flags :
1513:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****         (##) ADC_FLAG_OVR : Overrun detection when regular converted data are lost
1514:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
1515:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****         (##) ADC_FLAG_EOC : Regular channel end of conversion ==> to indicate 
1516:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****              (depending on EOCS bit, managed by ADC_EOCOnEachRegularChannelCmd() )
1517:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****              the end of:
1518:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****              (+++) a regular CHANNEL conversion 
1519:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****              (+++) sequence of regular GROUP conversions .
1520:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
1521:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****         (##) ADC_FLAG_STRT: Regular channel start ==> to indicate when regular 
1522:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****              CHANNEL conversion starts.
1523:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     [..]
1524:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****       (+) Interrupts :
1525:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****         (##) ADC_IT_OVR : specifies the interrupt source for Overrun detection 
1526:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****              event.  
1527:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****         (##) ADC_IT_EOC : specifies the interrupt source for Regular channel end
1528:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****              of conversion event.
1529:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
1530:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
1531:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *** Flags and Interrupts for ADC Injected channels ***
1532:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   ======================================================
1533:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     [..]
1534:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****       (+) Flags :
1535:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****         (##) ADC_FLAG_JEOC : Injected channel end of conversion ==> to indicate 
1536:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****              at the end of injected GROUP conversion  
1537:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****               
1538:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****         (##) ADC_FLAG_JSTRT: Injected channel start ==> to indicate hardware when 
1539:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****              injected GROUP conversion starts.
1540:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     [..]
1541:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****       (+) Interrupts :
1542:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****         (##) ADC_IT_JEOC : specifies the interrupt source for Injected channel 
1543:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****              end of conversion event.     
1544:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
1545:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *** General Flags and Interrupts for the ADC ***
1546:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   ================================================ 
1547:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     [..]
1548:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****       (+)Flags :
1549:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****         (##) ADC_FLAG_AWD: Analog watchdog ==> to indicate if the converted voltage 
1550:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****              crosses the programmed thresholds values.
1551:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     [..]          
1552:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****       (+) Interrupts :
1553:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****         (##) ADC_IT_AWD : specifies the interrupt source for Analog watchdog event. 
1554:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
1555:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
1556:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     [..] The user should identify which mode will be used in his application to 
1557:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****          manage the ADC controller events: Polling mode or Interrupt mode.
1558:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   
1559:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     [..] In the Polling Mode it is advised to use the following functions:
1560:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****       (+) ADC_GetFlagStatus() : to check if flags events occur. 
1561:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****       (+) ADC_ClearFlag()     : to clear the flags events.
1562:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****       
1563:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     [..] In the Interrupt Mode it is advised to use the following functions:
1564:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****       (+) ADC_ITConfig()          : to enable or disable the interrupt source.
1565:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****       (+) ADC_GetITStatus()       : to check if Interrupt occurs.
1566:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****       (+) ADC_ClearITPendingBit() : to clear the Interrupt pending Bit 
1567:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****                                    (corresponding Flag). 
1568:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** @endverbatim
1569:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @{
1570:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   */ 
1571:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /**
1572:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @brief  Enables or disables the specified ADC interrupts.
1573:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1574:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  ADC_IT: specifies the ADC interrupt sources to be enabled or disabled. 
1575:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *          This parameter can be one of the following values:
1576:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_IT_EOC: End of conversion interrupt mask
1577:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_IT_AWD: Analog watchdog interrupt mask
1578:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_IT_JEOC: End of injected conversion interrupt mask
1579:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_IT_OVR: Overrun interrupt enable                       
1580:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  NewState: new state of the specified ADC interrupts.
1581:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *          This parameter can be: ENABLE or DISABLE.
1582:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @retval None
1583:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   */
1584:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** void ADC_ITConfig(ADC_TypeDef* ADCx, uint16_t ADC_IT, FunctionalState NewState)  
1585:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** {
 1340              		.loc 1 1585 0
 1341              		.cfi_startproc
 1342              		@ args = 0, pretend = 0, frame = 0
 1343              		@ frame_needed = 0, uses_anonymous_args = 0
 1344              		@ link register save eliminated.
 1345              	.LVL127:
1586:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   uint32_t itmask = 0;
1587:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Check the parameters */
1588:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
1589:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1590:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_IT(ADC_IT)); 
1591:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
1592:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Get the ADC IT index */
1593:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   itmask = (uint8_t)ADC_IT;
1594:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   itmask = (uint32_t)0x01 << itmask;    
 1346              		.loc 1 1594 0
 1347 0000 C9B2     		uxtb	r1, r1
 1348              	.LVL128:
 1349 0002 0123     		movs	r3, #1
 1350 0004 8B40     		lsls	r3, r3, r1
 1351              	.LVL129:
1595:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
1596:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   if (NewState != DISABLE)
 1352              		.loc 1 1596 0
 1353 0006 22B9     		cbnz	r2, .L100
1597:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   {
1598:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Enable the selected ADC interrupts */
1599:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     ADCx->CR1 |= itmask;
1600:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   }
1601:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   else
1602:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   {
1603:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* Disable the selected ADC interrupts */
1604:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     ADCx->CR1 &= (~(uint32_t)itmask);
 1354              		.loc 1 1604 0
 1355 0008 4268     		ldr	r2, [r0, #4]
 1356              	.LVL130:
 1357 000a 22EA0303 		bic	r3, r2, r3
 1358              	.LVL131:
 1359 000e 4360     		str	r3, [r0, #4]
 1360 0010 7047     		bx	lr
 1361              	.LVL132:
 1362              	.L100:
1599:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   }
 1363              		.loc 1 1599 0
 1364 0012 4268     		ldr	r2, [r0, #4]
 1365              	.LVL133:
 1366 0014 1343     		orrs	r3, r3, r2
 1367              	.LVL134:
 1368 0016 4360     		str	r3, [r0, #4]
 1369 0018 7047     		bx	lr
 1370              		.cfi_endproc
 1371              	.LFE143:
 1373 001a 00BF     		.section	.text.ADC_GetFlagStatus,"ax",%progbits
 1374              		.align	2
 1375              		.global	ADC_GetFlagStatus
 1376              		.thumb
 1377              		.thumb_func
 1379              	ADC_GetFlagStatus:
 1380              	.LFB144:
1605:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   }
1606:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** }
1607:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
1608:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /**
1609:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @brief  Checks whether the specified ADC flag is set or not.
1610:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1611:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  ADC_FLAG: specifies the flag to check. 
1612:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *          This parameter can be one of the following values:
1613:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_FLAG_AWD: Analog watchdog flag
1614:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_FLAG_EOC: End of conversion flag
1615:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_FLAG_JEOC: End of injected group conversion flag
1616:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_FLAG_JSTRT: Start of injected group conversion flag
1617:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_FLAG_STRT: Start of regular group conversion flag
1618:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_FLAG_OVR: Overrun flag                                                 
1619:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @retval The new state of ADC_FLAG (SET or RESET).
1620:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   */
1621:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** FlagStatus ADC_GetFlagStatus(ADC_TypeDef* ADCx, uint8_t ADC_FLAG)
1622:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** {
 1381              		.loc 1 1622 0
 1382              		.cfi_startproc
 1383              		@ args = 0, pretend = 0, frame = 0
 1384              		@ frame_needed = 0, uses_anonymous_args = 0
 1385              		@ link register save eliminated.
 1386              	.LVL135:
1623:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   FlagStatus bitstatus = RESET;
1624:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Check the parameters */
1625:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
1626:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_GET_FLAG(ADC_FLAG));
1627:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
1628:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Check the status of the specified ADC flag */
1629:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   if ((ADCx->SR & ADC_FLAG) != (uint8_t)RESET)
 1387              		.loc 1 1629 0
 1388 0000 0368     		ldr	r3, [r0]
 1389              	.LVL136:
 1390 0002 1942     		tst	r1, r3
1630:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   {
1631:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* ADC_FLAG is set */
1632:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     bitstatus = SET;
1633:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   }
1634:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   else
1635:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   {
1636:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* ADC_FLAG is reset */
1637:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     bitstatus = RESET;
1638:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   }
1639:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Return the ADC_FLAG status */
1640:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   return  bitstatus;
1641:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** }
 1391              		.loc 1 1641 0
 1392 0004 14BF     		ite	ne
 1393 0006 0120     		movne	r0, #1
 1394              	.LVL137:
 1395 0008 0020     		moveq	r0, #0
 1396 000a 7047     		bx	lr
 1397              		.cfi_endproc
 1398              	.LFE144:
 1400              		.section	.text.ADC_ClearFlag,"ax",%progbits
 1401              		.align	2
 1402              		.global	ADC_ClearFlag
 1403              		.thumb
 1404              		.thumb_func
 1406              	ADC_ClearFlag:
 1407              	.LFB145:
1642:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
1643:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /**
1644:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @brief  Clears the ADCx's pending flags.
1645:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1646:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  ADC_FLAG: specifies the flag to clear. 
1647:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *          This parameter can be any combination of the following values:
1648:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_FLAG_AWD: Analog watchdog flag
1649:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_FLAG_EOC: End of conversion flag
1650:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_FLAG_JEOC: End of injected group conversion flag
1651:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_FLAG_JSTRT: Start of injected group conversion flag
1652:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_FLAG_STRT: Start of regular group conversion flag
1653:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_FLAG_OVR: Overrun flag                          
1654:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @retval None
1655:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   */
1656:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** void ADC_ClearFlag(ADC_TypeDef* ADCx, uint8_t ADC_FLAG)
1657:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** {
 1408              		.loc 1 1657 0
 1409              		.cfi_startproc
 1410              		@ args = 0, pretend = 0, frame = 0
 1411              		@ frame_needed = 0, uses_anonymous_args = 0
 1412              		@ link register save eliminated.
 1413              	.LVL138:
1658:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Check the parameters */
1659:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
1660:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_CLEAR_FLAG(ADC_FLAG));
1661:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
1662:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Clear the selected ADC flags */
1663:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   ADCx->SR = ~(uint32_t)ADC_FLAG;
 1414              		.loc 1 1663 0
 1415 0000 C943     		mvns	r1, r1
 1416              	.LVL139:
 1417 0002 0160     		str	r1, [r0]
 1418 0004 7047     		bx	lr
 1419              		.cfi_endproc
 1420              	.LFE145:
 1422 0006 00BF     		.section	.text.ADC_GetITStatus,"ax",%progbits
 1423              		.align	2
 1424              		.global	ADC_GetITStatus
 1425              		.thumb
 1426              		.thumb_func
 1428              	ADC_GetITStatus:
 1429              	.LFB146:
1664:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** }
1665:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
1666:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /**
1667:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @brief  Checks whether the specified ADC interrupt has occurred or not.
1668:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  ADCx:   where x can be 1, 2 or 3 to select the ADC peripheral.
1669:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  ADC_IT: specifies the ADC interrupt source to check. 
1670:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *          This parameter can be one of the following values:
1671:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_IT_EOC: End of conversion interrupt mask
1672:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_IT_AWD: Analog watchdog interrupt mask
1673:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_IT_JEOC: End of injected conversion interrupt mask
1674:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_IT_OVR: Overrun interrupt mask                        
1675:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @retval The new state of ADC_IT (SET or RESET).
1676:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   */
1677:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** ITStatus ADC_GetITStatus(ADC_TypeDef* ADCx, uint16_t ADC_IT)
1678:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** {
 1430              		.loc 1 1678 0
 1431              		.cfi_startproc
 1432              		@ args = 0, pretend = 0, frame = 0
 1433              		@ frame_needed = 0, uses_anonymous_args = 0
 1434              		@ link register save eliminated.
 1435              	.LVL140:
1679:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   ITStatus bitstatus = RESET;
1680:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   uint32_t itmask = 0, enablestatus = 0;
1681:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
1682:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Check the parameters */
1683:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
1684:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_IT(ADC_IT));
1685:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
1686:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Get the ADC IT index */
1687:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   itmask = ADC_IT >> 8;
1688:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
1689:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Get the ADC_IT enable bit status */
1690:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   enablestatus = (ADCx->CR1 & ((uint32_t)0x01 << (uint8_t)ADC_IT)) ;
 1436              		.loc 1 1690 0
 1437 0000 4268     		ldr	r2, [r0, #4]
 1438              	.LVL141:
1691:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
1692:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Check the status of the specified ADC interrupt */
1693:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   if (((ADCx->SR & itmask) != (uint32_t)RESET) && enablestatus)
 1439              		.loc 1 1693 0
 1440 0002 0068     		ldr	r0, [r0]
 1441              	.LVL142:
 1442 0004 10EA1120 		ands	r0, r0, r1, lsr #8
 1443 0008 06D0     		beq	.L104
1690:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
 1444              		.loc 1 1690 0 discriminator 1
 1445 000a C9B2     		uxtb	r1, r1
 1446              	.LVL143:
 1447 000c 0123     		movs	r3, #1
 1448 000e 8B40     		lsls	r3, r3, r1
 1449              		.loc 1 1693 0 discriminator 1
 1450 0010 1342     		tst	r3, r2
1694:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   {
1695:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* ADC_IT is set */
1696:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     bitstatus = SET;
 1451              		.loc 1 1696 0 discriminator 1
 1452 0012 14BF     		ite	ne
 1453 0014 0120     		movne	r0, #1
 1454 0016 0020     		moveq	r0, #0
 1455              	.LVL144:
 1456              	.L104:
1697:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   }
1698:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   else
1699:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   {
1700:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     /* ADC_IT is reset */
1701:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****     bitstatus = RESET;
1702:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   }
1703:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Return the ADC_IT status */
1704:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   return  bitstatus;
1705:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** }
 1457              		.loc 1 1705 0
 1458 0018 7047     		bx	lr
 1459              		.cfi_endproc
 1460              	.LFE146:
 1462 001a 00BF     		.section	.text.ADC_ClearITPendingBit,"ax",%progbits
 1463              		.align	2
 1464              		.global	ADC_ClearITPendingBit
 1465              		.thumb
 1466              		.thumb_func
 1468              	ADC_ClearITPendingBit:
 1469              	.LFB147:
1706:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** 
1707:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** /**
1708:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @brief  Clears the ADCx's interrupt pending bits.
1709:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1710:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @param  ADC_IT: specifies the ADC interrupt pending bit to clear.
1711:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *          This parameter can be one of the following values:
1712:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_IT_EOC: End of conversion interrupt mask
1713:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_IT_AWD: Analog watchdog interrupt mask
1714:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_IT_JEOC: End of injected conversion interrupt mask
1715:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   *            @arg ADC_IT_OVR: Overrun interrupt mask                         
1716:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   * @retval None
1717:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   */
1718:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** void ADC_ClearITPendingBit(ADC_TypeDef* ADCx, uint16_t ADC_IT)
1719:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c **** {
 1470              		.loc 1 1719 0
 1471              		.cfi_startproc
 1472              		@ args = 0, pretend = 0, frame = 0
 1473              		@ frame_needed = 0, uses_anonymous_args = 0
 1474              		@ link register save eliminated.
 1475              	.LVL145:
1720:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   uint8_t itmask = 0;
1721:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Check the parameters */
1722:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
1723:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_IT(ADC_IT)); 
1724:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Get the ADC IT index */
1725:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   itmask = (uint8_t)(ADC_IT >> 8);
1726:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   /* Clear the selected ADC interrupt pending bits */
1727:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c ****   ADCx->SR = ~(uint32_t)itmask;
 1476              		.loc 1 1727 0
 1477 0000 6FEA1121 		mvn	r1, r1, lsr #8
 1478              	.LVL146:
 1479 0004 0160     		str	r1, [r0]
 1480 0006 7047     		bx	lr
 1481              		.cfi_endproc
 1482              	.LFE147:
 1484              		.text
 1485              	.Letext0:
 1486              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\4.9 2014q4\\arm-none-eabi\\include\\mach
 1487              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\4.9 2014q4\\arm-none-eabi\\include\\stdi
 1488              		.file 4 "libs/Device/STM32F4xx/Include/stm32f4xx.h"
 1489              		.file 5 "libs/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_adc.h"
 1490              		.file 6 "libs/CMSIS/Include/core_cm4.h"
 1491              		.file 7 "libs/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_rcc.h"
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_adc.c
C:\Users\Student\AppData\Local\Temp\ccVmqZS6.s:20     .text.ADC_DeInit:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccVmqZS6.s:25     .text.ADC_DeInit:00000000 ADC_DeInit
C:\Users\Student\AppData\Local\Temp\ccVmqZS6.s:58     .text.ADC_Init:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccVmqZS6.s:63     .text.ADC_Init:00000000 ADC_Init
C:\Users\Student\AppData\Local\Temp\ccVmqZS6.s:138    .text.ADC_Init:0000004c $d
C:\Users\Student\AppData\Local\Temp\ccVmqZS6.s:143    .text.ADC_StructInit:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccVmqZS6.s:148    .text.ADC_StructInit:00000000 ADC_StructInit
C:\Users\Student\AppData\Local\Temp\ccVmqZS6.s:178    .text.ADC_CommonInit:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccVmqZS6.s:183    .text.ADC_CommonInit:00000000 ADC_CommonInit
C:\Users\Student\AppData\Local\Temp\ccVmqZS6.s:235    .text.ADC_CommonInit:00000020 $d
C:\Users\Student\AppData\Local\Temp\ccVmqZS6.s:241    .text.ADC_CommonStructInit:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccVmqZS6.s:246    .text.ADC_CommonStructInit:00000000 ADC_CommonStructInit
C:\Users\Student\AppData\Local\Temp\ccVmqZS6.s:268    .text.ADC_Cmd:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccVmqZS6.s:273    .text.ADC_Cmd:00000000 ADC_Cmd
C:\Users\Student\AppData\Local\Temp\ccVmqZS6.s:298    .text.ADC_AnalogWatchdogCmd:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccVmqZS6.s:303    .text.ADC_AnalogWatchdogCmd:00000000 ADC_AnalogWatchdogCmd
C:\Users\Student\AppData\Local\Temp\ccVmqZS6.s:329    .text.ADC_AnalogWatchdogThresholdsConfig:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccVmqZS6.s:334    .text.ADC_AnalogWatchdogThresholdsConfig:00000000 ADC_AnalogWatchdogThresholdsConfig
C:\Users\Student\AppData\Local\Temp\ccVmqZS6.s:351    .text.ADC_AnalogWatchdogSingleChannelConfig:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccVmqZS6.s:356    .text.ADC_AnalogWatchdogSingleChannelConfig:00000000 ADC_AnalogWatchdogSingleChannelConfig
C:\Users\Student\AppData\Local\Temp\ccVmqZS6.s:380    .text.ADC_TempSensorVrefintCmd:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccVmqZS6.s:385    .text.ADC_TempSensorVrefintCmd:00000000 ADC_TempSensorVrefintCmd
C:\Users\Student\AppData\Local\Temp\ccVmqZS6.s:410    .text.ADC_TempSensorVrefintCmd:00000018 $d
C:\Users\Student\AppData\Local\Temp\ccVmqZS6.s:415    .text.ADC_VBATCmd:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccVmqZS6.s:420    .text.ADC_VBATCmd:00000000 ADC_VBATCmd
C:\Users\Student\AppData\Local\Temp\ccVmqZS6.s:445    .text.ADC_VBATCmd:00000018 $d
C:\Users\Student\AppData\Local\Temp\ccVmqZS6.s:450    .text.ADC_RegularChannelConfig:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccVmqZS6.s:455    .text.ADC_RegularChannelConfig:00000000 ADC_RegularChannelConfig
C:\Users\Student\AppData\Local\Temp\ccVmqZS6.s:635    .text.ADC_SoftwareStartConv:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccVmqZS6.s:640    .text.ADC_SoftwareStartConv:00000000 ADC_SoftwareStartConv
C:\Users\Student\AppData\Local\Temp\ccVmqZS6.s:657    .text.ADC_GetSoftwareStartConvStatus:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccVmqZS6.s:662    .text.ADC_GetSoftwareStartConvStatus:00000000 ADC_GetSoftwareStartConvStatus
C:\Users\Student\AppData\Local\Temp\ccVmqZS6.s:681    .text.ADC_EOCOnEachRegularChannelCmd:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccVmqZS6.s:686    .text.ADC_EOCOnEachRegularChannelCmd:00000000 ADC_EOCOnEachRegularChannelCmd
C:\Users\Student\AppData\Local\Temp\ccVmqZS6.s:711    .text.ADC_ContinuousModeCmd:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccVmqZS6.s:716    .text.ADC_ContinuousModeCmd:00000000 ADC_ContinuousModeCmd
C:\Users\Student\AppData\Local\Temp\ccVmqZS6.s:741    .text.ADC_DiscModeChannelCountConfig:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccVmqZS6.s:746    .text.ADC_DiscModeChannelCountConfig:00000000 ADC_DiscModeChannelCountConfig
C:\Users\Student\AppData\Local\Temp\ccVmqZS6.s:773    .text.ADC_DiscModeCmd:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccVmqZS6.s:778    .text.ADC_DiscModeCmd:00000000 ADC_DiscModeCmd
C:\Users\Student\AppData\Local\Temp\ccVmqZS6.s:803    .text.ADC_GetConversionValue:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccVmqZS6.s:808    .text.ADC_GetConversionValue:00000000 ADC_GetConversionValue
C:\Users\Student\AppData\Local\Temp\ccVmqZS6.s:826    .text.ADC_GetMultiModeConversionValue:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccVmqZS6.s:831    .text.ADC_GetMultiModeConversionValue:00000000 ADC_GetMultiModeConversionValue
C:\Users\Student\AppData\Local\Temp\ccVmqZS6.s:846    .text.ADC_GetMultiModeConversionValue:00000008 $d
C:\Users\Student\AppData\Local\Temp\ccVmqZS6.s:851    .text.ADC_DMACmd:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccVmqZS6.s:856    .text.ADC_DMACmd:00000000 ADC_DMACmd
C:\Users\Student\AppData\Local\Temp\ccVmqZS6.s:881    .text.ADC_DMARequestAfterLastTransferCmd:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccVmqZS6.s:886    .text.ADC_DMARequestAfterLastTransferCmd:00000000 ADC_DMARequestAfterLastTransferCmd
C:\Users\Student\AppData\Local\Temp\ccVmqZS6.s:911    .text.ADC_MultiModeDMARequestAfterLastTransferCmd:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccVmqZS6.s:916    .text.ADC_MultiModeDMARequestAfterLastTransferCmd:00000000 ADC_MultiModeDMARequestAfterLastTransferCmd
C:\Users\Student\AppData\Local\Temp\ccVmqZS6.s:941    .text.ADC_MultiModeDMARequestAfterLastTransferCmd:00000018 $d
C:\Users\Student\AppData\Local\Temp\ccVmqZS6.s:946    .text.ADC_InjectedChannelConfig:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccVmqZS6.s:951    .text.ADC_InjectedChannelConfig:00000000 ADC_InjectedChannelConfig
C:\Users\Student\AppData\Local\Temp\ccVmqZS6.s:1056   .text.ADC_InjectedSequencerLengthConfig:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccVmqZS6.s:1061   .text.ADC_InjectedSequencerLengthConfig:00000000 ADC_InjectedSequencerLengthConfig
C:\Users\Student\AppData\Local\Temp\ccVmqZS6.s:1088   .text.ADC_SetInjectedOffset:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccVmqZS6.s:1093   .text.ADC_SetInjectedOffset:00000000 ADC_SetInjectedOffset
C:\Users\Student\AppData\Local\Temp\ccVmqZS6.s:1127   .text.ADC_ExternalTrigInjectedConvConfig:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccVmqZS6.s:1132   .text.ADC_ExternalTrigInjectedConvConfig:00000000 ADC_ExternalTrigInjectedConvConfig
C:\Users\Student\AppData\Local\Temp\ccVmqZS6.s:1156   .text.ADC_ExternalTrigInjectedConvEdgeConfig:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccVmqZS6.s:1161   .text.ADC_ExternalTrigInjectedConvEdgeConfig:00000000 ADC_ExternalTrigInjectedConvEdgeConfig
C:\Users\Student\AppData\Local\Temp\ccVmqZS6.s:1185   .text.ADC_SoftwareStartInjectedConv:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccVmqZS6.s:1190   .text.ADC_SoftwareStartInjectedConv:00000000 ADC_SoftwareStartInjectedConv
C:\Users\Student\AppData\Local\Temp\ccVmqZS6.s:1207   .text.ADC_GetSoftwareStartInjectedConvCmdStatus:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccVmqZS6.s:1212   .text.ADC_GetSoftwareStartInjectedConvCmdStatus:00000000 ADC_GetSoftwareStartInjectedConvCmdStatus
C:\Users\Student\AppData\Local\Temp\ccVmqZS6.s:1231   .text.ADC_AutoInjectedConvCmd:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccVmqZS6.s:1236   .text.ADC_AutoInjectedConvCmd:00000000 ADC_AutoInjectedConvCmd
C:\Users\Student\AppData\Local\Temp\ccVmqZS6.s:1261   .text.ADC_InjectedDiscModeCmd:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccVmqZS6.s:1266   .text.ADC_InjectedDiscModeCmd:00000000 ADC_InjectedDiscModeCmd
C:\Users\Student\AppData\Local\Temp\ccVmqZS6.s:1291   .text.ADC_GetInjectedConversionValue:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccVmqZS6.s:1296   .text.ADC_GetInjectedConversionValue:00000000 ADC_GetInjectedConversionValue
C:\Users\Student\AppData\Local\Temp\ccVmqZS6.s:1333   .text.ADC_ITConfig:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccVmqZS6.s:1338   .text.ADC_ITConfig:00000000 ADC_ITConfig
C:\Users\Student\AppData\Local\Temp\ccVmqZS6.s:1374   .text.ADC_GetFlagStatus:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccVmqZS6.s:1379   .text.ADC_GetFlagStatus:00000000 ADC_GetFlagStatus
C:\Users\Student\AppData\Local\Temp\ccVmqZS6.s:1401   .text.ADC_ClearFlag:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccVmqZS6.s:1406   .text.ADC_ClearFlag:00000000 ADC_ClearFlag
C:\Users\Student\AppData\Local\Temp\ccVmqZS6.s:1423   .text.ADC_GetITStatus:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccVmqZS6.s:1428   .text.ADC_GetITStatus:00000000 ADC_GetITStatus
C:\Users\Student\AppData\Local\Temp\ccVmqZS6.s:1463   .text.ADC_ClearITPendingBit:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccVmqZS6.s:1468   .text.ADC_ClearITPendingBit:00000000 ADC_ClearITPendingBit
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
RCC_APB2PeriphResetCmd
