   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 2
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"stm32f4xx_dcmi.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.DCMI_DeInit,"ax",%progbits
  20              		.align	2
  21              		.global	DCMI_DeInit
  22              		.thumb
  23              		.thumb_func
  25              	DCMI_DeInit:
  26              	.LFB110:
  27              		.file 1 "libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c"
   1:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** /**
   2:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   ******************************************************************************
   3:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @file    stm32f4xx_dcmi.c
   4:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @author  MCD Application Team
   5:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @version V1.3.0
   6:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @date    08-November-2013
   7:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @brief   This file provides firmware functions to manage the following 
   8:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *          functionalities of the DCMI peripheral:           
   9:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *           + Initialization and Configuration
  10:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *           + Image capture functions  
  11:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *           + Interrupts and flags management
  12:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *
  13:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****  @verbatim          
  14:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****  ===============================================================================
  15:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****                         ##### How to use this driver #####
  16:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****  ===============================================================================  
  17:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****     [..]       
  18:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****       The sequence below describes how to use this driver to capture image
  19:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****       from a camera module connected to the DCMI Interface.
  20:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****       This sequence does not take into account the configuration of the  
  21:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****       camera module, which should be made before to configure and enable
  22:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****       the DCMI to capture images.
  23:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****              
  24:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****       (#) Enable the clock for the DCMI and associated GPIOs using the following 
  25:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****           functions:
  26:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****           RCC_AHB2PeriphClockCmd(RCC_AHB2Periph_DCMI, ENABLE);
  27:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****           RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOx, ENABLE);
  28:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   
  29:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****       (#) DCMI pins configuration 
  30:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****         (++) Connect the involved DCMI pins to AF13 using the following function 
  31:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****             GPIO_PinAFConfig(GPIOx, GPIO_PinSourcex, GPIO_AF_DCMI); 
  32:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****         (++) Configure these DCMI pins in alternate function mode by calling 
  33:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****             the function GPIO_Init();
  34:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****       
  35:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****       (#) Declare a DCMI_InitTypeDef structure, for example:
  36:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****           DCMI_InitTypeDef  DCMI_InitStructure;
  37:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****           and fill the DCMI_InitStructure variable with the allowed values
  38:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****           of the structure member.
  39:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****     
  40:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****       (#) Initialize the DCMI interface by calling the function
  41:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****           DCMI_Init(&DCMI_InitStructure); 
  42:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****     
  43:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****       (#) Configure the DMA2_Stream1 channel1 to transfer Data from DCMI DR
  44:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****           register to the destination memory buffer.
  45:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****     
  46:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****       (#) Enable DCMI interface using the function
  47:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****           DCMI_Cmd(ENABLE);
  48:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****                    
  49:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****       (#) Start the image capture using the function
  50:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****           DCMI_CaptureCmd(ENABLE);
  51:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****                    
  52:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****       (#) At this stage the DCMI interface waits for the first start of frame,
  53:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****           then a DMA request is generated continuously/once (depending on the
  54:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****           mode used, Continuous/Snapshot) to transfer the received data into
  55:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****           the destination memory. 
  56:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****      
  57:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****       -@-  If you need to capture only a rectangular window from the received
  58:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****            image, you have to use the DCMI_CROPConfig() function to configure 
  59:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****            the coordinates and size of the window to be captured, then enable 
  60:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****            the Crop feature using DCMI_CROPCmd(ENABLE);  
  61:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****            In this case, the Crop configuration should be made before to enable
  62:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****            and start the DCMI interface. 
  63:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****           
  64:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****  @endverbatim     
  65:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   ******************************************************************************
  66:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @attention
  67:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *
  68:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * <h2><center>&copy; COPYRIGHT 2013 STMicroelectronics</center></h2>
  69:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *
  70:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
  71:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * You may not use this file except in compliance with the License.
  72:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * You may obtain a copy of the License at:
  73:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *
  74:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *        http://www.st.com/software_license_agreement_liberty_v2
  75:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *
  76:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * Unless required by applicable law or agreed to in writing, software 
  77:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * distributed under the License is distributed on an "AS IS" BASIS, 
  78:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  79:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * See the License for the specific language governing permissions and
  80:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * limitations under the License.
  81:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *
  82:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   ******************************************************************************
  83:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   */
  84:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** 
  85:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** /* Includes ------------------------------------------------------------------*/
  86:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** #include "stm32f4xx_dcmi.h"
  87:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** #include "stm32f4xx_rcc.h"
  88:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** 
  89:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
  90:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @{
  91:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   */
  92:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** 
  93:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** /** @defgroup DCMI 
  94:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @brief DCMI driver modules
  95:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @{
  96:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   */ 
  97:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** 
  98:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** /* Private typedef -----------------------------------------------------------*/
  99:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** /* Private define ------------------------------------------------------------*/
 100:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** /* Private macro -------------------------------------------------------------*/
 101:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** /* Private variables ---------------------------------------------------------*/
 102:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** /* Private function prototypes -----------------------------------------------*/
 103:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** /* Private functions ---------------------------------------------------------*/
 104:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** 
 105:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** /** @defgroup DCMI_Private_Functions
 106:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @{
 107:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   */ 
 108:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** 
 109:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** /** @defgroup DCMI_Group1 Initialization and Configuration functions
 110:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****  *  @brief   Initialization and Configuration functions 
 111:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****  *
 112:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** @verbatim   
 113:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****  ===============================================================================
 114:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****               ##### Initialization and Configuration functions #####
 115:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****  ===============================================================================  
 116:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** 
 117:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** @endverbatim
 118:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @{
 119:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   */
 120:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** 
 121:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** /**
 122:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @brief  Deinitializes the DCMI registers to their default reset values.
 123:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @param  None
 124:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @retval None
 125:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   */
 126:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** void DCMI_DeInit(void)
 127:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** {
  28              		.loc 1 127 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 128:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   DCMI->CR = 0x0;
  33              		.loc 1 128 0
  34 0000 054B     		ldr	r3, .L2
  35 0002 0022     		movs	r2, #0
 129:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   DCMI->IER = 0x0;
 130:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   DCMI->ICR = 0x1F;
  36              		.loc 1 130 0
  37 0004 1F21     		movs	r1, #31
 128:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   DCMI->CR = 0x0;
  38              		.loc 1 128 0
  39 0006 1A60     		str	r2, [r3]
 129:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   DCMI->IER = 0x0;
  40              		.loc 1 129 0
  41 0008 DA60     		str	r2, [r3, #12]
  42              		.loc 1 130 0
  43 000a 5961     		str	r1, [r3, #20]
 131:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   DCMI->ESCR = 0x0;
  44              		.loc 1 131 0
  45 000c 9A61     		str	r2, [r3, #24]
 132:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   DCMI->ESUR = 0x0;
  46              		.loc 1 132 0
  47 000e DA61     		str	r2, [r3, #28]
 133:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   DCMI->CWSTRTR = 0x0;
  48              		.loc 1 133 0
  49 0010 1A62     		str	r2, [r3, #32]
 134:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   DCMI->CWSIZER = 0x0;
  50              		.loc 1 134 0
  51 0012 5A62     		str	r2, [r3, #36]
  52 0014 7047     		bx	lr
  53              	.L3:
  54 0016 00BF     		.align	2
  55              	.L2:
  56 0018 00000550 		.word	1342504960
  57              		.cfi_endproc
  58              	.LFE110:
  60              		.section	.text.DCMI_Init,"ax",%progbits
  61              		.align	2
  62              		.global	DCMI_Init
  63              		.thumb
  64              		.thumb_func
  66              	DCMI_Init:
  67              	.LFB111:
 135:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** }
 136:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** 
 137:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** /**
 138:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @brief  Initializes the DCMI according to the specified parameters in the DCMI_InitStruct.
 139:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @param  DCMI_InitStruct: pointer to a DCMI_InitTypeDef structure that contains 
 140:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *         the configuration information for the DCMI.
 141:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @retval None
 142:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   */
 143:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** void DCMI_Init(DCMI_InitTypeDef* DCMI_InitStruct)
 144:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** {
  68              		.loc 1 144 0
  69              		.cfi_startproc
  70              		@ args = 0, pretend = 0, frame = 0
  71              		@ frame_needed = 0, uses_anonymous_args = 0
  72              	.LVL0:
  73 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  74              	.LCFI0:
  75              		.cfi_def_cfa_offset 20
  76              		.cfi_offset 4, -20
  77              		.cfi_offset 5, -16
  78              		.cfi_offset 6, -12
  79              		.cfi_offset 7, -8
  80              		.cfi_offset 14, -4
 145:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   uint32_t temp = 0x0;
 146:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   
 147:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   /* Check the parameters */
 148:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   assert_param(IS_DCMI_CAPTURE_MODE(DCMI_InitStruct->DCMI_CaptureMode));
 149:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   assert_param(IS_DCMI_SYNCHRO(DCMI_InitStruct->DCMI_SynchroMode));
 150:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   assert_param(IS_DCMI_PCKPOLARITY(DCMI_InitStruct->DCMI_PCKPolarity));
 151:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   assert_param(IS_DCMI_VSPOLARITY(DCMI_InitStruct->DCMI_VSPolarity));
 152:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   assert_param(IS_DCMI_HSPOLARITY(DCMI_InitStruct->DCMI_HSPolarity));
 153:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   assert_param(IS_DCMI_CAPTURE_RATE(DCMI_InitStruct->DCMI_CaptureRate));
 154:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   assert_param(IS_DCMI_EXTENDED_DATA(DCMI_InitStruct->DCMI_ExtendedDataMode));
 155:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** 
 156:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   /* The DCMI configuration registers should be programmed correctly before 
 157:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   enabling the CR_ENABLE Bit and the CR_CAPTURE Bit */
 158:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   DCMI->CR &= ~(DCMI_CR_ENABLE | DCMI_CR_CAPTURE);
  81              		.loc 1 158 0
  82 0002 104D     		ldr	r5, .L6
 159:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****    
 160:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   /* Reset the old DCMI configuration */
 161:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   temp = DCMI->CR;
 162:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   
 163:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   temp &= ~((uint32_t)DCMI_CR_CM     | DCMI_CR_ESS   | DCMI_CR_PCKPOL |
 164:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****                       DCMI_CR_HSPOL  | DCMI_CR_VSPOL | DCMI_CR_FCRC_0 | 
 165:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****                       DCMI_CR_FCRC_1 | DCMI_CR_EDM_0 | DCMI_CR_EDM_1); 
 166:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****                   
 167:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   /* Sets the new configuration of the DCMI peripheral */
 168:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   temp |= ((uint32_t)DCMI_InitStruct->DCMI_CaptureMode |
 169:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****                      DCMI_InitStruct->DCMI_SynchroMode |
 170:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****                      DCMI_InitStruct->DCMI_PCKPolarity |
 171:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****                      DCMI_InitStruct->DCMI_VSPolarity |
 172:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****                      DCMI_InitStruct->DCMI_HSPolarity |
 173:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****                      DCMI_InitStruct->DCMI_CaptureRate |
  83              		.loc 1 173 0
  84 0004 B0F802C0 		ldrh	ip, [r0, #2]
  85 0008 0288     		ldrh	r2, [r0]
 158:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****    
  86              		.loc 1 158 0
  87 000a 2C68     		ldr	r4, [r5]
  88              		.loc 1 173 0
  89 000c B0F804E0 		ldrh	lr, [r0, #4]
  90 0010 0389     		ldrh	r3, [r0, #8]
  91 0012 C788     		ldrh	r7, [r0, #6]
  92 0014 4689     		ldrh	r6, [r0, #10]
  93 0016 8189     		ldrh	r1, [r0, #12]
  94 0018 4CEA0202 		orr	r2, ip, r2
 158:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****    
  95              		.loc 1 158 0
  96 001c 24F48040 		bic	r0, r4, #16384
  97              	.LVL1:
  98              		.loc 1 173 0
  99 0020 42EA0E02 		orr	r2, r2, lr
 158:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****    
 100              		.loc 1 158 0
 101 0024 20F00100 		bic	r0, r0, #1
 102 0028 2860     		str	r0, [r5]
 103              		.loc 1 173 0
 104 002a 3A43     		orrs	r2, r2, r7
 105 002c 1A43     		orrs	r2, r2, r3
 161:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   
 106              		.loc 1 161 0
 107 002e 2B68     		ldr	r3, [r5]
 108              	.LVL2:
 109              		.loc 1 173 0
 110 0030 3243     		orrs	r2, r2, r6
 111 0032 0A43     		orrs	r2, r2, r1
 163:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****                       DCMI_CR_HSPOL  | DCMI_CR_VSPOL | DCMI_CR_FCRC_0 | 
 112              		.loc 1 163 0
 113 0034 23F47F63 		bic	r3, r3, #4080
 114              	.LVL3:
 115              		.loc 1 173 0
 116 0038 92B2     		uxth	r2, r2
 163:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****                       DCMI_CR_HSPOL  | DCMI_CR_VSPOL | DCMI_CR_FCRC_0 | 
 117              		.loc 1 163 0
 118 003a 23F00203 		bic	r3, r3, #2
 119              	.LVL4:
 168:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****                      DCMI_InitStruct->DCMI_SynchroMode |
 120              		.loc 1 168 0
 121 003e 1343     		orrs	r3, r3, r2
 122              	.LVL5:
 174:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****                      DCMI_InitStruct->DCMI_ExtendedDataMode);
 175:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** 
 176:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   DCMI->CR = temp;                              
 123              		.loc 1 176 0
 124 0040 2B60     		str	r3, [r5]
 125 0042 F0BD     		pop	{r4, r5, r6, r7, pc}
 126              	.L7:
 127              		.align	2
 128              	.L6:
 129 0044 00000550 		.word	1342504960
 130              		.cfi_endproc
 131              	.LFE111:
 133              		.section	.text.DCMI_StructInit,"ax",%progbits
 134              		.align	2
 135              		.global	DCMI_StructInit
 136              		.thumb
 137              		.thumb_func
 139              	DCMI_StructInit:
 140              	.LFB112:
 177:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** }
 178:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** 
 179:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** /**
 180:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @brief  Fills each DCMI_InitStruct member with its default value.
 181:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @param  DCMI_InitStruct : pointer to a DCMI_InitTypeDef structure which will
 182:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *         be initialized.
 183:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @retval None
 184:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   */
 185:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** void DCMI_StructInit(DCMI_InitTypeDef* DCMI_InitStruct)
 186:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** {
 141              		.loc 1 186 0
 142              		.cfi_startproc
 143              		@ args = 0, pretend = 0, frame = 0
 144              		@ frame_needed = 0, uses_anonymous_args = 0
 145              		@ link register save eliminated.
 146              	.LVL6:
 187:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   /* Set the default configuration */
 188:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   DCMI_InitStruct->DCMI_CaptureMode = DCMI_CaptureMode_Continuous;
 147              		.loc 1 188 0
 148 0000 0023     		movs	r3, #0
 149 0002 0380     		strh	r3, [r0]	@ movhi
 189:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   DCMI_InitStruct->DCMI_SynchroMode = DCMI_SynchroMode_Hardware;
 150              		.loc 1 189 0
 151 0004 4380     		strh	r3, [r0, #2]	@ movhi
 190:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   DCMI_InitStruct->DCMI_PCKPolarity = DCMI_PCKPolarity_Falling;
 152              		.loc 1 190 0
 153 0006 8380     		strh	r3, [r0, #4]	@ movhi
 191:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   DCMI_InitStruct->DCMI_VSPolarity = DCMI_VSPolarity_Low;
 154              		.loc 1 191 0
 155 0008 C380     		strh	r3, [r0, #6]	@ movhi
 192:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   DCMI_InitStruct->DCMI_HSPolarity = DCMI_HSPolarity_Low;
 156              		.loc 1 192 0
 157 000a 0381     		strh	r3, [r0, #8]	@ movhi
 193:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   DCMI_InitStruct->DCMI_CaptureRate = DCMI_CaptureRate_All_Frame;
 158              		.loc 1 193 0
 159 000c 4381     		strh	r3, [r0, #10]	@ movhi
 194:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   DCMI_InitStruct->DCMI_ExtendedDataMode = DCMI_ExtendedDataMode_8b;
 160              		.loc 1 194 0
 161 000e 8381     		strh	r3, [r0, #12]	@ movhi
 162 0010 7047     		bx	lr
 163              		.cfi_endproc
 164              	.LFE112:
 166 0012 00BF     		.section	.text.DCMI_CROPConfig,"ax",%progbits
 167              		.align	2
 168              		.global	DCMI_CROPConfig
 169              		.thumb
 170              		.thumb_func
 172              	DCMI_CROPConfig:
 173              	.LFB113:
 195:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** }
 196:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** 
 197:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** /**
 198:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @brief  Initializes the DCMI peripheral CROP mode according to the specified
 199:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *         parameters in the DCMI_CROPInitStruct.
 200:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @note   This function should be called before to enable and start the DCMI interface.   
 201:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @param  DCMI_CROPInitStruct:  pointer to a DCMI_CROPInitTypeDef structure that 
 202:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *         contains the configuration information for the DCMI peripheral CROP mode.
 203:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @retval None
 204:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   */
 205:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** void DCMI_CROPConfig(DCMI_CROPInitTypeDef* DCMI_CROPInitStruct)
 206:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** {  
 174              		.loc 1 206 0
 175              		.cfi_startproc
 176              		@ args = 0, pretend = 0, frame = 0
 177              		@ frame_needed = 0, uses_anonymous_args = 0
 178              		@ link register save eliminated.
 179              	.LVL7:
 180 0000 30B4     		push	{r4, r5}
 181              	.LCFI1:
 182              		.cfi_def_cfa_offset 8
 183              		.cfi_offset 4, -8
 184              		.cfi_offset 5, -4
 207:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   /* Sets the CROP window coordinates */
 208:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   DCMI->CWSTRTR = (uint32_t)((uint32_t)DCMI_CROPInitStruct->DCMI_HorizontalOffsetCount |
 185              		.loc 1 208 0
 186 0002 4288     		ldrh	r2, [r0, #2]
 209:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****                   ((uint32_t)DCMI_CROPInitStruct->DCMI_VerticalStartLine << 16));
 187              		.loc 1 209 0
 188 0004 0588     		ldrh	r5, [r0]
 210:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** 
 211:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   /* Sets the CROP window size */
 212:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   DCMI->CWSIZER = (uint32_t)(DCMI_CROPInitStruct->DCMI_CaptureCount |
 213:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****                   ((uint32_t)DCMI_CROPInitStruct->DCMI_VerticalLineCount << 16));
 189              		.loc 1 213 0
 190 0006 8488     		ldrh	r4, [r0, #4]
 212:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****                   ((uint32_t)DCMI_CROPInitStruct->DCMI_VerticalLineCount << 16));
 191              		.loc 1 212 0
 192 0008 C388     		ldrh	r3, [r0, #6]
 208:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****                   ((uint32_t)DCMI_CROPInitStruct->DCMI_VerticalStartLine << 16));
 193              		.loc 1 208 0
 194 000a 0449     		ldr	r1, .L11
 195 000c 42EA0542 		orr	r2, r2, r5, lsl #16
 212:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****                   ((uint32_t)DCMI_CROPInitStruct->DCMI_VerticalLineCount << 16));
 196              		.loc 1 212 0
 197 0010 43EA0443 		orr	r3, r3, r4, lsl #16
 208:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****                   ((uint32_t)DCMI_CROPInitStruct->DCMI_VerticalStartLine << 16));
 198              		.loc 1 208 0
 199 0014 0A62     		str	r2, [r1, #32]
 214:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** }
 200              		.loc 1 214 0
 201 0016 30BC     		pop	{r4, r5}
 202              	.LCFI2:
 203              		.cfi_restore 5
 204              		.cfi_restore 4
 205              		.cfi_def_cfa_offset 0
 212:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****                   ((uint32_t)DCMI_CROPInitStruct->DCMI_VerticalLineCount << 16));
 206              		.loc 1 212 0
 207 0018 4B62     		str	r3, [r1, #36]
 208              		.loc 1 214 0
 209 001a 7047     		bx	lr
 210              	.L12:
 211              		.align	2
 212              	.L11:
 213 001c 00000550 		.word	1342504960
 214              		.cfi_endproc
 215              	.LFE113:
 217              		.section	.text.DCMI_CROPCmd,"ax",%progbits
 218              		.align	2
 219              		.global	DCMI_CROPCmd
 220              		.thumb
 221              		.thumb_func
 223              	DCMI_CROPCmd:
 224              	.LFB114:
 215:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** 
 216:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** /**
 217:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @brief  Enables or disables the DCMI Crop feature.
 218:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @note   This function should be called before to enable and start the DCMI interface.
 219:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @param  NewState: new state of the DCMI Crop feature. 
 220:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *          This parameter can be: ENABLE or DISABLE.
 221:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @retval None
 222:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   */
 223:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** void DCMI_CROPCmd(FunctionalState NewState)
 224:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** {
 225              		.loc 1 224 0
 226              		.cfi_startproc
 227              		@ args = 0, pretend = 0, frame = 0
 228              		@ frame_needed = 0, uses_anonymous_args = 0
 229              		@ link register save eliminated.
 230              	.LVL8:
 225:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   /* Check the parameters */
 226:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 227:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****     
 228:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   if (NewState != DISABLE)
 229:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   {
 230:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****     /* Enable the DCMI Crop feature */
 231:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****     DCMI->CR |= (uint32_t)DCMI_CR_CROP;
 231              		.loc 1 231 0
 232 0000 054A     		ldr	r2, .L18
 233 0002 1368     		ldr	r3, [r2]
 228:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   {
 234              		.loc 1 228 0
 235 0004 18B9     		cbnz	r0, .L17
 232:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   }
 233:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   else
 234:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   {
 235:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****     /* Disable the DCMI Crop feature */
 236:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****     DCMI->CR &= ~(uint32_t)DCMI_CR_CROP;
 236              		.loc 1 236 0
 237 0006 23F00403 		bic	r3, r3, #4
 238 000a 1360     		str	r3, [r2]
 239 000c 7047     		bx	lr
 240              	.L17:
 231:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   }
 241              		.loc 1 231 0
 242 000e 43F00403 		orr	r3, r3, #4
 243 0012 1360     		str	r3, [r2]
 244 0014 7047     		bx	lr
 245              	.L19:
 246 0016 00BF     		.align	2
 247              	.L18:
 248 0018 00000550 		.word	1342504960
 249              		.cfi_endproc
 250              	.LFE114:
 252              		.section	.text.DCMI_SetEmbeddedSynchroCodes,"ax",%progbits
 253              		.align	2
 254              		.global	DCMI_SetEmbeddedSynchroCodes
 255              		.thumb
 256              		.thumb_func
 258              	DCMI_SetEmbeddedSynchroCodes:
 259              	.LFB115:
 237:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   }
 238:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** }
 239:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** 
 240:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** /**
 241:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @brief  Sets the embedded synchronization codes
 242:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @param  DCMI_CodesInitTypeDef: pointer to a DCMI_CodesInitTypeDef structure that
 243:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *         contains the embedded synchronization codes for the DCMI peripheral.
 244:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @retval None
 245:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   */
 246:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** void DCMI_SetEmbeddedSynchroCodes(DCMI_CodesInitTypeDef* DCMI_CodesInitStruct)
 247:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** {
 260              		.loc 1 247 0
 261              		.cfi_startproc
 262              		@ args = 0, pretend = 0, frame = 0
 263              		@ frame_needed = 0, uses_anonymous_args = 0
 264              		@ link register save eliminated.
 265              	.LVL9:
 266 0000 10B4     		push	{r4}
 267              	.LCFI3:
 268              		.cfi_def_cfa_offset 4
 269              		.cfi_offset 4, -4
 248:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   DCMI->ESCR = (uint32_t)(DCMI_CodesInitStruct->DCMI_FrameStartCode |
 249:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****                           ((uint32_t)DCMI_CodesInitStruct->DCMI_LineStartCode << 8)|
 250:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****                           ((uint32_t)DCMI_CodesInitStruct->DCMI_LineEndCode << 16)|
 270              		.loc 1 250 0
 271 0002 8178     		ldrb	r1, [r0, #2]	@ zero_extendqisi2
 249:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****                           ((uint32_t)DCMI_CodesInitStruct->DCMI_LineEndCode << 16)|
 272              		.loc 1 249 0
 273 0004 4378     		ldrb	r3, [r0, #1]	@ zero_extendqisi2
 248:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   DCMI->ESCR = (uint32_t)(DCMI_CodesInitStruct->DCMI_FrameStartCode |
 274              		.loc 1 248 0
 275 0006 0278     		ldrb	r2, [r0]	@ zero_extendqisi2
 251:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****                           ((uint32_t)DCMI_CodesInitStruct->DCMI_FrameEndCode << 24));
 276              		.loc 1 251 0
 277 0008 C078     		ldrb	r0, [r0, #3]	@ zero_extendqisi2
 278              	.LVL10:
 248:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   DCMI->ESCR = (uint32_t)(DCMI_CodesInitStruct->DCMI_FrameStartCode |
 279              		.loc 1 248 0
 280 000a 054C     		ldr	r4, .L22
 250:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****                           ((uint32_t)DCMI_CodesInitStruct->DCMI_FrameEndCode << 24));
 281              		.loc 1 250 0
 282 000c 0904     		lsls	r1, r1, #16
 283 000e 41EA0323 		orr	r3, r1, r3, lsl #8
 249:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****                           ((uint32_t)DCMI_CodesInitStruct->DCMI_LineEndCode << 16)|
 284              		.loc 1 249 0
 285 0012 1343     		orrs	r3, r3, r2
 248:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****                           ((uint32_t)DCMI_CodesInitStruct->DCMI_LineStartCode << 8)|
 286              		.loc 1 248 0
 287 0014 43EA0063 		orr	r3, r3, r0, lsl #24
 288 0018 A361     		str	r3, [r4, #24]
 252:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** }
 289              		.loc 1 252 0
 290 001a 5DF8044B 		ldr	r4, [sp], #4
 291              	.LCFI4:
 292              		.cfi_restore 4
 293              		.cfi_def_cfa_offset 0
 294 001e 7047     		bx	lr
 295              	.L23:
 296              		.align	2
 297              	.L22:
 298 0020 00000550 		.word	1342504960
 299              		.cfi_endproc
 300              	.LFE115:
 302              		.section	.text.DCMI_JPEGCmd,"ax",%progbits
 303              		.align	2
 304              		.global	DCMI_JPEGCmd
 305              		.thumb
 306              		.thumb_func
 308              	DCMI_JPEGCmd:
 309              	.LFB116:
 253:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** 
 254:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** /**
 255:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @brief  Enables or disables the DCMI JPEG format.
 256:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @note   The Crop and Embedded Synchronization features cannot be used in this mode.  
 257:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @param  NewState: new state of the DCMI JPEG format. 
 258:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *          This parameter can be: ENABLE or DISABLE.
 259:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @retval None
 260:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   */
 261:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** void DCMI_JPEGCmd(FunctionalState NewState)
 262:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** {
 310              		.loc 1 262 0
 311              		.cfi_startproc
 312              		@ args = 0, pretend = 0, frame = 0
 313              		@ frame_needed = 0, uses_anonymous_args = 0
 314              		@ link register save eliminated.
 315              	.LVL11:
 263:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   /* Check the parameters */
 264:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 265:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****  
 266:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   if (NewState != DISABLE)
 267:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   {
 268:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****     /* Enable the DCMI JPEG format */
 269:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****     DCMI->CR |= (uint32_t)DCMI_CR_JPEG;
 316              		.loc 1 269 0
 317 0000 054A     		ldr	r2, .L28
 318 0002 1368     		ldr	r3, [r2]
 266:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   {
 319              		.loc 1 266 0
 320 0004 18B9     		cbnz	r0, .L27
 270:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   }
 271:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   else
 272:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   {
 273:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****     /* Disable the DCMI JPEG format */
 274:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****     DCMI->CR &= ~(uint32_t)DCMI_CR_JPEG;
 321              		.loc 1 274 0
 322 0006 23F00803 		bic	r3, r3, #8
 323 000a 1360     		str	r3, [r2]
 324 000c 7047     		bx	lr
 325              	.L27:
 269:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   }
 326              		.loc 1 269 0
 327 000e 43F00803 		orr	r3, r3, #8
 328 0012 1360     		str	r3, [r2]
 329 0014 7047     		bx	lr
 330              	.L29:
 331 0016 00BF     		.align	2
 332              	.L28:
 333 0018 00000550 		.word	1342504960
 334              		.cfi_endproc
 335              	.LFE116:
 337              		.section	.text.DCMI_Cmd,"ax",%progbits
 338              		.align	2
 339              		.global	DCMI_Cmd
 340              		.thumb
 341              		.thumb_func
 343              	DCMI_Cmd:
 344              	.LFB117:
 275:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   }
 276:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** }
 277:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** /**
 278:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @}
 279:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   */
 280:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** 
 281:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** /** @defgroup DCMI_Group2 Image capture functions
 282:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****  *  @brief   Image capture functions
 283:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****  *
 284:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** @verbatim   
 285:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****  ===============================================================================
 286:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****                     ##### Image capture functions #####
 287:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****  ===============================================================================  
 288:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** 
 289:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** @endverbatim
 290:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @{
 291:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   */
 292:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   
 293:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** /**
 294:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @brief  Enables or disables the DCMI interface.
 295:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @param  NewState: new state of the DCMI interface. 
 296:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *          This parameter can be: ENABLE or DISABLE.
 297:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @retval None
 298:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   */
 299:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** void DCMI_Cmd(FunctionalState NewState)
 300:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** {
 345              		.loc 1 300 0
 346              		.cfi_startproc
 347              		@ args = 0, pretend = 0, frame = 0
 348              		@ frame_needed = 0, uses_anonymous_args = 0
 349              		@ link register save eliminated.
 350              	.LVL12:
 301:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   /* Check the parameters */
 302:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 303:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   
 304:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   if (NewState != DISABLE)
 305:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   {
 306:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****     /* Enable the DCMI by setting ENABLE bit */
 307:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****     DCMI->CR |= (uint32_t)DCMI_CR_ENABLE;
 351              		.loc 1 307 0
 352 0000 054A     		ldr	r2, .L34
 353 0002 1368     		ldr	r3, [r2]
 304:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   {
 354              		.loc 1 304 0
 355 0004 18B9     		cbnz	r0, .L33
 308:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   }
 309:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   else
 310:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   {
 311:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****     /* Disable the DCMI by clearing ENABLE bit */
 312:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****     DCMI->CR &= ~(uint32_t)DCMI_CR_ENABLE;
 356              		.loc 1 312 0
 357 0006 23F48043 		bic	r3, r3, #16384
 358 000a 1360     		str	r3, [r2]
 359 000c 7047     		bx	lr
 360              	.L33:
 307:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   }
 361              		.loc 1 307 0
 362 000e 43F48043 		orr	r3, r3, #16384
 363 0012 1360     		str	r3, [r2]
 364 0014 7047     		bx	lr
 365              	.L35:
 366 0016 00BF     		.align	2
 367              	.L34:
 368 0018 00000550 		.word	1342504960
 369              		.cfi_endproc
 370              	.LFE117:
 372              		.section	.text.DCMI_CaptureCmd,"ax",%progbits
 373              		.align	2
 374              		.global	DCMI_CaptureCmd
 375              		.thumb
 376              		.thumb_func
 378              	DCMI_CaptureCmd:
 379              	.LFB118:
 313:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   }
 314:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** }
 315:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** 
 316:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** /**
 317:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @brief  Enables or disables the DCMI Capture.
 318:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @param  NewState: new state of the DCMI capture. 
 319:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *          This parameter can be: ENABLE or DISABLE.
 320:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @retval None
 321:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   */
 322:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** void DCMI_CaptureCmd(FunctionalState NewState)
 323:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** {
 380              		.loc 1 323 0
 381              		.cfi_startproc
 382              		@ args = 0, pretend = 0, frame = 0
 383              		@ frame_needed = 0, uses_anonymous_args = 0
 384              		@ link register save eliminated.
 385              	.LVL13:
 324:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   /* Check the parameters */
 325:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 326:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****     
 327:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   if (NewState != DISABLE)
 328:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   {
 329:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****     /* Enable the DCMI Capture */
 330:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****     DCMI->CR |= (uint32_t)DCMI_CR_CAPTURE;
 386              		.loc 1 330 0
 387 0000 054A     		ldr	r2, .L40
 388 0002 1368     		ldr	r3, [r2]
 327:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   {
 389              		.loc 1 327 0
 390 0004 18B9     		cbnz	r0, .L39
 331:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   }
 332:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   else
 333:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   {
 334:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****     /* Disable the DCMI Capture */
 335:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****     DCMI->CR &= ~(uint32_t)DCMI_CR_CAPTURE;
 391              		.loc 1 335 0
 392 0006 23F00103 		bic	r3, r3, #1
 393 000a 1360     		str	r3, [r2]
 394 000c 7047     		bx	lr
 395              	.L39:
 330:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   }
 396              		.loc 1 330 0
 397 000e 43F00103 		orr	r3, r3, #1
 398 0012 1360     		str	r3, [r2]
 399 0014 7047     		bx	lr
 400              	.L41:
 401 0016 00BF     		.align	2
 402              	.L40:
 403 0018 00000550 		.word	1342504960
 404              		.cfi_endproc
 405              	.LFE118:
 407              		.section	.text.DCMI_ReadData,"ax",%progbits
 408              		.align	2
 409              		.global	DCMI_ReadData
 410              		.thumb
 411              		.thumb_func
 413              	DCMI_ReadData:
 414              	.LFB119:
 336:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   }
 337:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** }
 338:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** 
 339:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** /**
 340:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @brief  Reads the data stored in the DR register.
 341:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @param  None 
 342:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @retval Data register value
 343:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   */
 344:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** uint32_t DCMI_ReadData(void)
 345:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** {
 415              		.loc 1 345 0
 416              		.cfi_startproc
 417              		@ args = 0, pretend = 0, frame = 0
 418              		@ frame_needed = 0, uses_anonymous_args = 0
 419              		@ link register save eliminated.
 346:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   return DCMI->DR;
 420              		.loc 1 346 0
 421 0000 014B     		ldr	r3, .L43
 422 0002 986A     		ldr	r0, [r3, #40]
 347:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** }
 423              		.loc 1 347 0
 424 0004 7047     		bx	lr
 425              	.L44:
 426 0006 00BF     		.align	2
 427              	.L43:
 428 0008 00000550 		.word	1342504960
 429              		.cfi_endproc
 430              	.LFE119:
 432              		.section	.text.DCMI_ITConfig,"ax",%progbits
 433              		.align	2
 434              		.global	DCMI_ITConfig
 435              		.thumb
 436              		.thumb_func
 438              	DCMI_ITConfig:
 439              	.LFB120:
 348:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** /**
 349:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @}
 350:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   */
 351:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** 
 352:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** /** @defgroup DCMI_Group3 Interrupts and flags management functions
 353:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****  *  @brief   Interrupts and flags management functions
 354:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****  *
 355:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** @verbatim   
 356:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****  ===============================================================================
 357:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****              ##### Interrupts and flags management functions #####
 358:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****  ===============================================================================  
 359:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** 
 360:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** @endverbatim
 361:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @{
 362:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   */
 363:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** 
 364:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** /**
 365:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @brief  Enables or disables the DCMI interface interrupts.
 366:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @param  DCMI_IT: specifies the DCMI interrupt sources to be enabled or disabled. 
 367:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *          This parameter can be any combination of the following values:
 368:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *            @arg DCMI_IT_FRAME: Frame capture complete interrupt mask
 369:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *            @arg DCMI_IT_OVF: Overflow interrupt mask
 370:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *            @arg DCMI_IT_ERR: Synchronization error interrupt mask
 371:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *            @arg DCMI_IT_VSYNC: VSYNC interrupt mask
 372:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *            @arg DCMI_IT_LINE: Line interrupt mask
 373:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @param  NewState: new state of the specified DCMI interrupts.
 374:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *          This parameter can be: ENABLE or DISABLE.
 375:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @retval None
 376:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   */
 377:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** void DCMI_ITConfig(uint16_t DCMI_IT, FunctionalState NewState)
 378:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** {
 440              		.loc 1 378 0
 441              		.cfi_startproc
 442              		@ args = 0, pretend = 0, frame = 0
 443              		@ frame_needed = 0, uses_anonymous_args = 0
 444              		@ link register save eliminated.
 445              	.LVL14:
 379:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   /* Check the parameters */
 380:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   assert_param(IS_DCMI_CONFIG_IT(DCMI_IT));
 381:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 382:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   
 383:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   if (NewState != DISABLE)
 384:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   {
 385:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****     /* Enable the Interrupt sources */
 386:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****     DCMI->IER |= DCMI_IT;
 446              		.loc 1 386 0
 447 0000 054A     		ldr	r2, .L49
 383:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   {
 448              		.loc 1 383 0
 449 0002 29B9     		cbnz	r1, .L48
 387:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   }
 388:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   else
 389:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   {
 390:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****     /* Disable the Interrupt sources */
 391:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****     DCMI->IER &= (uint16_t)(~DCMI_IT);
 450              		.loc 1 391 0
 451 0004 D368     		ldr	r3, [r2, #12]
 452 0006 C043     		mvns	r0, r0
 453              	.LVL15:
 454 0008 80B2     		uxth	r0, r0
 455 000a 1840     		ands	r0, r0, r3
 456 000c D060     		str	r0, [r2, #12]
 457 000e 7047     		bx	lr
 458              	.LVL16:
 459              	.L48:
 386:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   }
 460              		.loc 1 386 0
 461 0010 D368     		ldr	r3, [r2, #12]
 462 0012 1843     		orrs	r0, r0, r3
 463              	.LVL17:
 464 0014 D060     		str	r0, [r2, #12]
 465 0016 7047     		bx	lr
 466              	.L50:
 467              		.align	2
 468              	.L49:
 469 0018 00000550 		.word	1342504960
 470              		.cfi_endproc
 471              	.LFE120:
 473              		.section	.text.DCMI_GetFlagStatus,"ax",%progbits
 474              		.align	2
 475              		.global	DCMI_GetFlagStatus
 476              		.thumb
 477              		.thumb_func
 479              	DCMI_GetFlagStatus:
 480              	.LFB121:
 392:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   }  
 393:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** }
 394:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** 
 395:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** /**
 396:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @brief  Checks whether the  DCMI interface flag is set or not.
 397:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @param  DCMI_FLAG: specifies the flag to check.
 398:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *          This parameter can be one of the following values:
 399:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *            @arg DCMI_FLAG_FRAMERI: Frame capture complete Raw flag mask
 400:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *            @arg DCMI_FLAG_OVFRI: Overflow Raw flag mask
 401:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *            @arg DCMI_FLAG_ERRRI: Synchronization error Raw flag mask
 402:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *            @arg DCMI_FLAG_VSYNCRI: VSYNC Raw flag mask
 403:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *            @arg DCMI_FLAG_LINERI: Line Raw flag mask
 404:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *            @arg DCMI_FLAG_FRAMEMI: Frame capture complete Masked flag mask
 405:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *            @arg DCMI_FLAG_OVFMI: Overflow Masked flag mask
 406:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *            @arg DCMI_FLAG_ERRMI: Synchronization error Masked flag mask
 407:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *            @arg DCMI_FLAG_VSYNCMI: VSYNC Masked flag mask
 408:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *            @arg DCMI_FLAG_LINEMI: Line Masked flag mask
 409:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *            @arg DCMI_FLAG_HSYNC: HSYNC flag mask
 410:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *            @arg DCMI_FLAG_VSYNC: VSYNC flag mask
 411:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *            @arg DCMI_FLAG_FNE: Fifo not empty flag mask
 412:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @retval The new state of DCMI_FLAG (SET or RESET).
 413:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   */
 414:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** FlagStatus DCMI_GetFlagStatus(uint16_t DCMI_FLAG)
 415:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** {
 481              		.loc 1 415 0
 482              		.cfi_startproc
 483              		@ args = 0, pretend = 0, frame = 0
 484              		@ frame_needed = 0, uses_anonymous_args = 0
 485              		@ link register save eliminated.
 486              	.LVL18:
 416:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   FlagStatus bitstatus = RESET;
 417:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   uint32_t dcmireg, tempreg = 0;
 418:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** 
 419:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   /* Check the parameters */
 420:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   assert_param(IS_DCMI_GET_FLAG(DCMI_FLAG));
 421:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   
 422:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   /* Get the DCMI register index */
 423:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   dcmireg = (((uint16_t)DCMI_FLAG) >> 12);
 424:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   
 425:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   if (dcmireg == 0x00) /* The FLAG is in RISR register */
 487              		.loc 1 425 0
 488 0000 030B     		lsrs	r3, r0, #12
 489              	.LVL19:
 490 0002 06D1     		bne	.L52
 426:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   {
 427:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****     tempreg= DCMI->RISR;
 491              		.loc 1 427 0
 492 0004 064B     		ldr	r3, .L55
 493              	.LVL20:
 494 0006 9B68     		ldr	r3, [r3, #8]
 495              	.LVL21:
 496              	.L53:
 428:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   }
 429:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   else if (dcmireg == 0x02) /* The FLAG is in SR register */
 430:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   {
 431:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****     tempreg = DCMI->SR;
 432:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   }
 433:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   else /* The FLAG is in MISR register */
 434:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   {
 435:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****     tempreg = DCMI->MISR;
 436:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   }
 437:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   
 438:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   if ((tempreg & DCMI_FLAG) != (uint16_t)RESET )
 497              		.loc 1 438 0
 498 0008 0342     		tst	r3, r0
 439:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   {
 440:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****     bitstatus = SET;
 441:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   }
 442:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   else
 443:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   {
 444:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****     bitstatus = RESET;
 445:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   }
 446:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   /* Return the DCMI_FLAG status */
 447:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   return  bitstatus;
 448:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** }
 499              		.loc 1 448 0
 500 000a 14BF     		ite	ne
 501 000c 0120     		movne	r0, #1
 502              	.LVL22:
 503 000e 0020     		moveq	r0, #0
 504 0010 7047     		bx	lr
 505              	.LVL23:
 506              	.L52:
 429:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   {
 507              		.loc 1 429 0
 508 0012 022B     		cmp	r3, #2
 431:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   }
 509              		.loc 1 431 0
 510 0014 024B     		ldr	r3, .L55
 511              	.LVL24:
 512 0016 0CBF     		ite	eq
 513 0018 5B68     		ldreq	r3, [r3, #4]
 514              	.LVL25:
 435:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   }
 515              		.loc 1 435 0
 516 001a 1B69     		ldrne	r3, [r3, #16]
 517              	.LVL26:
 518 001c F4E7     		b	.L53
 519              	.L56:
 520 001e 00BF     		.align	2
 521              	.L55:
 522 0020 00000550 		.word	1342504960
 523              		.cfi_endproc
 524              	.LFE121:
 526              		.section	.text.DCMI_ClearFlag,"ax",%progbits
 527              		.align	2
 528              		.global	DCMI_ClearFlag
 529              		.thumb
 530              		.thumb_func
 532              	DCMI_ClearFlag:
 533              	.LFB122:
 449:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** 
 450:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** /**
 451:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @brief  Clears the DCMI's pending flags.
 452:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @param  DCMI_FLAG: specifies the flag to clear.
 453:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *          This parameter can be any combination of the following values:
 454:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *            @arg DCMI_FLAG_FRAMERI: Frame capture complete Raw flag mask
 455:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *            @arg DCMI_FLAG_OVFRI: Overflow Raw flag mask
 456:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *            @arg DCMI_FLAG_ERRRI: Synchronization error Raw flag mask
 457:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *            @arg DCMI_FLAG_VSYNCRI: VSYNC Raw flag mask
 458:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *            @arg DCMI_FLAG_LINERI: Line Raw flag mask
 459:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @retval None
 460:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   */
 461:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** void DCMI_ClearFlag(uint16_t DCMI_FLAG)
 462:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** {
 534              		.loc 1 462 0
 535              		.cfi_startproc
 536              		@ args = 0, pretend = 0, frame = 0
 537              		@ frame_needed = 0, uses_anonymous_args = 0
 538              		@ link register save eliminated.
 539              	.LVL27:
 463:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   /* Check the parameters */
 464:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   assert_param(IS_DCMI_CLEAR_FLAG(DCMI_FLAG));
 465:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   
 466:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   /* Clear the flag by writing in the ICR register 1 in the corresponding 
 467:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   Flag position*/
 468:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   
 469:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   DCMI->ICR = DCMI_FLAG;
 540              		.loc 1 469 0
 541 0000 014B     		ldr	r3, .L58
 542 0002 5861     		str	r0, [r3, #20]
 543 0004 7047     		bx	lr
 544              	.L59:
 545 0006 00BF     		.align	2
 546              	.L58:
 547 0008 00000550 		.word	1342504960
 548              		.cfi_endproc
 549              	.LFE122:
 551              		.section	.text.DCMI_GetITStatus,"ax",%progbits
 552              		.align	2
 553              		.global	DCMI_GetITStatus
 554              		.thumb
 555              		.thumb_func
 557              	DCMI_GetITStatus:
 558              	.LFB123:
 470:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** }
 471:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** 
 472:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** /**
 473:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @brief  Checks whether the DCMI interrupt has occurred or not.
 474:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @param  DCMI_IT: specifies the DCMI interrupt source to check.
 475:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *          This parameter can be one of the following values:
 476:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *            @arg DCMI_IT_FRAME: Frame capture complete interrupt mask
 477:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *            @arg DCMI_IT_OVF: Overflow interrupt mask
 478:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *            @arg DCMI_IT_ERR: Synchronization error interrupt mask
 479:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *            @arg DCMI_IT_VSYNC: VSYNC interrupt mask
 480:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *            @arg DCMI_IT_LINE: Line interrupt mask
 481:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @retval The new state of DCMI_IT (SET or RESET).
 482:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   */
 483:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** ITStatus DCMI_GetITStatus(uint16_t DCMI_IT)
 484:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** {
 559              		.loc 1 484 0
 560              		.cfi_startproc
 561              		@ args = 0, pretend = 0, frame = 0
 562              		@ frame_needed = 0, uses_anonymous_args = 0
 563              		@ link register save eliminated.
 564              	.LVL28:
 485:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   ITStatus bitstatus = RESET;
 486:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   uint32_t itstatus = 0;
 487:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   
 488:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   /* Check the parameters */
 489:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   assert_param(IS_DCMI_GET_IT(DCMI_IT));
 490:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   
 491:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   itstatus = DCMI->MISR & DCMI_IT; /* Only masked interrupts are checked */
 565              		.loc 1 491 0
 566 0000 034B     		ldr	r3, .L61
 567 0002 1B69     		ldr	r3, [r3, #16]
 568              	.LVL29:
 492:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   
 493:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   if ((itstatus != (uint16_t)RESET))
 569              		.loc 1 493 0
 570 0004 1842     		tst	r0, r3
 494:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   {
 495:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****     bitstatus = SET;
 496:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   }
 497:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   else
 498:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   {
 499:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****     bitstatus = RESET;
 500:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   }
 501:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   return bitstatus;
 502:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** }
 571              		.loc 1 502 0
 572 0006 14BF     		ite	ne
 573 0008 0120     		movne	r0, #1
 574              	.LVL30:
 575 000a 0020     		moveq	r0, #0
 576 000c 7047     		bx	lr
 577              	.L62:
 578 000e 00BF     		.align	2
 579              	.L61:
 580 0010 00000550 		.word	1342504960
 581              		.cfi_endproc
 582              	.LFE123:
 584              		.section	.text.DCMI_ClearITPendingBit,"ax",%progbits
 585              		.align	2
 586              		.global	DCMI_ClearITPendingBit
 587              		.thumb
 588              		.thumb_func
 590              	DCMI_ClearITPendingBit:
 591              	.LFB124:
 503:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** 
 504:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** /**
 505:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @brief  Clears the DCMI's interrupt pending bits.
 506:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @param  DCMI_IT: specifies the DCMI interrupt pending bit to clear.
 507:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *          This parameter can be any combination of the following values:
 508:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *            @arg DCMI_IT_FRAME: Frame capture complete interrupt mask
 509:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *            @arg DCMI_IT_OVF: Overflow interrupt mask
 510:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *            @arg DCMI_IT_ERR: Synchronization error interrupt mask
 511:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *            @arg DCMI_IT_VSYNC: VSYNC interrupt mask
 512:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *            @arg DCMI_IT_LINE: Line interrupt mask
 513:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @retval None
 514:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   */
 515:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** void DCMI_ClearITPendingBit(uint16_t DCMI_IT)
 516:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** {
 592              		.loc 1 516 0
 593              		.cfi_startproc
 594              		@ args = 0, pretend = 0, frame = 0
 595              		@ frame_needed = 0, uses_anonymous_args = 0
 596              		@ link register save eliminated.
 597              	.LVL31:
 517:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   /* Clear the interrupt pending Bit by writing in the ICR register 1 in the 
 518:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   corresponding pending Bit position*/
 519:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   
 520:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   DCMI->ICR = DCMI_IT;
 598              		.loc 1 520 0
 599 0000 014B     		ldr	r3, .L64
 600 0002 5861     		str	r0, [r3, #20]
 601 0004 7047     		bx	lr
 602              	.L65:
 603 0006 00BF     		.align	2
 604              	.L64:
 605 0008 00000550 		.word	1342504960
 606              		.cfi_endproc
 607              	.LFE124:
 609              		.text
 610              	.Letext0:
 611              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\4.9 2014q4\\arm-none-eabi\\include\\mach
 612              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\4.9 2014q4\\arm-none-eabi\\include\\stdi
 613              		.file 4 "libs/Device/STM32F4xx/Include/stm32f4xx.h"
 614              		.file 5 "libs/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_dcmi.h"
 615              		.file 6 "libs/CMSIS/Include/core_cm4.h"
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_dcmi.c
C:\Users\Student\AppData\Local\Temp\cc3PxKpQ.s:20     .text.DCMI_DeInit:00000000 $t
C:\Users\Student\AppData\Local\Temp\cc3PxKpQ.s:25     .text.DCMI_DeInit:00000000 DCMI_DeInit
C:\Users\Student\AppData\Local\Temp\cc3PxKpQ.s:56     .text.DCMI_DeInit:00000018 $d
C:\Users\Student\AppData\Local\Temp\cc3PxKpQ.s:61     .text.DCMI_Init:00000000 $t
C:\Users\Student\AppData\Local\Temp\cc3PxKpQ.s:66     .text.DCMI_Init:00000000 DCMI_Init
C:\Users\Student\AppData\Local\Temp\cc3PxKpQ.s:129    .text.DCMI_Init:00000044 $d
C:\Users\Student\AppData\Local\Temp\cc3PxKpQ.s:134    .text.DCMI_StructInit:00000000 $t
C:\Users\Student\AppData\Local\Temp\cc3PxKpQ.s:139    .text.DCMI_StructInit:00000000 DCMI_StructInit
C:\Users\Student\AppData\Local\Temp\cc3PxKpQ.s:167    .text.DCMI_CROPConfig:00000000 $t
C:\Users\Student\AppData\Local\Temp\cc3PxKpQ.s:172    .text.DCMI_CROPConfig:00000000 DCMI_CROPConfig
C:\Users\Student\AppData\Local\Temp\cc3PxKpQ.s:213    .text.DCMI_CROPConfig:0000001c $d
C:\Users\Student\AppData\Local\Temp\cc3PxKpQ.s:218    .text.DCMI_CROPCmd:00000000 $t
C:\Users\Student\AppData\Local\Temp\cc3PxKpQ.s:223    .text.DCMI_CROPCmd:00000000 DCMI_CROPCmd
C:\Users\Student\AppData\Local\Temp\cc3PxKpQ.s:248    .text.DCMI_CROPCmd:00000018 $d
C:\Users\Student\AppData\Local\Temp\cc3PxKpQ.s:253    .text.DCMI_SetEmbeddedSynchroCodes:00000000 $t
C:\Users\Student\AppData\Local\Temp\cc3PxKpQ.s:258    .text.DCMI_SetEmbeddedSynchroCodes:00000000 DCMI_SetEmbeddedSynchroCodes
C:\Users\Student\AppData\Local\Temp\cc3PxKpQ.s:298    .text.DCMI_SetEmbeddedSynchroCodes:00000020 $d
C:\Users\Student\AppData\Local\Temp\cc3PxKpQ.s:303    .text.DCMI_JPEGCmd:00000000 $t
C:\Users\Student\AppData\Local\Temp\cc3PxKpQ.s:308    .text.DCMI_JPEGCmd:00000000 DCMI_JPEGCmd
C:\Users\Student\AppData\Local\Temp\cc3PxKpQ.s:333    .text.DCMI_JPEGCmd:00000018 $d
C:\Users\Student\AppData\Local\Temp\cc3PxKpQ.s:338    .text.DCMI_Cmd:00000000 $t
C:\Users\Student\AppData\Local\Temp\cc3PxKpQ.s:343    .text.DCMI_Cmd:00000000 DCMI_Cmd
C:\Users\Student\AppData\Local\Temp\cc3PxKpQ.s:368    .text.DCMI_Cmd:00000018 $d
C:\Users\Student\AppData\Local\Temp\cc3PxKpQ.s:373    .text.DCMI_CaptureCmd:00000000 $t
C:\Users\Student\AppData\Local\Temp\cc3PxKpQ.s:378    .text.DCMI_CaptureCmd:00000000 DCMI_CaptureCmd
C:\Users\Student\AppData\Local\Temp\cc3PxKpQ.s:403    .text.DCMI_CaptureCmd:00000018 $d
C:\Users\Student\AppData\Local\Temp\cc3PxKpQ.s:408    .text.DCMI_ReadData:00000000 $t
C:\Users\Student\AppData\Local\Temp\cc3PxKpQ.s:413    .text.DCMI_ReadData:00000000 DCMI_ReadData
C:\Users\Student\AppData\Local\Temp\cc3PxKpQ.s:428    .text.DCMI_ReadData:00000008 $d
C:\Users\Student\AppData\Local\Temp\cc3PxKpQ.s:433    .text.DCMI_ITConfig:00000000 $t
C:\Users\Student\AppData\Local\Temp\cc3PxKpQ.s:438    .text.DCMI_ITConfig:00000000 DCMI_ITConfig
C:\Users\Student\AppData\Local\Temp\cc3PxKpQ.s:469    .text.DCMI_ITConfig:00000018 $d
C:\Users\Student\AppData\Local\Temp\cc3PxKpQ.s:474    .text.DCMI_GetFlagStatus:00000000 $t
C:\Users\Student\AppData\Local\Temp\cc3PxKpQ.s:479    .text.DCMI_GetFlagStatus:00000000 DCMI_GetFlagStatus
C:\Users\Student\AppData\Local\Temp\cc3PxKpQ.s:522    .text.DCMI_GetFlagStatus:00000020 $d
C:\Users\Student\AppData\Local\Temp\cc3PxKpQ.s:527    .text.DCMI_ClearFlag:00000000 $t
C:\Users\Student\AppData\Local\Temp\cc3PxKpQ.s:532    .text.DCMI_ClearFlag:00000000 DCMI_ClearFlag
C:\Users\Student\AppData\Local\Temp\cc3PxKpQ.s:547    .text.DCMI_ClearFlag:00000008 $d
C:\Users\Student\AppData\Local\Temp\cc3PxKpQ.s:552    .text.DCMI_GetITStatus:00000000 $t
C:\Users\Student\AppData\Local\Temp\cc3PxKpQ.s:557    .text.DCMI_GetITStatus:00000000 DCMI_GetITStatus
C:\Users\Student\AppData\Local\Temp\cc3PxKpQ.s:580    .text.DCMI_GetITStatus:00000010 $d
C:\Users\Student\AppData\Local\Temp\cc3PxKpQ.s:585    .text.DCMI_ClearITPendingBit:00000000 $t
C:\Users\Student\AppData\Local\Temp\cc3PxKpQ.s:590    .text.DCMI_ClearITPendingBit:00000000 DCMI_ClearITPendingBit
C:\Users\Student\AppData\Local\Temp\cc3PxKpQ.s:605    .text.DCMI_ClearITPendingBit:00000008 $d
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
