   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 2
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"stm32f4xx_rtc.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.RTC_StructInit,"ax",%progbits
  20              		.align	2
  21              		.global	RTC_StructInit
  22              		.thumb
  23              		.thumb_func
  25              	RTC_StructInit:
  26              	.LFB112:
  27              		.file 1 "libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c"
   1:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
   2:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   ******************************************************************************
   3:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @file    stm32f4xx_rtc.c
   4:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @author  MCD Application Team
   5:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @version V1.3.0
   6:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @date    08-November-2013
   7:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief   This file provides firmware functions to manage the following 
   8:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          functionalities of the Real-Time Clock (RTC) peripheral:
   9:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *           + Initialization
  10:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *           + Calendar (Time and Date) configuration
  11:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *           + Alarms (Alarm A and Alarm B) configuration
  12:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *           + WakeUp Timer configuration
  13:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *           + Daylight Saving configuration
  14:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *           + Output pin Configuration
  15:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *           + Coarse digital Calibration configuration
  16:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *           + Smooth digital Calibration configuration
  17:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *           + TimeStamp configuration
  18:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *           + Tampers configuration
  19:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *           + Backup Data Registers configuration
  20:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *           + Shift control synchronisation    
  21:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *           + RTC Tamper and TimeStamp Pins Selection and Output Type Config configuration
  22:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *           + Interrupts and flags management
  23:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *
  24:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** @verbatim
  25:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
  26:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  ===================================================================
  27:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****               ##### Backup Domain Operating Condition #####
  28:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  ===================================================================
  29:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  [..] The real-time clock (RTC), the RTC backup registers, and the backup 
  30:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       SRAM (BKP SRAM) can be powered from the VBAT voltage when the main 
  31:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       VDD supply is powered off.
  32:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       To retain the content of the RTC backup registers, backup SRAM, and supply 
  33:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       the RTC when VDD is turned off, VBAT pin can be connected to an optional 
  34:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       standby voltage supplied by a battery or by another source.
  35:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
  36:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  [..] To allow the RTC to operate even when the main digital supply (VDD) is turned
  37:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       off, the VBAT pin powers the following blocks:
  38:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    (#) The RTC
  39:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    (#) The LSE oscillator
  40:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    (#) The backup SRAM when the low power backup regulator is enabled
  41:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    (#) PC13 to PC15 I/Os, plus PI8 I/O (when available)
  42:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
  43:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  [..] When the backup domain is supplied by VDD (analog switch connected to VDD),
  44:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       the following functions are available:
  45:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    (#) PC14 and PC15 can be used as either GPIO or LSE pins
  46:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    (#) PC13 can be used as a GPIO or as the RTC_AF1 pin
  47:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    (#) PI8 can be used as a GPIO or as the RTC_AF2 pin
  48:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
  49:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  [..] When the backup domain is supplied by VBAT (analog switch connected to VBAT 
  50:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       because VDD is not present), the following functions are available:
  51:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    (#) PC14 and PC15 can be used as LSE pins only
  52:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    (#) PC13 can be used as the RTC_AF1 pin 
  53:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    (#) PI8 can be used as the RTC_AF2 pin
  54:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
  55:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****             
  56:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****                    ##### Backup Domain Reset #####
  57:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  ===================================================================
  58:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  [..] The backup domain reset sets all RTC registers and the RCC_BDCR register 
  59:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       to their reset values. The BKPSRAM is not affected by this reset. The only
  60:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       way of resetting the BKPSRAM is through the Flash interface by requesting 
  61:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       a protection level change from 1 to 0.
  62:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  [..] A backup domain reset is generated when one of the following events occurs:
  63:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    (#) Software reset, triggered by setting the BDRST bit in the 
  64:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****        RCC Backup domain control register (RCC_BDCR). You can use the
  65:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****        RCC_BackupResetCmd().
  66:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    (#) VDD or VBAT power on, if both supplies have previously been powered off.
  67:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
  68:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
  69:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****                    ##### Backup Domain Access #####
  70:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  ===================================================================
  71:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  [..] After reset, the backup domain (RTC registers, RTC backup data 
  72:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       registers and backup SRAM) is protected against possible unwanted write 
  73:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       accesses. 
  74:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  [..] To enable access to the RTC Domain and RTC registers, proceed as follows:
  75:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    (+) Enable the Power Controller (PWR) APB1 interface clock using the
  76:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****        RCC_APB1PeriphClockCmd() function.
  77:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    (+) Enable access to RTC domain using the PWR_BackupAccessCmd() function.
  78:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    (+) Select the RTC clock source using the RCC_RTCCLKConfig() function.
  79:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    (+) Enable RTC Clock using the RCC_RTCCLKCmd() function.
  80:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
  81:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
  82:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****                   ##### How to use RTC Driver #####
  83:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  ===================================================================
  84:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  [..] 
  85:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    (+) Enable the RTC domain access (see description in the section above)
  86:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    (+) Configure the RTC Prescaler (Asynchronous and Synchronous) and RTC hour 
  87:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****        format using the RTC_Init() function.
  88:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
  89:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  *** Time and Date configuration ***
  90:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  ===================================
  91:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  [..] 
  92:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    (+) To configure the RTC Calendar (Time and Date) use the RTC_SetTime()
  93:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****        and RTC_SetDate() functions.
  94:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    (+) To read the RTC Calendar, use the RTC_GetTime() and RTC_GetDate() functions.
  95:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    (+) Use the RTC_DayLightSavingConfig() function to add or sub one
  96:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****        hour to the RTC Calendar.    
  97:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
  98:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  *** Alarm configuration ***
  99:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  ===========================
 100:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  [..]
 101:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    (+) To configure the RTC Alarm use the RTC_SetAlarm() function.
 102:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    (+) Enable the selected RTC Alarm using the RTC_AlarmCmd() function
 103:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    (+) To read the RTC Alarm, use the RTC_GetAlarm() function.
 104:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    (+) To read the RTC alarm SubSecond, use the RTC_GetAlarmSubSecond() function.
 105:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
 106:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  *** RTC Wakeup configuration ***
 107:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  ================================
 108:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  [..] 
 109:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    (+) Configure the RTC Wakeup Clock source use the RTC_WakeUpClockConfig()
 110:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****        function.
 111:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    (+) Configure the RTC WakeUp Counter using the RTC_SetWakeUpCounter() function  
 112:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    (+) Enable the RTC WakeUp using the RTC_WakeUpCmd() function  
 113:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    (+) To read the RTC WakeUp Counter register, use the RTC_GetWakeUpCounter() 
 114:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****        function.
 115:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
 116:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  *** Outputs configuration ***
 117:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  =============================
 118:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  [..] The RTC has 2 different outputs:
 119:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    (+) AFO_ALARM: this output is used to manage the RTC Alarm A, Alarm B
 120:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****        and WaKeUp signals. To output the selected RTC signal on RTC_AF1 pin, use the 
 121:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****        RTC_OutputConfig() function.                
 122:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    (+) AFO_CALIB: this output is 512Hz signal or 1Hz. To output the RTC Clock on 
 123:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****        RTC_AF1 pin, use the RTC_CalibOutputCmd() function.
 124:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
 125:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  *** Smooth digital Calibration configuration ***
 126:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  ================================================    
 127:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  [..]
 128:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    (+) Configure the RTC Original Digital Calibration Value and the corresponding
 129:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****        calibration cycle period (32s,16s and 8s) using the RTC_SmoothCalibConfig() 
 130:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****        function.
 131:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
 132:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  *** Coarse digital Calibration configuration ***
 133:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  ================================================
 134:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  [..]
 135:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    (+) Configure the RTC Coarse Calibration Value and the corresponding
 136:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****        sign using the RTC_CoarseCalibConfig() function.
 137:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    (+) Enable the RTC Coarse Calibration using the RTC_CoarseCalibCmd() function  
 138:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
 139:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  *** TimeStamp configuration ***
 140:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  ===============================
 141:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  [..]
 142:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    (+) Configure the RTC_AF1 trigger and enables the RTC TimeStamp using the RTC
 143:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       _TimeStampCmd() function.
 144:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    (+) To read the RTC TimeStamp Time and Date register, use the RTC_GetTimeStamp()
 145:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****        function.
 146:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    (+) To read the RTC TimeStamp SubSecond register, use the 
 147:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****        RTC_GetTimeStampSubSecond() function.
 148:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    (+) The TAMPER1 alternate function can be mapped either to RTC_AF1(PC13)
 149:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****        or RTC_AF2 (PI8) depending on the value of TAMP1INSEL bit in 
 150:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****        RTC_TAFCR register. You can use the  RTC_TamperPinSelection() function to
 151:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****        select the corresponding pin.     
 152:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
 153:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  *** Tamper configuration ***
 154:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  ============================
 155:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  [..]
 156:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    (+) Enable the RTC Tamper using the RTC_TamperCmd() function.
 157:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    (+) Configure the Tamper filter count using RTC_TamperFilterConfig()
 158:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****        function. 
 159:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    (+) Configure the RTC Tamper trigger Edge or Level according to the Tamper 
 160:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****        filter (if equal to 0 Edge else Level) value using the RTC_TamperConfig() 
 161:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****        function.
 162:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    (+) Configure the Tamper sampling frequency using RTC_TamperSamplingFreqConfig()
 163:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****        function.
 164:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    (+) Configure the Tamper precharge or discharge duration using 
 165:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****        RTC_TamperPinsPrechargeDuration() function.
 166:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    (+) Enable the Tamper Pull-UP using RTC_TamperPullUpDisableCmd() function.
 167:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    (+) Enable the Time stamp on Tamper detection event using  
 168:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****        TC_TSOnTamperDetecCmd() function.
 169:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    (+) The TIMESTAMP alternate function can be mapped to either RTC_AF1 
 170:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****        or RTC_AF2 depending on the value of the TSINSEL bit in the RTC_TAFCR 
 171:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****        register. You can use the  RTC_TimeStampPinSelection() function to select 
 172:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****        the corresponding pin. 
 173:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
 174:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  *** Backup Data Registers configuration ***
 175:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  ===========================================
 176:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  [..]
 177:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    (+) To write to the RTC Backup Data registers, use the RTC_WriteBackupRegister()
 178:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****        function.  
 179:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    (+) To read the RTC Backup Data registers, use the RTC_ReadBackupRegister()
 180:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****        function.
 181:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    
 182:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 183:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****                   ##### RTC and low power modes #####
 184:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  ===================================================================
 185:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  [..] The MCU can be woken up from a low power mode by an RTC alternate 
 186:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       function.
 187:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  [..] The RTC alternate functions are the RTC alarms (Alarm A and Alarm B), 
 188:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       RTC wakeup, RTC tamper event detection and RTC time stamp event detection.
 189:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       These RTC alternate functions can wake up the system from the Stop and 
 190:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       Standby lowpower modes.
 191:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  [..] The system can also wake up from low power modes without depending 
 192:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       on an external interrupt (Auto-wakeup mode), by using the RTC alarm 
 193:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       or the RTC wakeup events.
 194:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  [..] The RTC provides a programmable time base for waking up from the 
 195:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       Stop or Standby mode at regular intervals.
 196:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       Wakeup from STOP and Standby modes is possible only when the RTC clock source
 197:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       is LSE or LSI.
 198:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
 199:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 200:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****           ##### Selection of RTC_AF1 alternate functions #####
 201:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  ===================================================================
 202:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  [..] The RTC_AF1 pin (PC13) can be used for the following purposes:
 203:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    (+) AFO_ALARM output
 204:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    (+) AFO_CALIB output
 205:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    (+) AFI_TAMPER
 206:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    (+) AFI_TIMESTAMP
 207:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  
 208:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  [..]   
 209:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    +-----------------------------------------------------------------------------------------------
 210:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    |     Pin         |AFO_ALARM |AFO_CALIB |AFI_TAMPER |AFI_TIMESTAMP | TAMP1INSEL |   TSINSEL    |
 211:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    |  configuration  | ENABLED  | ENABLED  |  ENABLED  |   ENABLED    |TAMPER1 pin |TIMESTAMP pin |
 212:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    |  and function   |          |          |           |              | selection  |  selection   |
 213:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    |-----------------|----------|----------|-----------|--------------|------------|--------------|
 214:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    |   Alarm out     |          |          |           |              |    Don't   |     Don't    |
 215:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    |   output OD     |     1    |Don't care|Don't care | Don't care   |    care    |     care     |
 216:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    |-----------------|----------|----------|-----------|--------------|------------|--------------|
 217:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    |   Alarm out     |          |          |           |              |    Don't   |     Don't    |
 218:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    |   output PP     |     1    |Don't care|Don't care | Don't care   |    care    |     care     |
 219:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    |-----------------|----------|----------|-----------|--------------|------------|--------------|
 220:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    | Calibration out |          |          |           |              |    Don't   |     Don't    |
 221:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    |   output PP     |     0    |    1     |Don't care | Don't care   |    care    |     care     |
 222:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    |-----------------|----------|----------|-----------|--------------|------------|--------------|
 223:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    |  TAMPER input   |          |          |           |              |            |     Don't    |
 224:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    |   floating      |     0    |    0     |     1     |      0       |      0     |     care     |
 225:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    |-----------------|----------|----------|-----------|--------------|------------|--------------|
 226:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    |  TIMESTAMP and  |          |          |           |              |            |              |
 227:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    |  TAMPER input   |     0    |    0     |     1     |      1       |      0     |      0       |
 228:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    |   floating      |          |          |           |              |            |              |
 229:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    |-----------------|----------|----------|-----------|--------------|------------|--------------|
 230:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    | TIMESTAMP input |          |          |           |              |    Don't   |              |
 231:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    |    floating     |     0    |    0     |     0     |      1       |    care    |      0       |
 232:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    |-----------------|----------|----------|-----------|--------------|------------|--------------|
 233:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    |  Standard GPIO  |     0    |    0     |     0     |      0       | Don't care |  Don't care  |
 234:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    +-----------------------------------------------------------------------------------------------
 235:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 236:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****             
 237:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****         #####  Selection of RTC_AF2 alternate functions #####
 238:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  ===================================================================
 239:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  [..] The RTC_AF2 pin (PI8) can be used for the following purposes:
 240:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    (+) AFI_TAMPER
 241:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    (+) AFI_TIMESTAMP
 242:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  [..]
 243:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    +---------------------------------------------------------------------------------------+
 244:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    |     Pin         |AFI_TAMPER |AFI_TIMESTAMP | TAMP1INSEL |   TSINSEL    |ALARMOUTTYPE  |
 245:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    |  configuration  |  ENABLED  |   ENABLED    |TAMPER1 pin |TIMESTAMP pin |  AFO_ALARM   |
 246:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    |  and function   |           |              | selection  |  selection   |Configuration |
 247:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    |-----------------|-----------|--------------|------------|--------------|--------------|
 248:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    |  TAMPER input   |           |              |            |     Don't    |              |
 249:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    |   floating      |     1     |      0       |      1     |     care     |  Don't care  |
 250:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    |-----------------|-----------|--------------|------------|--------------|--------------|
 251:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    |  TIMESTAMP and  |           |              |            |              |              |
 252:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    |  TAMPER input   |     1     |      1       |      1     |      1       |  Don't care  |
 253:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    |   floating      |           |              |            |              |              |
 254:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    |-----------------|-----------|--------------|------------|--------------|--------------|
 255:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    | TIMESTAMP input |           |              |    Don't   |              |              |
 256:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    |    floating     |     0     |      1       |    care    |      1       |  Don't care  |
 257:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    |-----------------|-----------|--------------|------------|--------------|--------------|
 258:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    |  Standard GPIO  |     0     |      0       | Don't care |  Don't care  |  Don't care  |
 259:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    +---------------------------------------------------------------------------------------+   
 260:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  
 261:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****      
 262:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** @endverbatim
 263:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
 264:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   ******************************************************************************
 265:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @attention
 266:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *
 267:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * <h2><center>&copy; COPYRIGHT 2013 STMicroelectronics</center></h2>
 268:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *
 269:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
 270:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * You may not use this file except in compliance with the License.
 271:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * You may obtain a copy of the License at:
 272:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *
 273:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *        http://www.st.com/software_license_agreement_liberty_v2
 274:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *
 275:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * Unless required by applicable law or agreed to in writing, software 
 276:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * distributed under the License is distributed on an "AS IS" BASIS, 
 277:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 278:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * See the License for the specific language governing permissions and
 279:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * limitations under the License.
 280:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *
 281:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   ******************************************************************************
 282:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */ 
 283:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 284:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /* Includes ------------------------------------------------------------------*/
 285:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** #include "stm32f4xx_rtc.h"
 286:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 287:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
 288:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @{
 289:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
 290:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 291:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /** @defgroup RTC 
 292:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief RTC driver modules
 293:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @{
 294:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
 295:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 296:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /* Private typedef -----------------------------------------------------------*/
 297:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /* Private define ------------------------------------------------------------*/
 298:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 299:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /* Masks Definition */
 300:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** #define RTC_TR_RESERVED_MASK    ((uint32_t)0x007F7F7F)
 301:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** #define RTC_DR_RESERVED_MASK    ((uint32_t)0x00FFFF3F) 
 302:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** #define RTC_INIT_MASK           ((uint32_t)0xFFFFFFFF)  
 303:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** #define RTC_RSF_MASK            ((uint32_t)0xFFFFFF5F)
 304:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** #define RTC_FLAGS_MASK          ((uint32_t)(RTC_FLAG_TSOVF | RTC_FLAG_TSF | RTC_FLAG_WUTF | \
 305:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****                                             RTC_FLAG_ALRBF | RTC_FLAG_ALRAF | RTC_FLAG_INITF | \
 306:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****                                             RTC_FLAG_RSF | RTC_FLAG_INITS | RTC_FLAG_WUTWF | \
 307:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****                                             RTC_FLAG_ALRBWF | RTC_FLAG_ALRAWF | RTC_FLAG_TAMP1F | \
 308:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****                                             RTC_FLAG_RECALPF | RTC_FLAG_SHPF))
 309:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 310:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** #define INITMODE_TIMEOUT         ((uint32_t) 0x00010000)
 311:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** #define SYNCHRO_TIMEOUT          ((uint32_t) 0x00020000)
 312:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** #define RECALPF_TIMEOUT          ((uint32_t) 0x00020000)
 313:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** #define SHPF_TIMEOUT             ((uint32_t) 0x00001000)
 314:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 315:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /* Private macro -------------------------------------------------------------*/
 316:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /* Private variables ---------------------------------------------------------*/
 317:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /* Private function prototypes -----------------------------------------------*/
 318:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** static uint8_t RTC_ByteToBcd2(uint8_t Value);
 319:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** static uint8_t RTC_Bcd2ToByte(uint8_t Value);
 320:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 321:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /* Private functions ---------------------------------------------------------*/
 322:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 323:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /** @defgroup RTC_Private_Functions
 324:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @{
 325:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */ 
 326:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 327:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /** @defgroup RTC_Group1 Initialization and Configuration functions
 328:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  *  @brief   Initialization and Configuration functions 
 329:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  *
 330:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** @verbatim   
 331:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  ===============================================================================
 332:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****              ##### Initialization and Configuration functions #####
 333:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  ===============================================================================
 334:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  
 335:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  [..] This section provide functions allowing to initialize and configure the RTC
 336:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       Prescaler (Synchronous and Asynchronous), RTC Hour format, disable RTC registers
 337:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       Write protection, enter and exit the RTC initialization mode, RTC registers
 338:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       synchronization check and reference clock detection enable.
 339:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
 340:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    (#) The RTC Prescaler is programmed to generate the RTC 1Hz time base. It is
 341:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****        split into 2 programmable prescalers to minimize power consumption.
 342:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****        (++) A 7-bit asynchronous prescaler and A 13-bit synchronous prescaler.
 343:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****        (++) When both prescalers are used, it is recommended to configure the 
 344:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****             asynchronous prescaler to a high value to minimize consumption.
 345:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 346:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    (#) All RTC registers are Write protected. Writing to the RTC registers
 347:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****        is enabled by writing a key into the Write Protection register, RTC_WPR.
 348:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 349:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    (#) To Configure the RTC Calendar, user application should enter initialization
 350:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****        mode. In this mode, the calendar counter is stopped and its value can be 
 351:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****        updated. When the initialization sequence is complete, the calendar restarts 
 352:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****        counting after 4 RTCCLK cycles.
 353:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 354:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    (#) To read the calendar through the shadow registers after Calendar initialization,
 355:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****        calendar update or after wakeup from low power modes the software must first 
 356:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****        clear the RSF flag. The software must then wait until it is set again before 
 357:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****        reading the calendar, which means that the calendar registers have been 
 358:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****        correctly copied into the RTC_TR and RTC_DR shadow registers.
 359:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****        The RTC_WaitForSynchro() function implements the above software sequence 
 360:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****        (RSF clear and RSF check).
 361:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 362:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** @endverbatim
 363:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @{
 364:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
 365:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 366:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
 367:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Deinitializes the RTC registers to their default reset values.
 368:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @note   This function doesn't reset the RTC Clock source and RTC Backup Data
 369:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *         registers.       
 370:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  None
 371:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval An ErrorStatus enumeration value:
 372:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          - SUCCESS: RTC registers are deinitialized
 373:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          - ERROR: RTC registers are not deinitialized
 374:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
 375:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** ErrorStatus RTC_DeInit(void)
 376:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
 377:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   __IO uint32_t wutcounter = 0x00;
 378:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   uint32_t wutwfstatus = 0x00;
 379:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   ErrorStatus status = ERROR;
 380:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
 381:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Disable the write protection for RTC registers */
 382:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xCA;
 383:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 384:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 385:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Set Initialization mode */
 386:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   if (RTC_EnterInitMode() == ERROR)
 387:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 388:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     status = ERROR;
 389:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }  
 390:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   else
 391:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 392:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Reset TR, DR and CR registers */
 393:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC->TR = (uint32_t)0x00000000;
 394:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC->DR = (uint32_t)0x00002101;
 395:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Reset All CR bits except CR[2:0] */
 396:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC->CR &= (uint32_t)0x00000007;
 397:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
 398:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Wait till RTC WUTWF flag is set and if Time out is reached exit */
 399:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     do
 400:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
 401:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       wutwfstatus = RTC->ISR & RTC_ISR_WUTWF;
 402:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       wutcounter++;  
 403:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     } while((wutcounter != INITMODE_TIMEOUT) && (wutwfstatus == 0x00));
 404:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     
 405:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     if ((RTC->ISR & RTC_ISR_WUTWF) == RESET)
 406:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
 407:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       status = ERROR;
 408:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     }
 409:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     else
 410:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
 411:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       /* Reset all RTC CR register bits */
 412:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       RTC->CR &= (uint32_t)0x00000000;
 413:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       RTC->WUTR = (uint32_t)0x0000FFFF;
 414:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       RTC->PRER = (uint32_t)0x007F00FF;
 415:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       RTC->CALIBR = (uint32_t)0x00000000;
 416:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       RTC->ALRMAR = (uint32_t)0x00000000;        
 417:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       RTC->ALRMBR = (uint32_t)0x00000000;
 418:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       RTC->SHIFTR = (uint32_t)0x00000000;
 419:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       RTC->CALR = (uint32_t)0x00000000;
 420:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       RTC->ALRMASSR = (uint32_t)0x00000000;
 421:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       RTC->ALRMBSSR = (uint32_t)0x00000000;
 422:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       
 423:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       /* Reset ISR register and exit initialization mode */
 424:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       RTC->ISR = (uint32_t)0x00000000;
 425:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       
 426:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       /* Reset Tamper and alternate functions configuration register */
 427:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       RTC->TAFCR = 0x00000000;
 428:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
 429:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       if(RTC_WaitForSynchro() == ERROR)
 430:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       {
 431:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****         status = ERROR;
 432:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       }
 433:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       else
 434:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       {
 435:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****         status = SUCCESS;      
 436:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       }
 437:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     }
 438:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
 439:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
 440:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Enable the write protection for RTC registers */
 441:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xFF;  
 442:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
 443:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   return status;
 444:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 445:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 446:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
 447:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Initializes the RTC registers according to the specified parameters 
 448:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *         in RTC_InitStruct.
 449:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_InitStruct: pointer to a RTC_InitTypeDef structure that contains 
 450:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *         the configuration information for the RTC peripheral.
 451:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @note   The RTC Prescaler register is write protected and can be written in 
 452:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *         initialization mode only.  
 453:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval An ErrorStatus enumeration value:
 454:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          - SUCCESS: RTC registers are initialized
 455:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          - ERROR: RTC registers are not initialized  
 456:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
 457:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** ErrorStatus RTC_Init(RTC_InitTypeDef* RTC_InitStruct)
 458:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
 459:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   ErrorStatus status = ERROR;
 460:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
 461:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
 462:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_HOUR_FORMAT(RTC_InitStruct->RTC_HourFormat));
 463:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_ASYNCH_PREDIV(RTC_InitStruct->RTC_AsynchPrediv));
 464:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_SYNCH_PREDIV(RTC_InitStruct->RTC_SynchPrediv));
 465:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 466:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Disable the write protection for RTC registers */
 467:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xCA;
 468:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 469:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 470:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Set Initialization mode */
 471:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   if (RTC_EnterInitMode() == ERROR)
 472:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 473:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     status = ERROR;
 474:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   } 
 475:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   else
 476:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 477:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Clear RTC CR FMT Bit */
 478:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC->CR &= ((uint32_t)~(RTC_CR_FMT));
 479:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Set RTC_CR register */
 480:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC->CR |=  ((uint32_t)(RTC_InitStruct->RTC_HourFormat));
 481:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
 482:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Configure the RTC PRER */
 483:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC->PRER = (uint32_t)(RTC_InitStruct->RTC_SynchPrediv);
 484:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC->PRER |= (uint32_t)(RTC_InitStruct->RTC_AsynchPrediv << 16);
 485:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 486:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Exit Initialization mode */
 487:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC_ExitInitMode();
 488:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 489:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     status = SUCCESS;    
 490:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
 491:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Enable the write protection for RTC registers */
 492:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xFF; 
 493:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
 494:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   return status;
 495:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 496:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 497:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
 498:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Fills each RTC_InitStruct member with its default value.
 499:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_InitStruct: pointer to a RTC_InitTypeDef structure which will be 
 500:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *         initialized.
 501:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval None
 502:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
 503:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** void RTC_StructInit(RTC_InitTypeDef* RTC_InitStruct)
 504:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
  28              		.loc 1 504 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
 505:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Initialize the RTC_HourFormat member */
 506:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_InitStruct->RTC_HourFormat = RTC_HourFormat_24;
 507:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     
 508:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Initialize the RTC_AsynchPrediv member */
 509:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_InitStruct->RTC_AsynchPrediv = (uint32_t)0x7F;
 510:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 511:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Initialize the RTC_SynchPrediv member */
 512:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_InitStruct->RTC_SynchPrediv = (uint32_t)0xFF; 
  34              		.loc 1 512 0
  35 0000 0021     		movs	r1, #0
  36 0002 7F22     		movs	r2, #127
  37 0004 FF23     		movs	r3, #255
  38 0006 80E80E00 		stmia	r0, {r1, r2, r3}
  39 000a 7047     		bx	lr
  40              		.cfi_endproc
  41              	.LFE112:
  43              		.section	.text.RTC_WriteProtectionCmd,"ax",%progbits
  44              		.align	2
  45              		.global	RTC_WriteProtectionCmd
  46              		.thumb
  47              		.thumb_func
  49              	RTC_WriteProtectionCmd:
  50              	.LFB113:
 513:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 514:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 515:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
 516:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Enables or disables the RTC registers write protection.
 517:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @note   All the RTC registers are write protected except for RTC_ISR[13:8], 
 518:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *         RTC_TAFCR and RTC_BKPxR.
 519:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @note   Writing a wrong key reactivates the write protection.
 520:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @note   The protection mechanism is not affected by system reset.  
 521:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  NewState: new state of the write protection.
 522:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          This parameter can be: ENABLE or DISABLE.
 523:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval None
 524:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
 525:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** void RTC_WriteProtectionCmd(FunctionalState NewState)
 526:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
  51              		.loc 1 526 0
  52              		.cfi_startproc
  53              		@ args = 0, pretend = 0, frame = 0
  54              		@ frame_needed = 0, uses_anonymous_args = 0
  55              		@ link register save eliminated.
  56              	.LVL1:
 527:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
 528:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 529:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     
 530:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   if (NewState != DISABLE)
 531:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 532:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Enable the write protection for RTC registers */
 533:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC->WPR = 0xFF;   
  57              		.loc 1 533 0
  58 0000 044B     		ldr	r3, .L7
 530:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
  59              		.loc 1 530 0
  60 0002 20B9     		cbnz	r0, .L6
 534:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
 535:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   else
 536:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 537:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Disable the write protection for RTC registers */
 538:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC->WPR = 0xCA;
  61              		.loc 1 538 0
  62 0004 CA21     		movs	r1, #202
 539:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC->WPR = 0x53;    
  63              		.loc 1 539 0
  64 0006 5322     		movs	r2, #83
 538:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC->WPR = 0x53;    
  65              		.loc 1 538 0
  66 0008 5962     		str	r1, [r3, #36]
  67              		.loc 1 539 0
  68 000a 5A62     		str	r2, [r3, #36]
  69 000c 7047     		bx	lr
  70              	.L6:
 533:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
  71              		.loc 1 533 0
  72 000e FF22     		movs	r2, #255
  73 0010 5A62     		str	r2, [r3, #36]
  74 0012 7047     		bx	lr
  75              	.L8:
  76              		.align	2
  77              	.L7:
  78 0014 00280040 		.word	1073752064
  79              		.cfi_endproc
  80              	.LFE113:
  82              		.section	.text.RTC_EnterInitMode,"ax",%progbits
  83              		.align	2
  84              		.global	RTC_EnterInitMode
  85              		.thumb
  86              		.thumb_func
  88              	RTC_EnterInitMode:
  89              	.LFB114:
 540:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
 541:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 542:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 543:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
 544:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Enters the RTC Initialization mode.
 545:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @note   The RTC Initialization mode is write protected, use the 
 546:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *         RTC_WriteProtectionCmd(DISABLE) before calling this function.    
 547:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  None
 548:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval An ErrorStatus enumeration value:
 549:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          - SUCCESS: RTC is in Init mode
 550:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          - ERROR: RTC is not in Init mode  
 551:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
 552:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** ErrorStatus RTC_EnterInitMode(void)
 553:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
  90              		.loc 1 553 0
  91              		.cfi_startproc
  92              		@ args = 0, pretend = 0, frame = 8
  93              		@ frame_needed = 0, uses_anonymous_args = 0
  94              		@ link register save eliminated.
  95 0000 82B0     		sub	sp, sp, #8
  96              	.LCFI0:
  97              		.cfi_def_cfa_offset 8
 554:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   __IO uint32_t initcounter = 0x00;
  98              		.loc 1 554 0
  99 0002 0023     		movs	r3, #0
 555:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   ErrorStatus status = ERROR;
 556:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   uint32_t initstatus = 0x00;
 557:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****      
 558:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check if the Initialization mode is set */
 559:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   if ((RTC->ISR & RTC_ISR_INITF) == (uint32_t)RESET)
 100              		.loc 1 559 0
 101 0004 0E49     		ldr	r1, .L21
 554:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   __IO uint32_t initcounter = 0x00;
 102              		.loc 1 554 0
 103 0006 0193     		str	r3, [sp, #4]
 104              	.LVL2:
 105              		.loc 1 559 0
 106 0008 CB68     		ldr	r3, [r1, #12]
 107 000a 5B06     		lsls	r3, r3, #25
 108 000c 14D4     		bmi	.L13
 560:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 561:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Set the Initialization mode */
 562:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC->ISR = (uint32_t)RTC_INIT_MASK;
 109              		.loc 1 562 0
 110 000e 4FF0FF33 		mov	r3, #-1
 111 0012 CB60     		str	r3, [r1, #12]
 112 0014 00E0     		b	.L12
 113              	.LVL3:
 114              	.L20:
 563:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     
 564:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Wait till RTC is in INIT state and if Time out is reached exit */
 565:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     do
 566:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
 567:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       initstatus = RTC->ISR & RTC_ISR_INITF;
 568:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       initcounter++;  
 569:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     } while((initcounter != INITMODE_TIMEOUT) && (initstatus == 0x00));
 115              		.loc 1 569 0 discriminator 1
 116 0016 4AB9     		cbnz	r2, .L11
 117              	.LVL4:
 118              	.L12:
 567:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       initcounter++;  
 119              		.loc 1 567 0 discriminator 2
 120 0018 CA68     		ldr	r2, [r1, #12]
 568:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     } while((initcounter != INITMODE_TIMEOUT) && (initstatus == 0x00));
 121              		.loc 1 568 0 discriminator 2
 122 001a 019B     		ldr	r3, [sp, #4]
 123 001c 0133     		adds	r3, r3, #1
 124 001e 0193     		str	r3, [sp, #4]
 125              		.loc 1 569 0 discriminator 2
 126 0020 019B     		ldr	r3, [sp, #4]
 127 0022 B3F5803F 		cmp	r3, #65536
 567:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       initcounter++;  
 128              		.loc 1 567 0 discriminator 2
 129 0026 02F04002 		and	r2, r2, #64
 130              	.LVL5:
 131              		.loc 1 569 0 discriminator 2
 132 002a F4D1     		bne	.L20
 133              	.L11:
 134              	.LBB80:
 135              	.LBB81:
 570:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     
 571:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     if ((RTC->ISR & RTC_ISR_INITF) != RESET)
 136              		.loc 1 571 0
 137 002c 044B     		ldr	r3, .L21
 138 002e D868     		ldr	r0, [r3, #12]
 572:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
 573:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       status = SUCCESS;
 574:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     }
 575:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     else
 576:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
 577:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       status = ERROR;
 139              		.loc 1 577 0
 140 0030 C0F38010 		ubfx	r0, r0, #6, #1
 141              	.LVL6:
 142              	.LBE81:
 143              	.LBE80:
 578:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     }        
 579:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
 580:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   else
 581:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 582:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     status = SUCCESS;  
 583:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   } 
 584:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     
 585:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   return (status);  
 586:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 144              		.loc 1 586 0
 145 0034 02B0     		add	sp, sp, #8
 146              	.LCFI1:
 147              		.cfi_remember_state
 148              		.cfi_def_cfa_offset 0
 149              		@ sp needed
 150 0036 7047     		bx	lr
 151              	.LVL7:
 152              	.L13:
 153              	.LCFI2:
 154              		.cfi_restore_state
 582:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   } 
 155              		.loc 1 582 0
 156 0038 0120     		movs	r0, #1
 157              	.LVL8:
 158              		.loc 1 586 0
 159 003a 02B0     		add	sp, sp, #8
 160              	.LCFI3:
 161              		.cfi_def_cfa_offset 0
 162              		@ sp needed
 163 003c 7047     		bx	lr
 164              	.L22:
 165 003e 00BF     		.align	2
 166              	.L21:
 167 0040 00280040 		.word	1073752064
 168              		.cfi_endproc
 169              	.LFE114:
 171              		.section	.text.RTC_Init,"ax",%progbits
 172              		.align	2
 173              		.global	RTC_Init
 174              		.thumb
 175              		.thumb_func
 177              	RTC_Init:
 178              	.LFB111:
 458:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   ErrorStatus status = ERROR;
 179              		.loc 1 458 0
 180              		.cfi_startproc
 181              		@ args = 0, pretend = 0, frame = 0
 182              		@ frame_needed = 0, uses_anonymous_args = 0
 183              	.LVL9:
 184 0000 38B5     		push	{r3, r4, r5, lr}
 185              	.LCFI4:
 186              		.cfi_def_cfa_offset 16
 187              		.cfi_offset 3, -16
 188              		.cfi_offset 4, -12
 189              		.cfi_offset 5, -8
 190              		.cfi_offset 14, -4
 467:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 191              		.loc 1 467 0
 192 0002 104C     		ldr	r4, .L27
 193 0004 CA22     		movs	r2, #202
 468:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 194              		.loc 1 468 0
 195 0006 5323     		movs	r3, #83
 467:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 196              		.loc 1 467 0
 197 0008 6262     		str	r2, [r4, #36]
 468:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 198              		.loc 1 468 0
 199 000a 6362     		str	r3, [r4, #36]
 458:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   ErrorStatus status = ERROR;
 200              		.loc 1 458 0
 201 000c 0546     		mov	r5, r0
 471:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 202              		.loc 1 471 0
 203 000e FFF7FEFF 		bl	RTC_EnterInitMode
 204              	.LVL10:
 205 0012 98B1     		cbz	r0, .L24
 478:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Set RTC_CR register */
 206              		.loc 1 478 0
 207 0014 A368     		ldr	r3, [r4, #8]
 208 0016 23F04003 		bic	r3, r3, #64
 209 001a A360     		str	r3, [r4, #8]
 480:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
 210              		.loc 1 480 0
 211 001c A268     		ldr	r2, [r4, #8]
 212 001e 2B68     		ldr	r3, [r5]
 213 0020 1343     		orrs	r3, r3, r2
 214 0022 A360     		str	r3, [r4, #8]
 483:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC->PRER |= (uint32_t)(RTC_InitStruct->RTC_AsynchPrediv << 16);
 215              		.loc 1 483 0
 216 0024 AB68     		ldr	r3, [r5, #8]
 217 0026 2361     		str	r3, [r4, #16]
 484:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 218              		.loc 1 484 0
 219 0028 2369     		ldr	r3, [r4, #16]
 220 002a 6A68     		ldr	r2, [r5, #4]
 221 002c 43EA0243 		orr	r3, r3, r2, lsl #16
 222 0030 2361     		str	r3, [r4, #16]
 223              	.LBB82:
 224              	.LBB83:
 587:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 588:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
 589:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Exits the RTC Initialization mode.
 590:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @note   When the initialization sequence is complete, the calendar restarts 
 591:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *         counting after 4 RTCCLK cycles.  
 592:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @note   The RTC Initialization mode is write protected, use the 
 593:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *         RTC_WriteProtectionCmd(DISABLE) before calling this function.      
 594:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  None
 595:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval None
 596:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
 597:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** void RTC_ExitInitMode(void)
 598:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** { 
 599:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Exit Initialization mode */
 600:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->ISR &= (uint32_t)~RTC_ISR_INIT;  
 225              		.loc 1 600 0
 226 0032 E368     		ldr	r3, [r4, #12]
 227 0034 23F08003 		bic	r3, r3, #128
 228 0038 E360     		str	r3, [r4, #12]
 229              	.LVL11:
 230              	.LBE83:
 231              	.LBE82:
 489:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
 232              		.loc 1 489 0
 233 003a 0120     		movs	r0, #1
 234              	.LVL12:
 235              	.L24:
 492:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
 236              		.loc 1 492 0
 237 003c 014B     		ldr	r3, .L27
 238 003e FF22     		movs	r2, #255
 239 0040 5A62     		str	r2, [r3, #36]
 495:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 240              		.loc 1 495 0
 241 0042 38BD     		pop	{r3, r4, r5, pc}
 242              	.LVL13:
 243              	.L28:
 244              		.align	2
 245              	.L27:
 246 0044 00280040 		.word	1073752064
 247              		.cfi_endproc
 248              	.LFE111:
 250              		.section	.text.RTC_ExitInitMode,"ax",%progbits
 251              		.align	2
 252              		.global	RTC_ExitInitMode
 253              		.thumb
 254              		.thumb_func
 256              	RTC_ExitInitMode:
 257              	.LFB115:
 598:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Exit Initialization mode */
 258              		.loc 1 598 0
 259              		.cfi_startproc
 260              		@ args = 0, pretend = 0, frame = 0
 261              		@ frame_needed = 0, uses_anonymous_args = 0
 262              		@ link register save eliminated.
 263              		.loc 1 600 0
 264 0000 024A     		ldr	r2, .L30
 265 0002 D368     		ldr	r3, [r2, #12]
 266 0004 23F08003 		bic	r3, r3, #128
 267 0008 D360     		str	r3, [r2, #12]
 268 000a 7047     		bx	lr
 269              	.L31:
 270              		.align	2
 271              	.L30:
 272 000c 00280040 		.word	1073752064
 273              		.cfi_endproc
 274              	.LFE115:
 276              		.section	.text.RTC_WaitForSynchro,"ax",%progbits
 277              		.align	2
 278              		.global	RTC_WaitForSynchro
 279              		.thumb
 280              		.thumb_func
 282              	RTC_WaitForSynchro:
 283              	.LFB116:
 601:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 602:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 603:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
 604:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Waits until the RTC Time and Date registers (RTC_TR and RTC_DR) are 
 605:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *         synchronized with RTC APB clock.
 606:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @note   The RTC Resynchronization mode is write protected, use the 
 607:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *         RTC_WriteProtectionCmd(DISABLE) before calling this function. 
 608:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @note   To read the calendar through the shadow registers after Calendar 
 609:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *         initialization, calendar update or after wakeup from low power modes 
 610:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *         the software must first clear the RSF flag. 
 611:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *         The software must then wait until it is set again before reading 
 612:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *         the calendar, which means that the calendar registers have been 
 613:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *         correctly copied into the RTC_TR and RTC_DR shadow registers.   
 614:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  None
 615:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval An ErrorStatus enumeration value:
 616:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          - SUCCESS: RTC registers are synchronised
 617:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          - ERROR: RTC registers are not synchronised
 618:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
 619:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** ErrorStatus RTC_WaitForSynchro(void)
 620:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
 284              		.loc 1 620 0
 285              		.cfi_startproc
 286              		@ args = 0, pretend = 0, frame = 8
 287              		@ frame_needed = 0, uses_anonymous_args = 0
 288              		@ link register save eliminated.
 621:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   __IO uint32_t synchrocounter = 0;
 622:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   ErrorStatus status = ERROR;
 623:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   uint32_t synchrostatus = 0x00;
 624:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 625:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Disable the write protection for RTC registers */
 626:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xCA;
 289              		.loc 1 626 0
 290 0000 0F49     		ldr	r1, .L42
 620:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   __IO uint32_t synchrocounter = 0;
 291              		.loc 1 620 0
 292 0002 82B0     		sub	sp, sp, #8
 293              	.LCFI5:
 294              		.cfi_def_cfa_offset 8
 627:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 295              		.loc 1 627 0
 296 0004 5323     		movs	r3, #83
 621:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   __IO uint32_t synchrocounter = 0;
 297              		.loc 1 621 0
 298 0006 0020     		movs	r0, #0
 626:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 299              		.loc 1 626 0
 300 0008 CA22     		movs	r2, #202
 621:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   ErrorStatus status = ERROR;
 301              		.loc 1 621 0
 302 000a 0190     		str	r0, [sp, #4]
 303              	.LVL14:
 626:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 304              		.loc 1 626 0
 305 000c 4A62     		str	r2, [r1, #36]
 306              		.loc 1 627 0
 307 000e 4B62     		str	r3, [r1, #36]
 628:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     
 629:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Clear RSF flag */
 630:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->ISR &= (uint32_t)RTC_RSF_MASK;
 308              		.loc 1 630 0
 309 0010 CB68     		ldr	r3, [r1, #12]
 310 0012 23F0A003 		bic	r3, r3, #160
 311 0016 CB60     		str	r3, [r1, #12]
 312 0018 00E0     		b	.L34
 313              	.LVL15:
 314              	.L41:
 631:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     
 632:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Wait the registers to be synchronised */
 633:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   do
 634:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 635:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     synchrostatus = RTC->ISR & RTC_ISR_RSF;
 636:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     synchrocounter++;  
 637:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   } while((synchrocounter != SYNCHRO_TIMEOUT) && (synchrostatus == 0x00));
 315              		.loc 1 637 0 discriminator 1
 316 001a 4AB9     		cbnz	r2, .L33
 317              	.LVL16:
 318              	.L34:
 635:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     synchrocounter++;  
 319              		.loc 1 635 0 discriminator 2
 320 001c CA68     		ldr	r2, [r1, #12]
 636:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   } while((synchrocounter != SYNCHRO_TIMEOUT) && (synchrostatus == 0x00));
 321              		.loc 1 636 0 discriminator 2
 322 001e 019B     		ldr	r3, [sp, #4]
 323 0020 0133     		adds	r3, r3, #1
 324 0022 0193     		str	r3, [sp, #4]
 325              		.loc 1 637 0 discriminator 2
 326 0024 019B     		ldr	r3, [sp, #4]
 327 0026 B3F5003F 		cmp	r3, #131072
 635:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     synchrocounter++;  
 328              		.loc 1 635 0 discriminator 2
 329 002a 02F02002 		and	r2, r2, #32
 330              	.LVL17:
 331              		.loc 1 637 0 discriminator 2
 332 002e F4D1     		bne	.L41
 333              	.L33:
 638:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     
 639:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   if ((RTC->ISR & RTC_ISR_RSF) != RESET)
 334              		.loc 1 639 0
 335 0030 034B     		ldr	r3, .L42
 336 0032 D868     		ldr	r0, [r3, #12]
 337              	.LVL18:
 640:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 641:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     status = SUCCESS;
 642:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
 643:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   else
 644:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 645:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     status = ERROR;
 646:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }        
 647:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 648:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Enable the write protection for RTC registers */
 649:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xFF; 
 338              		.loc 1 649 0
 339 0034 FF22     		movs	r2, #255
 340              	.LVL19:
 650:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     
 651:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   return (status); 
 652:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 341              		.loc 1 652 0
 342 0036 C0F34010 		ubfx	r0, r0, #5, #1
 343              	.LVL20:
 649:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     
 344              		.loc 1 649 0
 345 003a 5A62     		str	r2, [r3, #36]
 346              		.loc 1 652 0
 347 003c 02B0     		add	sp, sp, #8
 348              	.LCFI6:
 349              		.cfi_def_cfa_offset 0
 350              		@ sp needed
 351 003e 7047     		bx	lr
 352              	.L43:
 353              		.align	2
 354              	.L42:
 355 0040 00280040 		.word	1073752064
 356              		.cfi_endproc
 357              	.LFE116:
 359              		.section	.text.RTC_DeInit,"ax",%progbits
 360              		.align	2
 361              		.global	RTC_DeInit
 362              		.thumb
 363              		.thumb_func
 365              	RTC_DeInit:
 366              	.LFB110:
 376:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   __IO uint32_t wutcounter = 0x00;
 367              		.loc 1 376 0
 368              		.cfi_startproc
 369              		@ args = 0, pretend = 0, frame = 8
 370              		@ frame_needed = 0, uses_anonymous_args = 0
 371 0000 30B5     		push	{r4, r5, lr}
 372              	.LCFI7:
 373              		.cfi_def_cfa_offset 12
 374              		.cfi_offset 4, -12
 375              		.cfi_offset 5, -8
 376              		.cfi_offset 14, -4
 382:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 377              		.loc 1 382 0
 378 0002 204C     		ldr	r4, .L61
 376:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   __IO uint32_t wutcounter = 0x00;
 379              		.loc 1 376 0
 380 0004 83B0     		sub	sp, sp, #12
 381              	.LCFI8:
 382              		.cfi_def_cfa_offset 24
 377:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   uint32_t wutwfstatus = 0x00;
 383              		.loc 1 377 0
 384 0006 0025     		movs	r5, #0
 382:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 385              		.loc 1 382 0
 386 0008 CA22     		movs	r2, #202
 383:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 387              		.loc 1 383 0
 388 000a 5323     		movs	r3, #83
 377:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   uint32_t wutwfstatus = 0x00;
 389              		.loc 1 377 0
 390 000c 0195     		str	r5, [sp, #4]
 391              	.LVL21:
 382:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 392              		.loc 1 382 0
 393 000e 6262     		str	r2, [r4, #36]
 383:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 394              		.loc 1 383 0
 395 0010 6362     		str	r3, [r4, #36]
 386:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 396              		.loc 1 386 0
 397 0012 FFF7FEFF 		bl	RTC_EnterInitMode
 398              	.LVL22:
 399 0016 C0B1     		cbz	r0, .L49
 394:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Reset All CR bits except CR[2:0] */
 400              		.loc 1 394 0
 401 0018 42F20113 		movw	r3, #8449
 393:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC->DR = (uint32_t)0x00002101;
 402              		.loc 1 393 0
 403 001c 2560     		str	r5, [r4]
 394:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Reset All CR bits except CR[2:0] */
 404              		.loc 1 394 0
 405 001e 6360     		str	r3, [r4, #4]
 396:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
 406              		.loc 1 396 0
 407 0020 A368     		ldr	r3, [r4, #8]
 408 0022 03F00703 		and	r3, r3, #7
 409 0026 A360     		str	r3, [r4, #8]
 401:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       wutcounter++;  
 410              		.loc 1 401 0
 411 0028 2146     		mov	r1, r4
 412 002a 00E0     		b	.L48
 413              	.LVL23:
 414              	.L59:
 403:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     
 415              		.loc 1 403 0 discriminator 1
 416 002c 4AB9     		cbnz	r2, .L47
 417              	.LVL24:
 418              	.L48:
 401:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       wutcounter++;  
 419              		.loc 1 401 0 discriminator 2
 420 002e CA68     		ldr	r2, [r1, #12]
 402:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     } while((wutcounter != INITMODE_TIMEOUT) && (wutwfstatus == 0x00));
 421              		.loc 1 402 0 discriminator 2
 422 0030 019B     		ldr	r3, [sp, #4]
 423 0032 0133     		adds	r3, r3, #1
 424 0034 0193     		str	r3, [sp, #4]
 403:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     
 425              		.loc 1 403 0 discriminator 2
 426 0036 019B     		ldr	r3, [sp, #4]
 427 0038 B3F5803F 		cmp	r3, #65536
 401:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       wutcounter++;  
 428              		.loc 1 401 0 discriminator 2
 429 003c 02F00402 		and	r2, r2, #4
 430              	.LVL25:
 403:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     
 431              		.loc 1 403 0 discriminator 2
 432 0040 F4D1     		bne	.L59
 433              	.L47:
 405:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
 434              		.loc 1 405 0
 435 0042 104B     		ldr	r3, .L61
 436 0044 DA68     		ldr	r2, [r3, #12]
 437              	.LVL26:
 438 0046 5207     		lsls	r2, r2, #29
 439 0048 05D4     		bmi	.L60
 440              	.L49:
 388:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }  
 441              		.loc 1 388 0
 442 004a 0020     		movs	r0, #0
 443              	.L46:
 444              	.LVL27:
 441:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
 445              		.loc 1 441 0
 446 004c 0D4B     		ldr	r3, .L61
 447 004e FF22     		movs	r2, #255
 448 0050 5A62     		str	r2, [r3, #36]
 444:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 449              		.loc 1 444 0
 450 0052 03B0     		add	sp, sp, #12
 451              	.LCFI9:
 452              		.cfi_remember_state
 453              		.cfi_def_cfa_offset 12
 454              		@ sp needed
 455 0054 30BD     		pop	{r4, r5, pc}
 456              	.LVL28:
 457              	.L60:
 458              	.LCFI10:
 459              		.cfi_restore_state
 412:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       RTC->WUTR = (uint32_t)0x0000FFFF;
 460              		.loc 1 412 0
 461 0056 0022     		movs	r2, #0
 413:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       RTC->PRER = (uint32_t)0x007F00FF;
 462              		.loc 1 413 0
 463 0058 4FF6FF70 		movw	r0, #65535
 414:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       RTC->CALIBR = (uint32_t)0x00000000;
 464              		.loc 1 414 0
 465 005c 0A49     		ldr	r1, .L61+4
 412:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       RTC->WUTR = (uint32_t)0x0000FFFF;
 466              		.loc 1 412 0
 467 005e 9C68     		ldr	r4, [r3, #8]
 468 0060 9A60     		str	r2, [r3, #8]
 413:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       RTC->PRER = (uint32_t)0x007F00FF;
 469              		.loc 1 413 0
 470 0062 5861     		str	r0, [r3, #20]
 414:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       RTC->CALIBR = (uint32_t)0x00000000;
 471              		.loc 1 414 0
 472 0064 1961     		str	r1, [r3, #16]
 415:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       RTC->ALRMAR = (uint32_t)0x00000000;        
 473              		.loc 1 415 0
 474 0066 9A61     		str	r2, [r3, #24]
 416:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       RTC->ALRMBR = (uint32_t)0x00000000;
 475              		.loc 1 416 0
 476 0068 DA61     		str	r2, [r3, #28]
 417:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       RTC->SHIFTR = (uint32_t)0x00000000;
 477              		.loc 1 417 0
 478 006a 1A62     		str	r2, [r3, #32]
 418:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       RTC->CALR = (uint32_t)0x00000000;
 479              		.loc 1 418 0
 480 006c DA62     		str	r2, [r3, #44]
 419:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       RTC->ALRMASSR = (uint32_t)0x00000000;
 481              		.loc 1 419 0
 482 006e DA63     		str	r2, [r3, #60]
 420:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       RTC->ALRMBSSR = (uint32_t)0x00000000;
 483              		.loc 1 420 0
 484 0070 5A64     		str	r2, [r3, #68]
 421:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       
 485              		.loc 1 421 0
 486 0072 9A64     		str	r2, [r3, #72]
 424:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       
 487              		.loc 1 424 0
 488 0074 DA60     		str	r2, [r3, #12]
 427:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
 489              		.loc 1 427 0
 490 0076 1A64     		str	r2, [r3, #64]
 429:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       {
 491              		.loc 1 429 0
 492 0078 FFF7FEFF 		bl	RTC_WaitForSynchro
 493              	.LVL29:
 388:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }  
 494              		.loc 1 388 0
 495 007c 0030     		adds	r0, r0, #0
 496 007e 18BF     		it	ne
 497 0080 0120     		movne	r0, #1
 498 0082 E3E7     		b	.L46
 499              	.L62:
 500              		.align	2
 501              	.L61:
 502 0084 00280040 		.word	1073752064
 503 0088 FF007F00 		.word	8323327
 504              		.cfi_endproc
 505              	.LFE110:
 507              		.section	.text.RTC_RefClockCmd,"ax",%progbits
 508              		.align	2
 509              		.global	RTC_RefClockCmd
 510              		.thumb
 511              		.thumb_func
 513              	RTC_RefClockCmd:
 514              	.LFB117:
 653:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 654:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
 655:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Enables or disables the RTC reference clock detection.
 656:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  NewState: new state of the RTC reference clock.
 657:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          This parameter can be: ENABLE or DISABLE.
 658:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval An ErrorStatus enumeration value:
 659:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          - SUCCESS: RTC reference clock detection is enabled
 660:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          - ERROR: RTC reference clock detection is disabled  
 661:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
 662:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** ErrorStatus RTC_RefClockCmd(FunctionalState NewState)
 663:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** { 
 515              		.loc 1 663 0
 516              		.cfi_startproc
 517              		@ args = 0, pretend = 0, frame = 0
 518              		@ frame_needed = 0, uses_anonymous_args = 0
 519              	.LVL30:
 520 0000 38B5     		push	{r3, r4, r5, lr}
 521              	.LCFI11:
 522              		.cfi_def_cfa_offset 16
 523              		.cfi_offset 3, -16
 524              		.cfi_offset 4, -12
 525              		.cfi_offset 5, -8
 526              		.cfi_offset 14, -4
 664:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   ErrorStatus status = ERROR;
 665:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
 666:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
 667:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 668:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
 669:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Disable the write protection for RTC registers */
 670:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xCA;
 527              		.loc 1 670 0
 528 0002 0E4C     		ldr	r4, .L70
 529 0004 CA22     		movs	r2, #202
 671:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 530              		.loc 1 671 0
 531 0006 5323     		movs	r3, #83
 670:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 532              		.loc 1 670 0
 533 0008 6262     		str	r2, [r4, #36]
 534              		.loc 1 671 0
 535 000a 6362     		str	r3, [r4, #36]
 663:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   ErrorStatus status = ERROR;
 536              		.loc 1 663 0
 537 000c 0546     		mov	r5, r0
 672:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     
 673:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Set Initialization mode */
 674:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   if (RTC_EnterInitMode() == ERROR)
 538              		.loc 1 674 0
 539 000e FFF7FEFF 		bl	RTC_EnterInitMode
 540              	.LVL31:
 541 0012 50B1     		cbz	r0, .L64
 675:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 676:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     status = ERROR;
 677:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   } 
 678:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   else
 679:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {  
 680:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     if (NewState != DISABLE)
 681:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
 682:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       /* Enable the RTC reference clock detection */
 683:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       RTC->CR |= RTC_CR_REFCKON;   
 542              		.loc 1 683 0
 543 0014 A368     		ldr	r3, [r4, #8]
 680:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
 544              		.loc 1 680 0
 545 0016 65B9     		cbnz	r5, .L69
 684:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     }
 685:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     else
 686:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
 687:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       /* Disable the RTC reference clock detection */
 688:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       RTC->CR &= ~RTC_CR_REFCKON;    
 546              		.loc 1 688 0
 547 0018 23F01003 		bic	r3, r3, #16
 548 001c A360     		str	r3, [r4, #8]
 549              	.L66:
 550              	.LBB84:
 551              	.LBB85:
 600:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 552              		.loc 1 600 0
 553 001e 074A     		ldr	r2, .L70
 554 0020 D368     		ldr	r3, [r2, #12]
 555 0022 23F08003 		bic	r3, r3, #128
 556 0026 D360     		str	r3, [r2, #12]
 557              	.LVL32:
 558              	.LBE85:
 559              	.LBE84:
 689:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     }
 690:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Exit Initialization mode */
 691:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC_ExitInitMode();
 692:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     
 693:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     status = SUCCESS;
 560              		.loc 1 693 0
 561 0028 0120     		movs	r0, #1
 562              	.LVL33:
 563              	.L64:
 694:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
 695:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
 696:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Enable the write protection for RTC registers */
 697:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xFF;  
 564              		.loc 1 697 0
 565 002a 044B     		ldr	r3, .L70
 566 002c FF22     		movs	r2, #255
 567 002e 5A62     		str	r2, [r3, #36]
 698:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
 699:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   return status; 
 700:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 568              		.loc 1 700 0
 569 0030 38BD     		pop	{r3, r4, r5, pc}
 570              	.LVL34:
 571              	.L69:
 683:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     }
 572              		.loc 1 683 0
 573 0032 43F01003 		orr	r3, r3, #16
 574 0036 A360     		str	r3, [r4, #8]
 575 0038 F1E7     		b	.L66
 576              	.L71:
 577 003a 00BF     		.align	2
 578              	.L70:
 579 003c 00280040 		.word	1073752064
 580              		.cfi_endproc
 581              	.LFE117:
 583              		.section	.text.RTC_BypassShadowCmd,"ax",%progbits
 584              		.align	2
 585              		.global	RTC_BypassShadowCmd
 586              		.thumb
 587              		.thumb_func
 589              	RTC_BypassShadowCmd:
 590              	.LFB118:
 701:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 702:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
 703:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Enables or Disables the Bypass Shadow feature.
 704:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @note   When the Bypass Shadow is enabled the calendar value are taken 
 705:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *         directly from the Calendar counter.
 706:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  NewState: new state of the Bypass Shadow feature.
 707:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *         This parameter can be: ENABLE or DISABLE.
 708:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval None
 709:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** */
 710:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** void RTC_BypassShadowCmd(FunctionalState NewState)
 711:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
 591              		.loc 1 711 0
 592              		.cfi_startproc
 593              		@ args = 0, pretend = 0, frame = 0
 594              		@ frame_needed = 0, uses_anonymous_args = 0
 595              		@ link register save eliminated.
 596              	.LVL35:
 712:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
 713:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 714:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 715:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Disable the write protection for RTC registers */
 716:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xCA;
 597              		.loc 1 716 0
 598 0000 0A4B     		ldr	r3, .L76
 717:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 599              		.loc 1 717 0
 600 0002 5322     		movs	r2, #83
 716:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 601              		.loc 1 716 0
 602 0004 CA21     		movs	r1, #202
 603 0006 5962     		str	r1, [r3, #36]
 604              		.loc 1 717 0
 605 0008 5A62     		str	r2, [r3, #36]
 718:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
 719:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   if (NewState != DISABLE)
 720:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 721:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Set the BYPSHAD bit */
 722:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC->CR |= (uint8_t)RTC_CR_BYPSHAD;
 606              		.loc 1 722 0
 607 000a 9A68     		ldr	r2, [r3, #8]
 719:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 608              		.loc 1 719 0
 609 000c 30B9     		cbnz	r0, .L75
 723:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
 724:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   else
 725:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 726:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Reset the BYPSHAD bit */
 727:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC->CR &= (uint8_t)~RTC_CR_BYPSHAD;
 610              		.loc 1 727 0
 611 000e 02F0DF02 		and	r2, r2, #223
 612 0012 9A60     		str	r2, [r3, #8]
 728:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
 729:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 730:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Enable the write protection for RTC registers */
 731:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xFF;
 613              		.loc 1 731 0
 614 0014 054B     		ldr	r3, .L76
 615 0016 FF22     		movs	r2, #255
 616 0018 5A62     		str	r2, [r3, #36]
 617 001a 7047     		bx	lr
 618              	.L75:
 722:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
 619              		.loc 1 722 0
 620 001c 42F02002 		orr	r2, r2, #32
 621 0020 9A60     		str	r2, [r3, #8]
 622              		.loc 1 731 0
 623 0022 024B     		ldr	r3, .L76
 624 0024 FF22     		movs	r2, #255
 625 0026 5A62     		str	r2, [r3, #36]
 626 0028 7047     		bx	lr
 627              	.L77:
 628 002a 00BF     		.align	2
 629              	.L76:
 630 002c 00280040 		.word	1073752064
 631              		.cfi_endproc
 632              	.LFE118:
 634              		.section	.text.RTC_SetTime,"ax",%progbits
 635              		.align	2
 636              		.global	RTC_SetTime
 637              		.thumb
 638              		.thumb_func
 640              	RTC_SetTime:
 641              	.LFB119:
 732:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 733:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 734:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
 735:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @}
 736:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
 737:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 738:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /** @defgroup RTC_Group2 Time and Date configuration functions
 739:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  *  @brief   Time and Date configuration functions 
 740:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  *
 741:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** @verbatim   
 742:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  ===============================================================================
 743:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****                  ##### Time and Date configuration functions #####
 744:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  ===============================================================================  
 745:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  
 746:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  [..] This section provide functions allowing to program and read the RTC Calendar
 747:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       (Time and Date).
 748:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 749:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** @endverbatim
 750:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @{
 751:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
 752:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 753:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
 754:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Set the RTC current time.
 755:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_Format: specifies the format of the entered parameters.
 756:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          This parameter can be  one of the following values:
 757:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_Format_BIN:  Binary data format 
 758:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_Format_BCD:  BCD data format
 759:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_TimeStruct: pointer to a RTC_TimeTypeDef structure that contains 
 760:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                        the time configuration information for the RTC.     
 761:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval An ErrorStatus enumeration value:
 762:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          - SUCCESS: RTC Time register is configured
 763:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          - ERROR: RTC Time register is not configured
 764:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
 765:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** ErrorStatus RTC_SetTime(uint32_t RTC_Format, RTC_TimeTypeDef* RTC_TimeStruct)
 766:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
 642              		.loc 1 766 0
 643              		.cfi_startproc
 644              		@ args = 0, pretend = 0, frame = 0
 645              		@ frame_needed = 0, uses_anonymous_args = 0
 646              	.LVL36:
 647 0000 70B5     		push	{r4, r5, r6, lr}
 648              	.LCFI12:
 649              		.cfi_def_cfa_offset 16
 650              		.cfi_offset 4, -16
 651              		.cfi_offset 5, -12
 652              		.cfi_offset 6, -8
 653              		.cfi_offset 14, -4
 767:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   uint32_t tmpreg = 0;
 768:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   ErrorStatus status = ERROR;
 769:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     
 770:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
 771:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_FORMAT(RTC_Format));
 772:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
 773:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   if (RTC_Format == RTC_Format_BIN)
 774:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 775:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     if ((RTC->CR & RTC_CR_FMT) != (uint32_t)RESET)
 654              		.loc 1 775 0
 655 0002 3A4B     		ldr	r3, .L103
 773:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 656              		.loc 1 773 0
 657 0004 0028     		cmp	r0, #0
 658 0006 37D1     		bne	.L79
 659              		.loc 1 775 0
 660 0008 9E68     		ldr	r6, [r3, #8]
 661 000a 16F04006 		ands	r6, r6, #64
 662 000e 5AD1     		bne	.L80
 776:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
 777:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       assert_param(IS_RTC_HOUR12(RTC_TimeStruct->RTC_Hours));
 778:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       assert_param(IS_RTC_H12(RTC_TimeStruct->RTC_H12));
 779:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     } 
 780:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     else
 781:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
 782:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       RTC_TimeStruct->RTC_H12 = 0x00;
 663              		.loc 1 782 0
 664 0010 CE70     		strb	r6, [r1, #3]
 665              	.L81:
 783:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       assert_param(IS_RTC_HOUR24(RTC_TimeStruct->RTC_Hours));
 784:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     }
 785:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     assert_param(IS_RTC_MINUTES(RTC_TimeStruct->RTC_Minutes));
 786:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     assert_param(IS_RTC_SECONDS(RTC_TimeStruct->RTC_Seconds));
 787:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
 788:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   else
 789:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 790:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     if ((RTC->CR & RTC_CR_FMT) != (uint32_t)RESET)
 791:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
 792:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       tmpreg = RTC_Bcd2ToByte(RTC_TimeStruct->RTC_Hours);
 793:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       assert_param(IS_RTC_HOUR12(tmpreg));
 794:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       assert_param(IS_RTC_H12(RTC_TimeStruct->RTC_H12)); 
 795:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     } 
 796:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     else
 797:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
 798:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       RTC_TimeStruct->RTC_H12 = 0x00;
 799:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       assert_param(IS_RTC_HOUR24(RTC_Bcd2ToByte(RTC_TimeStruct->RTC_Hours)));
 800:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     }
 801:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     assert_param(IS_RTC_MINUTES(RTC_Bcd2ToByte(RTC_TimeStruct->RTC_Minutes)));
 802:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     assert_param(IS_RTC_SECONDS(RTC_Bcd2ToByte(RTC_TimeStruct->RTC_Seconds)));
 803:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
 804:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
 805:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the input parameters format */
 806:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   if (RTC_Format != RTC_Format_BIN)
 807:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 808:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     tmpreg = (((uint32_t)(RTC_TimeStruct->RTC_Hours) << 16) | \
 809:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****              ((uint32_t)(RTC_TimeStruct->RTC_Minutes) << 8) | \
 810:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****              ((uint32_t)RTC_TimeStruct->RTC_Seconds) | \
 811:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****              ((uint32_t)(RTC_TimeStruct->RTC_H12) << 16)); 
 812:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }  
 813:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   else
 814:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 815:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     tmpreg = (uint32_t)(((uint32_t)RTC_ByteToBcd2(RTC_TimeStruct->RTC_Hours) << 16) | \
 666              		.loc 1 815 0
 667 0012 0878     		ldrb	r0, [r1]	@ zero_extendqisi2
 668              	.LVL37:
 669              	.LBB86:
 670              	.LBB87:
 816:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****                    ((uint32_t)RTC_ByteToBcd2(RTC_TimeStruct->RTC_Minutes) << 8) | \
 817:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****                    ((uint32_t)RTC_ByteToBcd2(RTC_TimeStruct->RTC_Seconds)) | \
 818:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****                    (((uint32_t)RTC_TimeStruct->RTC_H12) << 16));
 819:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }  
 820:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 821:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Disable the write protection for RTC registers */
 822:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xCA;
 823:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 824:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 825:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Set Initialization mode */
 826:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   if (RTC_EnterInitMode() == ERROR)
 827:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 828:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     status = ERROR;
 829:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   } 
 830:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   else
 831:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 832:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Set the RTC_TR register */
 833:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC->TR = (uint32_t)(tmpreg & RTC_TR_RESERVED_MASK);
 834:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 835:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Exit Initialization mode */
 836:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC_ExitInitMode(); 
 837:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 838:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* If  RTC_CR_BYPSHAD bit = 0, wait for synchro else this check is not needed */
 839:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     if ((RTC->CR & RTC_CR_BYPSHAD) == RESET)
 840:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
 841:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     if(RTC_WaitForSynchro() == ERROR)
 842:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
 843:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       status = ERROR;
 844:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     }
 845:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     else
 846:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
 847:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       status = SUCCESS;
 848:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     }
 849:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
 850:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     else
 851:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
 852:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       status = SUCCESS;
 853:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     }
 854:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
 855:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Enable the write protection for RTC registers */
 856:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xFF; 
 857:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     
 858:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   return status;
 859:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 860:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 861:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
 862:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Fills each RTC_TimeStruct member with its default value
 863:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *         (Time = 00h:00min:00sec).
 864:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_TimeStruct: pointer to a RTC_TimeTypeDef structure which will be 
 865:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *         initialized.
 866:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval None
 867:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
 868:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** void RTC_TimeStructInit(RTC_TimeTypeDef* RTC_TimeStruct)
 869:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
 870:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Time = 00h:00min:00sec */
 871:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_TimeStruct->RTC_H12 = RTC_H12_AM;
 872:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_TimeStruct->RTC_Hours = 0;
 873:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_TimeStruct->RTC_Minutes = 0;
 874:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_TimeStruct->RTC_Seconds = 0; 
 875:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 876:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 877:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
 878:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Get the RTC current Time.
 879:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_Format: specifies the format of the returned parameters.
 880:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          This parameter can be  one of the following values:
 881:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_Format_BIN:  Binary data format 
 882:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_Format_BCD:  BCD data format
 883:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_TimeStruct: pointer to a RTC_TimeTypeDef structure that will 
 884:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                        contain the returned current time configuration.     
 885:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval None
 886:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
 887:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** void RTC_GetTime(uint32_t RTC_Format, RTC_TimeTypeDef* RTC_TimeStruct)
 888:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
 889:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   uint32_t tmpreg = 0;
 890:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 891:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
 892:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_FORMAT(RTC_Format));
 893:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 894:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Get the RTC_TR register */
 895:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   tmpreg = (uint32_t)(RTC->TR & RTC_TR_RESERVED_MASK); 
 896:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
 897:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Fill the structure fields with the read parameters */
 898:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_TimeStruct->RTC_Hours = (uint8_t)((tmpreg & (RTC_TR_HT | RTC_TR_HU)) >> 16);
 899:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_TimeStruct->RTC_Minutes = (uint8_t)((tmpreg & (RTC_TR_MNT | RTC_TR_MNU)) >>8);
 900:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_TimeStruct->RTC_Seconds = (uint8_t)(tmpreg & (RTC_TR_ST | RTC_TR_SU));
 901:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_TimeStruct->RTC_H12 = (uint8_t)((tmpreg & (RTC_TR_PM)) >> 16);  
 902:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 903:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the input parameters format */
 904:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   if (RTC_Format == RTC_Format_BIN)
 905:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 906:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Convert the structure parameters to Binary format */
 907:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC_TimeStruct->RTC_Hours = (uint8_t)RTC_Bcd2ToByte(RTC_TimeStruct->RTC_Hours);
 908:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC_TimeStruct->RTC_Minutes = (uint8_t)RTC_Bcd2ToByte(RTC_TimeStruct->RTC_Minutes);
 909:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC_TimeStruct->RTC_Seconds = (uint8_t)RTC_Bcd2ToByte(RTC_TimeStruct->RTC_Seconds);   
 910:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
 911:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 912:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 913:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
 914:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Gets the RTC current Calendar Sub seconds value.
 915:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @note   This function freeze the Time and Date registers after reading the 
 916:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *         SSR register.
 917:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  None
 918:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval RTC current Calendar Sub seconds value.
 919:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
 920:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** uint32_t RTC_GetSubSecond(void)
 921:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
 922:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   uint32_t tmpreg = 0;
 923:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
 924:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Get sub seconds values from the correspondent registers*/
 925:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   tmpreg = (uint32_t)(RTC->SSR);
 926:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
 927:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Read DR register to unfroze calendar registers */
 928:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   (void) (RTC->DR);
 929:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
 930:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   return (tmpreg);
 931:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 932:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 933:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
 934:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Set the RTC current date.
 935:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_Format: specifies the format of the entered parameters.
 936:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          This parameter can be  one of the following values:
 937:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_Format_BIN:  Binary data format 
 938:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_Format_BCD:  BCD data format
 939:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_DateStruct: pointer to a RTC_DateTypeDef structure that contains 
 940:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                         the date configuration information for the RTC.
 941:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval An ErrorStatus enumeration value:
 942:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          - SUCCESS: RTC Date register is configured
 943:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          - ERROR: RTC Date register is not configured
 944:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
 945:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** ErrorStatus RTC_SetDate(uint32_t RTC_Format, RTC_DateTypeDef* RTC_DateStruct)
 946:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
 947:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   uint32_t tmpreg = 0;
 948:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   ErrorStatus status = ERROR;
 949:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
 950:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
 951:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_FORMAT(RTC_Format));
 952:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 953:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   if ((RTC_Format == RTC_Format_BIN) && ((RTC_DateStruct->RTC_Month & 0x10) == 0x10))
 954:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 955:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC_DateStruct->RTC_Month = (RTC_DateStruct->RTC_Month & (uint32_t)~(0x10)) + 0x0A;
 956:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }  
 957:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   if (RTC_Format == RTC_Format_BIN)
 958:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 959:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     assert_param(IS_RTC_YEAR(RTC_DateStruct->RTC_Year));
 960:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     assert_param(IS_RTC_MONTH(RTC_DateStruct->RTC_Month));
 961:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     assert_param(IS_RTC_DATE(RTC_DateStruct->RTC_Date));
 962:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
 963:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   else
 964:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 965:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     assert_param(IS_RTC_YEAR(RTC_Bcd2ToByte(RTC_DateStruct->RTC_Year)));
 966:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     tmpreg = RTC_Bcd2ToByte(RTC_DateStruct->RTC_Month);
 967:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     assert_param(IS_RTC_MONTH(tmpreg));
 968:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     tmpreg = RTC_Bcd2ToByte(RTC_DateStruct->RTC_Date);
 969:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     assert_param(IS_RTC_DATE(tmpreg));
 970:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
 971:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_WEEKDAY(RTC_DateStruct->RTC_WeekDay));
 972:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 973:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the input parameters format */
 974:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   if (RTC_Format != RTC_Format_BIN)
 975:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 976:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     tmpreg = ((((uint32_t)RTC_DateStruct->RTC_Year) << 16) | \
 977:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****               (((uint32_t)RTC_DateStruct->RTC_Month) << 8) | \
 978:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****               ((uint32_t)RTC_DateStruct->RTC_Date) | \
 979:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****               (((uint32_t)RTC_DateStruct->RTC_WeekDay) << 13)); 
 980:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }  
 981:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   else
 982:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 983:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     tmpreg = (((uint32_t)RTC_ByteToBcd2(RTC_DateStruct->RTC_Year) << 16) | \
 984:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(RTC_DateStruct->RTC_Month) << 8) | \
 985:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(RTC_DateStruct->RTC_Date)) | \
 986:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****               ((uint32_t)RTC_DateStruct->RTC_WeekDay << 13));
 987:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
 988:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 989:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Disable the write protection for RTC registers */
 990:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xCA;
 991:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 992:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 993:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Set Initialization mode */
 994:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   if (RTC_EnterInitMode() == ERROR)
 995:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 996:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     status = ERROR;
 997:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   } 
 998:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   else
 999:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
1000:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Set the RTC_DR register */
1001:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC->DR = (uint32_t)(tmpreg & RTC_DR_RESERVED_MASK);
1002:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1003:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Exit Initialization mode */
1004:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC_ExitInitMode(); 
1005:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1006:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* If  RTC_CR_BYPSHAD bit = 0, wait for synchro else this check is not needed */
1007:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     if ((RTC->CR & RTC_CR_BYPSHAD) == RESET)
1008:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
1009:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     if(RTC_WaitForSynchro() == ERROR)
1010:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
1011:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       status = ERROR;
1012:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     }
1013:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     else
1014:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
1015:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       status = SUCCESS;
1016:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     }
1017:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
1018:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     else
1019:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
1020:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       status = SUCCESS;
1021:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     }
1022:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
1023:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Enable the write protection for RTC registers */
1024:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xFF;   
1025:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
1026:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   return status;
1027:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
1028:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1029:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
1030:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Fills each RTC_DateStruct member with its default value
1031:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *         (Monday, January 01 xx00).
1032:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_DateStruct: pointer to a RTC_DateTypeDef structure which will be 
1033:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *         initialized.
1034:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval None
1035:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
1036:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** void RTC_DateStructInit(RTC_DateTypeDef* RTC_DateStruct)
1037:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
1038:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Monday, January 01 xx00 */
1039:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_DateStruct->RTC_WeekDay = RTC_Weekday_Monday;
1040:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_DateStruct->RTC_Date = 1;
1041:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_DateStruct->RTC_Month = RTC_Month_January;
1042:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_DateStruct->RTC_Year = 0;
1043:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
1044:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1045:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
1046:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Get the RTC current date. 
1047:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_Format: specifies the format of the returned parameters.
1048:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          This parameter can be one of the following values:
1049:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_Format_BIN: Binary data format 
1050:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_Format_BCD: BCD data format
1051:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param RTC_DateStruct: pointer to a RTC_DateTypeDef structure that will 
1052:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                        contain the returned current date configuration.     
1053:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval None
1054:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
1055:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** void RTC_GetDate(uint32_t RTC_Format, RTC_DateTypeDef* RTC_DateStruct)
1056:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
1057:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   uint32_t tmpreg = 0;
1058:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1059:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
1060:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_FORMAT(RTC_Format));
1061:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
1062:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Get the RTC_TR register */
1063:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   tmpreg = (uint32_t)(RTC->DR & RTC_DR_RESERVED_MASK); 
1064:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1065:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Fill the structure fields with the read parameters */
1066:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_DateStruct->RTC_Year = (uint8_t)((tmpreg & (RTC_DR_YT | RTC_DR_YU)) >> 16);
1067:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_DateStruct->RTC_Month = (uint8_t)((tmpreg & (RTC_DR_MT | RTC_DR_MU)) >> 8);
1068:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_DateStruct->RTC_Date = (uint8_t)(tmpreg & (RTC_DR_DT | RTC_DR_DU));
1069:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_DateStruct->RTC_WeekDay = (uint8_t)((tmpreg & (RTC_DR_WDU)) >> 13);
1070:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1071:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the input parameters format */
1072:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   if (RTC_Format == RTC_Format_BIN)
1073:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
1074:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Convert the structure parameters to Binary format */
1075:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC_DateStruct->RTC_Year = (uint8_t)RTC_Bcd2ToByte(RTC_DateStruct->RTC_Year);
1076:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC_DateStruct->RTC_Month = (uint8_t)RTC_Bcd2ToByte(RTC_DateStruct->RTC_Month);
1077:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC_DateStruct->RTC_Date = (uint8_t)RTC_Bcd2ToByte(RTC_DateStruct->RTC_Date);
1078:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
1079:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
1080:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1081:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
1082:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @}
1083:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
1084:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1085:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /** @defgroup RTC_Group3 Alarms configuration functions
1086:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  *  @brief   Alarms (Alarm A and Alarm B) configuration functions 
1087:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  *
1088:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** @verbatim   
1089:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  ===============================================================================
1090:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****          ##### Alarms A and B configuration functions #####
1091:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  ===============================================================================  
1092:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  
1093:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  [..] This section provide functions allowing to program and read the RTC Alarms.
1094:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1095:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** @endverbatim
1096:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @{
1097:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
1098:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1099:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
1100:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Set the specified RTC Alarm.
1101:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @note   The Alarm register can only be written when the corresponding Alarm
1102:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *         is disabled (Use the RTC_AlarmCmd(DISABLE)).    
1103:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_Format: specifies the format of the returned parameters.
1104:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          This parameter can be one of the following values:
1105:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_Format_BIN: Binary data format 
1106:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_Format_BCD: BCD data format
1107:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_Alarm: specifies the alarm to be configured.
1108:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          This parameter can be one of the following values:
1109:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_Alarm_A: to select Alarm A
1110:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_Alarm_B: to select Alarm B  
1111:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_AlarmStruct: pointer to a RTC_AlarmTypeDef structure that 
1112:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                          contains the alarm configuration parameters.     
1113:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval None
1114:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
1115:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** void RTC_SetAlarm(uint32_t RTC_Format, uint32_t RTC_Alarm, RTC_AlarmTypeDef* RTC_AlarmStruct)
1116:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
1117:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   uint32_t tmpreg = 0;
1118:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
1119:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
1120:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_FORMAT(RTC_Format));
1121:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_ALARM(RTC_Alarm));
1122:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_ALARM_MASK(RTC_AlarmStruct->RTC_AlarmMask));
1123:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_ALARM_DATE_WEEKDAY_SEL(RTC_AlarmStruct->RTC_AlarmDateWeekDaySel));
1124:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1125:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   if (RTC_Format == RTC_Format_BIN)
1126:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
1127:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     if ((RTC->CR & RTC_CR_FMT) != (uint32_t)RESET)
1128:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
1129:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       assert_param(IS_RTC_HOUR12(RTC_AlarmStruct->RTC_AlarmTime.RTC_Hours));
1130:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       assert_param(IS_RTC_H12(RTC_AlarmStruct->RTC_AlarmTime.RTC_H12));
1131:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     } 
1132:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     else
1133:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
1134:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       RTC_AlarmStruct->RTC_AlarmTime.RTC_H12 = 0x00;
1135:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       assert_param(IS_RTC_HOUR24(RTC_AlarmStruct->RTC_AlarmTime.RTC_Hours));
1136:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     }
1137:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     assert_param(IS_RTC_MINUTES(RTC_AlarmStruct->RTC_AlarmTime.RTC_Minutes));
1138:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     assert_param(IS_RTC_SECONDS(RTC_AlarmStruct->RTC_AlarmTime.RTC_Seconds));
1139:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     
1140:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     if(RTC_AlarmStruct->RTC_AlarmDateWeekDaySel == RTC_AlarmDateWeekDaySel_Date)
1141:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
1142:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       assert_param(IS_RTC_ALARM_DATE_WEEKDAY_DATE(RTC_AlarmStruct->RTC_AlarmDateWeekDay));
1143:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     }
1144:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     else
1145:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
1146:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       assert_param(IS_RTC_ALARM_DATE_WEEKDAY_WEEKDAY(RTC_AlarmStruct->RTC_AlarmDateWeekDay));
1147:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     }
1148:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
1149:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   else
1150:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
1151:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     if ((RTC->CR & RTC_CR_FMT) != (uint32_t)RESET)
1152:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
1153:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       tmpreg = RTC_Bcd2ToByte(RTC_AlarmStruct->RTC_AlarmTime.RTC_Hours);
1154:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       assert_param(IS_RTC_HOUR12(tmpreg));
1155:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       assert_param(IS_RTC_H12(RTC_AlarmStruct->RTC_AlarmTime.RTC_H12));
1156:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     } 
1157:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     else
1158:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
1159:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       RTC_AlarmStruct->RTC_AlarmTime.RTC_H12 = 0x00;
1160:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       assert_param(IS_RTC_HOUR24(RTC_Bcd2ToByte(RTC_AlarmStruct->RTC_AlarmTime.RTC_Hours)));
1161:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     }
1162:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     
1163:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     assert_param(IS_RTC_MINUTES(RTC_Bcd2ToByte(RTC_AlarmStruct->RTC_AlarmTime.RTC_Minutes)));
1164:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     assert_param(IS_RTC_SECONDS(RTC_Bcd2ToByte(RTC_AlarmStruct->RTC_AlarmTime.RTC_Seconds)));
1165:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     
1166:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     if(RTC_AlarmStruct->RTC_AlarmDateWeekDaySel == RTC_AlarmDateWeekDaySel_Date)
1167:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
1168:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       tmpreg = RTC_Bcd2ToByte(RTC_AlarmStruct->RTC_AlarmDateWeekDay);
1169:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       assert_param(IS_RTC_ALARM_DATE_WEEKDAY_DATE(tmpreg));    
1170:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     }
1171:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     else
1172:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
1173:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       tmpreg = RTC_Bcd2ToByte(RTC_AlarmStruct->RTC_AlarmDateWeekDay);
1174:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       assert_param(IS_RTC_ALARM_DATE_WEEKDAY_WEEKDAY(tmpreg));      
1175:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     }    
1176:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
1177:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1178:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the input parameters format */
1179:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   if (RTC_Format != RTC_Format_BIN)
1180:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
1181:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     tmpreg = (((uint32_t)(RTC_AlarmStruct->RTC_AlarmTime.RTC_Hours) << 16) | \
1182:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****               ((uint32_t)(RTC_AlarmStruct->RTC_AlarmTime.RTC_Minutes) << 8) | \
1183:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****               ((uint32_t)RTC_AlarmStruct->RTC_AlarmTime.RTC_Seconds) | \
1184:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****               ((uint32_t)(RTC_AlarmStruct->RTC_AlarmTime.RTC_H12) << 16) | \
1185:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****               ((uint32_t)(RTC_AlarmStruct->RTC_AlarmDateWeekDay) << 24) | \
1186:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****               ((uint32_t)RTC_AlarmStruct->RTC_AlarmDateWeekDaySel) | \
1187:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****               ((uint32_t)RTC_AlarmStruct->RTC_AlarmMask)); 
1188:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }  
1189:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   else
1190:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
1191:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     tmpreg = (((uint32_t)RTC_ByteToBcd2(RTC_AlarmStruct->RTC_AlarmTime.RTC_Hours) << 16) | \
1192:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(RTC_AlarmStruct->RTC_AlarmTime.RTC_Minutes) << 8) | \
1193:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(RTC_AlarmStruct->RTC_AlarmTime.RTC_Seconds)) | \
1194:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****               ((uint32_t)(RTC_AlarmStruct->RTC_AlarmTime.RTC_H12) << 16) | \
1195:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(RTC_AlarmStruct->RTC_AlarmDateWeekDay) << 24) | \
1196:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****               ((uint32_t)RTC_AlarmStruct->RTC_AlarmDateWeekDaySel) | \
1197:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****               ((uint32_t)RTC_AlarmStruct->RTC_AlarmMask)); 
1198:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   } 
1199:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1200:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Disable the write protection for RTC registers */
1201:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xCA;
1202:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
1203:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1204:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Configure the Alarm register */
1205:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   if (RTC_Alarm == RTC_Alarm_A)
1206:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
1207:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC->ALRMAR = (uint32_t)tmpreg;
1208:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
1209:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   else
1210:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
1211:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC->ALRMBR = (uint32_t)tmpreg;
1212:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
1213:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1214:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Enable the write protection for RTC registers */
1215:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xFF;   
1216:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
1217:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1218:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
1219:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Fills each RTC_AlarmStruct member with its default value
1220:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *         (Time = 00h:00mn:00sec / Date = 1st day of the month/Mask =
1221:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *         all fields are masked).
1222:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_AlarmStruct: pointer to a @ref RTC_AlarmTypeDef structure which
1223:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *         will be initialized.
1224:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval None
1225:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
1226:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** void RTC_AlarmStructInit(RTC_AlarmTypeDef* RTC_AlarmStruct)
1227:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
1228:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Alarm Time Settings : Time = 00h:00mn:00sec */
1229:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_AlarmStruct->RTC_AlarmTime.RTC_H12 = RTC_H12_AM;
1230:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_AlarmStruct->RTC_AlarmTime.RTC_Hours = 0;
1231:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_AlarmStruct->RTC_AlarmTime.RTC_Minutes = 0;
1232:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_AlarmStruct->RTC_AlarmTime.RTC_Seconds = 0;
1233:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1234:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Alarm Date Settings : Date = 1st day of the month */
1235:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_AlarmStruct->RTC_AlarmDateWeekDaySel = RTC_AlarmDateWeekDaySel_Date;
1236:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_AlarmStruct->RTC_AlarmDateWeekDay = 1;
1237:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1238:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Alarm Masks Settings : Mask =  all fields are not masked */
1239:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_AlarmStruct->RTC_AlarmMask = RTC_AlarmMask_None;
1240:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
1241:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1242:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
1243:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Get the RTC Alarm value and masks.
1244:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_Format: specifies the format of the output parameters.
1245:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          This parameter can be one of the following values:
1246:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_Format_BIN: Binary data format 
1247:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_Format_BCD: BCD data format
1248:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_Alarm: specifies the alarm to be read.
1249:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          This parameter can be one of the following values:
1250:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_Alarm_A: to select Alarm A
1251:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_Alarm_B: to select Alarm B  
1252:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_AlarmStruct: pointer to a RTC_AlarmTypeDef structure that will 
1253:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                          contains the output alarm configuration values.     
1254:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval None
1255:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
1256:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** void RTC_GetAlarm(uint32_t RTC_Format, uint32_t RTC_Alarm, RTC_AlarmTypeDef* RTC_AlarmStruct)
1257:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
1258:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   uint32_t tmpreg = 0;
1259:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1260:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
1261:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_FORMAT(RTC_Format));
1262:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_ALARM(RTC_Alarm)); 
1263:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1264:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Get the RTC_ALRMxR register */
1265:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   if (RTC_Alarm == RTC_Alarm_A)
1266:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
1267:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     tmpreg = (uint32_t)(RTC->ALRMAR);
1268:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
1269:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   else
1270:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
1271:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     tmpreg = (uint32_t)(RTC->ALRMBR);
1272:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
1273:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1274:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Fill the structure with the read parameters */
1275:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_AlarmStruct->RTC_AlarmTime.RTC_Hours = (uint32_t)((tmpreg & (RTC_ALRMAR_HT | \
1276:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****                                                      RTC_ALRMAR_HU)) >> 16);
1277:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_AlarmStruct->RTC_AlarmTime.RTC_Minutes = (uint32_t)((tmpreg & (RTC_ALRMAR_MNT | \
1278:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****                                                      RTC_ALRMAR_MNU)) >> 8);
1279:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_AlarmStruct->RTC_AlarmTime.RTC_Seconds = (uint32_t)(tmpreg & (RTC_ALRMAR_ST | \
1280:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****                                                      RTC_ALRMAR_SU));
1281:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_AlarmStruct->RTC_AlarmTime.RTC_H12 = (uint32_t)((tmpreg & RTC_ALRMAR_PM) >> 16);
1282:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_AlarmStruct->RTC_AlarmDateWeekDay = (uint32_t)((tmpreg & (RTC_ALRMAR_DT | RTC_ALRMAR_DU)) >> 
1283:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_AlarmStruct->RTC_AlarmDateWeekDaySel = (uint32_t)(tmpreg & RTC_ALRMAR_WDSEL);
1284:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_AlarmStruct->RTC_AlarmMask = (uint32_t)(tmpreg & RTC_AlarmMask_All);
1285:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1286:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   if (RTC_Format == RTC_Format_BIN)
1287:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
1288:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC_AlarmStruct->RTC_AlarmTime.RTC_Hours = RTC_Bcd2ToByte(RTC_AlarmStruct-> \
1289:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****                                                         RTC_AlarmTime.RTC_Hours);
1290:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC_AlarmStruct->RTC_AlarmTime.RTC_Minutes = RTC_Bcd2ToByte(RTC_AlarmStruct-> \
1291:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****                                                         RTC_AlarmTime.RTC_Minutes);
1292:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC_AlarmStruct->RTC_AlarmTime.RTC_Seconds = RTC_Bcd2ToByte(RTC_AlarmStruct-> \
1293:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****                                                         RTC_AlarmTime.RTC_Seconds);
1294:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC_AlarmStruct->RTC_AlarmDateWeekDay = RTC_Bcd2ToByte(RTC_AlarmStruct->RTC_AlarmDateWeekDay);
1295:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }  
1296:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
1297:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1298:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
1299:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Enables or disables the specified RTC Alarm.
1300:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_Alarm: specifies the alarm to be configured.
1301:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          This parameter can be any combination of the following values:
1302:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_Alarm_A: to select Alarm A
1303:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_Alarm_B: to select Alarm B  
1304:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  NewState: new state of the specified alarm.
1305:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          This parameter can be: ENABLE or DISABLE.
1306:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval An ErrorStatus enumeration value:
1307:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          - SUCCESS: RTC Alarm is enabled/disabled
1308:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          - ERROR: RTC Alarm is not enabled/disabled  
1309:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
1310:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** ErrorStatus RTC_AlarmCmd(uint32_t RTC_Alarm, FunctionalState NewState)
1311:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
1312:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   __IO uint32_t alarmcounter = 0x00;
1313:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   uint32_t alarmstatus = 0x00;
1314:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   ErrorStatus status = ERROR;
1315:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     
1316:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
1317:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_CMD_ALARM(RTC_Alarm));
1318:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1319:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1320:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Disable the write protection for RTC registers */
1321:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xCA;
1322:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
1323:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1324:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Configure the Alarm state */
1325:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   if (NewState != DISABLE)
1326:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
1327:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC->CR |= (uint32_t)RTC_Alarm;
1328:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1329:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     status = SUCCESS;    
1330:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
1331:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   else
1332:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   { 
1333:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Disable the Alarm in RTC_CR register */
1334:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC->CR &= (uint32_t)~RTC_Alarm;
1335:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    
1336:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Wait till RTC ALRxWF flag is set and if Time out is reached exit */
1337:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     do
1338:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
1339:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       alarmstatus = RTC->ISR & (RTC_Alarm >> 8);
1340:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       alarmcounter++;  
1341:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     } while((alarmcounter != INITMODE_TIMEOUT) && (alarmstatus == 0x00));
1342:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     
1343:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     if ((RTC->ISR & (RTC_Alarm >> 8)) == RESET)
1344:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
1345:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       status = ERROR;
1346:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     } 
1347:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     else
1348:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
1349:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       status = SUCCESS;
1350:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     }        
1351:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   } 
1352:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1353:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Enable the write protection for RTC registers */
1354:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xFF; 
1355:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
1356:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   return status;
1357:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
1358:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1359:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
1360:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Configure the RTC AlarmA/B Sub seconds value and mask.*
1361:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @note   This function is performed only when the Alarm is disabled. 
1362:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_Alarm: specifies the alarm to be configured.
1363:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *   This parameter can be one of the following values:
1364:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_Alarm_A: to select Alarm A
1365:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_Alarm_B: to select Alarm B
1366:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_AlarmSubSecondValue: specifies the Sub seconds value.
1367:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *   This parameter can be a value from 0 to 0x00007FFF.
1368:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_AlarmSubSecondMask:  specifies the Sub seconds Mask.
1369:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *   This parameter can be any combination of the following values:
1370:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_AlarmSubSecondMask_All    : All Alarm SS fields are masked.
1371:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                                          There is no comparison on sub seconds for Alarm.
1372:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_AlarmSubSecondMask_SS14_1 : SS[14:1] are don't care in Alarm comparison.
1373:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                                          Only SS[0] is compared
1374:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_AlarmSubSecondMask_SS14_2 : SS[14:2] are don't care in Alarm comparison.
1375:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                                          Only SS[1:0] are compared
1376:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_AlarmSubSecondMask_SS14_3 : SS[14:3] are don't care in Alarm comparison.
1377:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                                          Only SS[2:0] are compared
1378:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_AlarmSubSecondMask_SS14_4 : SS[14:4] are don't care in Alarm comparison.
1379:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                                          Only SS[3:0] are compared
1380:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_AlarmSubSecondMask_SS14_5 : SS[14:5] are don't care in Alarm comparison.
1381:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                                          Only SS[4:0] are compared
1382:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_AlarmSubSecondMask_SS14_6 : SS[14:6] are don't care in Alarm comparison.
1383:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                                          Only SS[5:0] are compared
1384:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_AlarmSubSecondMask_SS14_7 : SS[14:7] are don't care in Alarm comparison.
1385:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                                          Only SS[6:0] are compared
1386:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_AlarmSubSecondMask_SS14_8 : SS[14:8] are don't care in Alarm comparison.
1387:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                                          Only SS[7:0] are compared
1388:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_AlarmSubSecondMask_SS14_9 : SS[14:9] are don't care in Alarm comparison.
1389:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                                          Only SS[8:0] are compared
1390:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_AlarmSubSecondMask_SS14_10: SS[14:10] are don't care in Alarm comparison.
1391:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                                          Only SS[9:0] are compared
1392:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_AlarmSubSecondMask_SS14_11: SS[14:11] are don't care in Alarm comparison.
1393:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                                          Only SS[10:0] are compared
1394:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_AlarmSubSecondMask_SS14_12: SS[14:12] are don't care in Alarm comparison.
1395:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                                          Only SS[11:0] are compared
1396:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_AlarmSubSecondMask_SS14_13: SS[14:13] are don't care in Alarm comparison.
1397:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                                          Only SS[12:0] are compared
1398:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_AlarmSubSecondMask_SS14   : SS[14] is don't care in Alarm comparison.
1399:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                                          Only SS[13:0] are compared
1400:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_AlarmSubSecondMask_None   : SS[14:0] are compared and must match
1401:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                                          to activate alarm
1402:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval None
1403:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
1404:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** void RTC_AlarmSubSecondConfig(uint32_t RTC_Alarm, uint32_t RTC_AlarmSubSecondValue, uint32_t RTC_Al
1405:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
1406:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   uint32_t tmpreg = 0;
1407:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1408:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
1409:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_ALARM(RTC_Alarm));
1410:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_ALARM_SUB_SECOND_VALUE(RTC_AlarmSubSecondValue));
1411:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_ALARM_SUB_SECOND_MASK(RTC_AlarmSubSecondMask));
1412:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
1413:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Disable the write protection for RTC registers */
1414:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xCA;
1415:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
1416:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
1417:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Configure the Alarm A or Alarm B Sub Second registers */
1418:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   tmpreg = (uint32_t) (uint32_t)(RTC_AlarmSubSecondValue) | (uint32_t)(RTC_AlarmSubSecondMask);
1419:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
1420:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   if (RTC_Alarm == RTC_Alarm_A)
1421:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
1422:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Configure the Alarm A Sub Second register */
1423:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC->ALRMASSR = tmpreg;
1424:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
1425:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   else
1426:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
1427:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Configure the Alarm B Sub Second register */
1428:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC->ALRMBSSR = tmpreg;
1429:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
1430:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1431:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Enable the write protection for RTC registers */
1432:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xFF;
1433:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1434:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
1435:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1436:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
1437:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Gets the RTC Alarm Sub seconds value.
1438:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_Alarm: specifies the alarm to be read.
1439:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *   This parameter can be one of the following values:
1440:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_Alarm_A: to select Alarm A
1441:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_Alarm_B: to select Alarm B
1442:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  None
1443:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval RTC Alarm Sub seconds value.
1444:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
1445:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** uint32_t RTC_GetAlarmSubSecond(uint32_t RTC_Alarm)
1446:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
1447:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   uint32_t tmpreg = 0;
1448:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
1449:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Get the RTC_ALRMxR register */
1450:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   if (RTC_Alarm == RTC_Alarm_A)
1451:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
1452:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     tmpreg = (uint32_t)((RTC->ALRMASSR) & RTC_ALRMASSR_SS);
1453:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
1454:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   else
1455:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
1456:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     tmpreg = (uint32_t)((RTC->ALRMBSSR) & RTC_ALRMBSSR_SS);
1457:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   } 
1458:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
1459:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   return (tmpreg);
1460:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
1461:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1462:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
1463:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @}
1464:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
1465:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1466:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /** @defgroup RTC_Group4 WakeUp Timer configuration functions
1467:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  *  @brief   WakeUp Timer configuration functions 
1468:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  *
1469:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** @verbatim   
1470:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  ===============================================================================
1471:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****                  ##### WakeUp Timer configuration functions #####
1472:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  ===============================================================================  
1473:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1474:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  [..] This section provide functions allowing to program and read the RTC WakeUp.
1475:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1476:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** @endverbatim
1477:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @{
1478:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
1479:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1480:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
1481:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Configures the RTC Wakeup clock source.
1482:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @note   The WakeUp Clock source can only be changed when the RTC WakeUp
1483:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *         is disabled (Use the RTC_WakeUpCmd(DISABLE)).      
1484:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_WakeUpClock: Wakeup Clock source.
1485:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          This parameter can be one of the following values:
1486:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_WakeUpClock_RTCCLK_Div16: RTC Wakeup Counter Clock = RTCCLK/16
1487:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_WakeUpClock_RTCCLK_Div8: RTC Wakeup Counter Clock = RTCCLK/8
1488:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_WakeUpClock_RTCCLK_Div4: RTC Wakeup Counter Clock = RTCCLK/4
1489:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_WakeUpClock_RTCCLK_Div2: RTC Wakeup Counter Clock = RTCCLK/2
1490:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_WakeUpClock_CK_SPRE_16bits: RTC Wakeup Counter Clock = CK_SPRE
1491:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_WakeUpClock_CK_SPRE_17bits: RTC Wakeup Counter Clock = CK_SPRE
1492:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval None
1493:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
1494:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** void RTC_WakeUpClockConfig(uint32_t RTC_WakeUpClock)
1495:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
1496:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
1497:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_WAKEUP_CLOCK(RTC_WakeUpClock));
1498:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1499:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Disable the write protection for RTC registers */
1500:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xCA;
1501:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
1502:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1503:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Clear the Wakeup Timer clock source bits in CR register */
1504:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->CR &= (uint32_t)~RTC_CR_WUCKSEL;
1505:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1506:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Configure the clock source */
1507:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->CR |= (uint32_t)RTC_WakeUpClock;
1508:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
1509:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Enable the write protection for RTC registers */
1510:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xFF; 
1511:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
1512:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1513:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
1514:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Configures the RTC Wakeup counter.
1515:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @note   The RTC WakeUp counter can only be written when the RTC WakeUp
1516:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *         is disabled (Use the RTC_WakeUpCmd(DISABLE)).        
1517:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_WakeUpCounter: specifies the WakeUp counter.
1518:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          This parameter can be a value from 0x0000 to 0xFFFF. 
1519:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval None
1520:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
1521:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** void RTC_SetWakeUpCounter(uint32_t RTC_WakeUpCounter)
1522:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
1523:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
1524:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_WAKEUP_COUNTER(RTC_WakeUpCounter));
1525:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
1526:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Disable the write protection for RTC registers */
1527:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xCA;
1528:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
1529:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
1530:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Configure the Wakeup Timer counter */
1531:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WUTR = (uint32_t)RTC_WakeUpCounter;
1532:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
1533:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Enable the write protection for RTC registers */
1534:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xFF; 
1535:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
1536:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1537:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
1538:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Returns the RTC WakeUp timer counter value.
1539:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  None
1540:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval The RTC WakeUp Counter value.
1541:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
1542:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** uint32_t RTC_GetWakeUpCounter(void)
1543:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
1544:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Get the counter value */
1545:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   return ((uint32_t)(RTC->WUTR & RTC_WUTR_WUT));
1546:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
1547:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1548:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
1549:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Enables or Disables the RTC WakeUp timer.
1550:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  NewState: new state of the WakeUp timer.
1551:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          This parameter can be: ENABLE or DISABLE.
1552:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval None
1553:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
1554:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** ErrorStatus RTC_WakeUpCmd(FunctionalState NewState)
1555:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
1556:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   __IO uint32_t wutcounter = 0x00;
1557:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   uint32_t wutwfstatus = 0x00;
1558:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   ErrorStatus status = ERROR;
1559:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
1560:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
1561:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1562:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1563:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Disable the write protection for RTC registers */
1564:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xCA;
1565:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
1566:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1567:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   if (NewState != DISABLE)
1568:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
1569:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Enable the Wakeup Timer */
1570:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC->CR |= (uint32_t)RTC_CR_WUTE;
1571:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     status = SUCCESS;    
1572:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
1573:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   else
1574:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
1575:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Disable the Wakeup Timer */
1576:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC->CR &= (uint32_t)~RTC_CR_WUTE;
1577:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Wait till RTC WUTWF flag is set and if Time out is reached exit */
1578:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     do
1579:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
1580:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       wutwfstatus = RTC->ISR & RTC_ISR_WUTWF;
1581:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       wutcounter++;  
1582:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     } while((wutcounter != INITMODE_TIMEOUT) && (wutwfstatus == 0x00));
1583:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     
1584:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     if ((RTC->ISR & RTC_ISR_WUTWF) == RESET)
1585:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
1586:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       status = ERROR;
1587:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     }
1588:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     else
1589:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
1590:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       status = SUCCESS;
1591:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     }    
1592:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
1593:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1594:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Enable the write protection for RTC registers */
1595:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xFF; 
1596:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
1597:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   return status;
1598:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
1599:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1600:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
1601:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @}
1602:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
1603:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1604:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /** @defgroup RTC_Group5 Daylight Saving configuration functions
1605:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  *  @brief   Daylight Saving configuration functions 
1606:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  *
1607:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** @verbatim   
1608:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  ===============================================================================
1609:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****               ##### Daylight Saving configuration functions #####
1610:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  ===============================================================================  
1611:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1612:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  [..] This section provide functions allowing to configure the RTC DayLight Saving.
1613:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1614:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** @endverbatim
1615:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @{
1616:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
1617:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1618:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
1619:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Adds or substract one hour from the current time.
1620:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_DayLightSaveOperation: the value of hour adjustment. 
1621:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          This parameter can be one of the following values:
1622:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_DayLightSaving_SUB1H: Substract one hour (winter time)
1623:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_DayLightSaving_ADD1H: Add one hour (summer time)
1624:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_StoreOperation: Specifies the value to be written in the BCK bit 
1625:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                            in CR register to store the operation.
1626:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          This parameter can be one of the following values:
1627:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_StoreOperation_Reset: BCK Bit Reset
1628:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_StoreOperation_Set: BCK Bit Set
1629:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval None
1630:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
1631:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** void RTC_DayLightSavingConfig(uint32_t RTC_DayLightSaving, uint32_t RTC_StoreOperation)
1632:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
1633:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
1634:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_DAYLIGHT_SAVING(RTC_DayLightSaving));
1635:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_STORE_OPERATION(RTC_StoreOperation));
1636:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1637:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Disable the write protection for RTC registers */
1638:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xCA;
1639:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
1640:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1641:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Clear the bits to be configured */
1642:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->CR &= (uint32_t)~(RTC_CR_BCK);
1643:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1644:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Configure the RTC_CR register */
1645:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->CR |= (uint32_t)(RTC_DayLightSaving | RTC_StoreOperation);
1646:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1647:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Enable the write protection for RTC registers */
1648:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xFF; 
1649:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
1650:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1651:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
1652:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Returns the RTC Day Light Saving stored operation.
1653:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  None
1654:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval RTC Day Light Saving stored operation.
1655:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          - RTC_StoreOperation_Reset
1656:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          - RTC_StoreOperation_Set       
1657:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
1658:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** uint32_t RTC_GetStoreOperation(void)
1659:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
1660:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   return (RTC->CR & RTC_CR_BCK);
1661:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
1662:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1663:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
1664:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @}
1665:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
1666:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1667:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /** @defgroup RTC_Group6 Output pin Configuration function
1668:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  *  @brief   Output pin Configuration function 
1669:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  *
1670:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** @verbatim   
1671:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  ===============================================================================
1672:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****                  ##### Output pin Configuration function #####
1673:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  ===============================================================================  
1674:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1675:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  [..] This section provide functions allowing to configure the RTC Output source.
1676:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1677:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** @endverbatim
1678:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @{
1679:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
1680:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1681:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
1682:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Configures the RTC output source (AFO_ALARM).
1683:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_Output: Specifies which signal will be routed to the RTC output. 
1684:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          This parameter can be one of the following values:
1685:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_Output_Disable: No output selected
1686:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_Output_AlarmA: signal of AlarmA mapped to output
1687:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_Output_AlarmB: signal of AlarmB mapped to output
1688:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_Output_WakeUp: signal of WakeUp mapped to output
1689:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_OutputPolarity: Specifies the polarity of the output signal. 
1690:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          This parameter can be one of the following:
1691:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_OutputPolarity_High: The output pin is high when the 
1692:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                                 ALRAF/ALRBF/WUTF is high (depending on OSEL)
1693:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_OutputPolarity_Low: The output pin is low when the 
1694:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                                 ALRAF/ALRBF/WUTF is high (depending on OSEL)
1695:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval None
1696:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
1697:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** void RTC_OutputConfig(uint32_t RTC_Output, uint32_t RTC_OutputPolarity)
1698:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
1699:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
1700:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_OUTPUT(RTC_Output));
1701:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_OUTPUT_POL(RTC_OutputPolarity));
1702:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1703:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Disable the write protection for RTC registers */
1704:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xCA;
1705:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
1706:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1707:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Clear the bits to be configured */
1708:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->CR &= (uint32_t)~(RTC_CR_OSEL | RTC_CR_POL);
1709:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1710:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Configure the output selection and polarity */
1711:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->CR |= (uint32_t)(RTC_Output | RTC_OutputPolarity);
1712:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1713:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Enable the write protection for RTC registers */
1714:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xFF; 
1715:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
1716:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1717:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
1718:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @}
1719:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
1720:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1721:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /** @defgroup RTC_Group7 Digital Calibration configuration functions
1722:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  *  @brief   Coarse Calibration configuration functions 
1723:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  *
1724:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** @verbatim   
1725:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  ===============================================================================
1726:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****               ##### Digital Calibration configuration functions #####
1727:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  ===============================================================================  
1728:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1729:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** @endverbatim
1730:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @{
1731:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
1732:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1733:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
1734:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Configures the Coarse calibration parameters.
1735:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_CalibSign: specifies the sign of the coarse calibration value.
1736:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          This parameter can be  one of the following values:
1737:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_CalibSign_Positive: The value sign is positive 
1738:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_CalibSign_Negative: The value sign is negative
1739:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  Value: value of coarse calibration expressed in ppm (coded on 5 bits).
1740:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *    
1741:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @note   This Calibration value should be between 0 and 63 when using negative
1742:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *         sign with a 2-ppm step.
1743:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *           
1744:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @note   This Calibration value should be between 0 and 126 when using positive
1745:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *         sign with a 4-ppm step.
1746:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *           
1747:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval An ErrorStatus enumeration value:
1748:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          - SUCCESS: RTC Coarse calibration are initialized
1749:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          - ERROR: RTC Coarse calibration are not initialized     
1750:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
1751:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** ErrorStatus RTC_CoarseCalibConfig(uint32_t RTC_CalibSign, uint32_t Value)
1752:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
1753:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   ErrorStatus status = ERROR;
1754:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    
1755:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
1756:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_CALIB_SIGN(RTC_CalibSign));
1757:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_CALIB_VALUE(Value)); 
1758:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1759:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Disable the write protection for RTC registers */
1760:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xCA;
1761:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
1762:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1763:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Set Initialization mode */
1764:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   if (RTC_EnterInitMode() == ERROR)
1765:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
1766:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     status = ERROR;
1767:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   } 
1768:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   else
1769:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
1770:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Set the coarse calibration value */
1771:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC->CALIBR = (uint32_t)(RTC_CalibSign | Value);
1772:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Exit Initialization mode */
1773:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC_ExitInitMode();
1774:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     
1775:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     status = SUCCESS;
1776:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   } 
1777:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1778:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Enable the write protection for RTC registers */
1779:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xFF; 
1780:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
1781:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   return status;
1782:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
1783:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1784:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
1785:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Enables or disables the Coarse calibration process.
1786:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  NewState: new state of the Coarse calibration.
1787:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          This parameter can be: ENABLE or DISABLE.
1788:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval An ErrorStatus enumeration value:
1789:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          - SUCCESS: RTC Coarse calibration are enabled/disabled
1790:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          - ERROR: RTC Coarse calibration are not enabled/disabled    
1791:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
1792:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** ErrorStatus RTC_CoarseCalibCmd(FunctionalState NewState)
1793:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
1794:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   ErrorStatus status = ERROR;
1795:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
1796:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
1797:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1798:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1799:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Disable the write protection for RTC registers */
1800:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xCA;
1801:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
1802:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
1803:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Set Initialization mode */
1804:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   if (RTC_EnterInitMode() == ERROR)
1805:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
1806:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     status =  ERROR;
1807:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
1808:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   else
1809:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
1810:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     if (NewState != DISABLE)
1811:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
1812:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       /* Enable the Coarse Calibration */
1813:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       RTC->CR |= (uint32_t)RTC_CR_DCE;
1814:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     }
1815:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     else
1816:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     { 
1817:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       /* Disable the Coarse Calibration */
1818:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       RTC->CR &= (uint32_t)~RTC_CR_DCE;
1819:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     }
1820:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Exit Initialization mode */
1821:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC_ExitInitMode();
1822:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     
1823:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     status = SUCCESS;
1824:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   } 
1825:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
1826:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Enable the write protection for RTC registers */
1827:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xFF; 
1828:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
1829:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   return status;
1830:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
1831:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1832:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
1833:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Enables or disables the RTC clock to be output through the relative pin.
1834:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  NewState: new state of the digital calibration Output.
1835:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          This parameter can be: ENABLE or DISABLE.
1836:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval None
1837:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
1838:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** void RTC_CalibOutputCmd(FunctionalState NewState)
1839:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
1840:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
1841:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1842:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
1843:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Disable the write protection for RTC registers */
1844:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xCA;
1845:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
1846:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
1847:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   if (NewState != DISABLE)
1848:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
1849:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Enable the RTC clock output */
1850:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC->CR |= (uint32_t)RTC_CR_COE;
1851:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
1852:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   else
1853:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   { 
1854:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Disable the RTC clock output */
1855:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC->CR &= (uint32_t)~RTC_CR_COE;
1856:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
1857:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
1858:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Enable the write protection for RTC registers */
1859:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xFF; 
1860:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
1861:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1862:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
1863:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Configure the Calibration Pinout (RTC_CALIB) Selection (1Hz or 512Hz).
1864:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_CalibOutput : Select the Calibration output Selection .
1865:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *   This parameter can be one of the following values:
1866:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_CalibOutput_512Hz: A signal has a regular waveform at 512Hz. 
1867:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_CalibOutput_1Hz  : A signal has a regular waveform at 1Hz.
1868:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval None
1869:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** */
1870:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** void RTC_CalibOutputConfig(uint32_t RTC_CalibOutput)
1871:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
1872:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
1873:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_CALIB_OUTPUT(RTC_CalibOutput));
1874:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1875:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Disable the write protection for RTC registers */
1876:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xCA;
1877:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
1878:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
1879:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /*clear flags before configuration */
1880:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->CR &= (uint32_t)~(RTC_CR_COSEL);
1881:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1882:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Configure the RTC_CR register */
1883:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->CR |= (uint32_t)RTC_CalibOutput;
1884:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1885:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Enable the write protection for RTC registers */
1886:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xFF;
1887:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
1888:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1889:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
1890:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Configures the Smooth Calibration Settings.
1891:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_SmoothCalibPeriod : Select the Smooth Calibration Period.
1892:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *   This parameter can be can be one of the following values:
1893:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_SmoothCalibPeriod_32sec : The smooth calibration period is 32s.
1894:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_SmoothCalibPeriod_16sec : The smooth calibration period is 16s.
1895:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_SmoothCalibPeriod_8sec  : The smooth calibartion period is 8s.
1896:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_SmoothCalibPlusPulses : Select to Set or reset the CALP bit.
1897:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *   This parameter can be one of the following values:
1898:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_SmoothCalibPlusPulses_Set  : Add one RTCCLK puls every 2**11 pulses.
1899:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_SmoothCalibPlusPulses_Reset: No RTCCLK pulses are added.
1900:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_SmouthCalibMinusPulsesValue: Select the value of CALM[8:0] bits.
1901:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *   This parameter can be one any value from 0 to 0x000001FF.
1902:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval An ErrorStatus enumeration value:
1903:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          - SUCCESS: RTC Calib registers are configured
1904:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          - ERROR: RTC Calib registers are not configured
1905:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** */
1906:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** ErrorStatus RTC_SmoothCalibConfig(uint32_t RTC_SmoothCalibPeriod,
1907:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****                                   uint32_t RTC_SmoothCalibPlusPulses,
1908:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****                                   uint32_t RTC_SmouthCalibMinusPulsesValue)
1909:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
1910:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   ErrorStatus status = ERROR;
1911:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   uint32_t recalpfcount = 0;
1912:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1913:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
1914:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_SMOOTH_CALIB_PERIOD(RTC_SmoothCalibPeriod));
1915:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_SMOOTH_CALIB_PLUS(RTC_SmoothCalibPlusPulses));
1916:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_SMOOTH_CALIB_MINUS(RTC_SmouthCalibMinusPulsesValue));
1917:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1918:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Disable the write protection for RTC registers */
1919:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xCA;
1920:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
1921:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
1922:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* check if a calibration is pending*/
1923:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   if ((RTC->ISR & RTC_ISR_RECALPF) != RESET)
1924:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
1925:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* wait until the Calibration is completed*/
1926:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     while (((RTC->ISR & RTC_ISR_RECALPF) != RESET) && (recalpfcount != RECALPF_TIMEOUT))
1927:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
1928:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       recalpfcount++;
1929:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     }
1930:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
1931:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1932:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* check if the calibration pending is completed or if there is no calibration operation at all*/
1933:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   if ((RTC->ISR & RTC_ISR_RECALPF) == RESET)
1934:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
1935:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Configure the Smooth calibration settings */
1936:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC->CALR = (uint32_t)((uint32_t)RTC_SmoothCalibPeriod | (uint32_t)RTC_SmoothCalibPlusPulses | 
1937:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1938:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     status = SUCCESS;
1939:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
1940:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   else
1941:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
1942:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     status = ERROR;
1943:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
1944:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1945:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Enable the write protection for RTC registers */
1946:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xFF;
1947:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
1948:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   return (ErrorStatus)(status);
1949:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
1950:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1951:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
1952:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @}
1953:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
1954:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1955:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1956:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /** @defgroup RTC_Group8 TimeStamp configuration functions
1957:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  *  @brief   TimeStamp configuration functions 
1958:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  *
1959:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** @verbatim   
1960:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  ===============================================================================
1961:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****                  ##### TimeStamp configuration functions #####
1962:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  ===============================================================================  
1963:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1964:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** @endverbatim
1965:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @{
1966:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
1967:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1968:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
1969:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Enables or Disables the RTC TimeStamp functionality with the 
1970:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *         specified time stamp pin stimulating edge.
1971:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_TimeStampEdge: Specifies the pin edge on which the TimeStamp is 
1972:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *         activated.
1973:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          This parameter can be one of the following:
1974:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_TimeStampEdge_Rising: the Time stamp event occurs on the rising 
1975:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                                    edge of the related pin.
1976:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_TimeStampEdge_Falling: the Time stamp event occurs on the 
1977:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                                     falling edge of the related pin.
1978:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  NewState: new state of the TimeStamp.
1979:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          This parameter can be: ENABLE or DISABLE.
1980:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval None
1981:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
1982:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** void RTC_TimeStampCmd(uint32_t RTC_TimeStampEdge, FunctionalState NewState)
1983:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
1984:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   uint32_t tmpreg = 0;
1985:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1986:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
1987:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_TIMESTAMP_EDGE(RTC_TimeStampEdge));
1988:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1989:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1990:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Get the RTC_CR register and clear the bits to be configured */
1991:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   tmpreg = (uint32_t)(RTC->CR & (uint32_t)~(RTC_CR_TSEDGE | RTC_CR_TSE));
1992:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
1993:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Get the new configuration */
1994:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   if (NewState != DISABLE)
1995:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
1996:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     tmpreg |= (uint32_t)(RTC_TimeStampEdge | RTC_CR_TSE);
1997:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
1998:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   else
1999:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
2000:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     tmpreg |= (uint32_t)(RTC_TimeStampEdge);
2001:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
2002:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2003:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Disable the write protection for RTC registers */
2004:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xCA;
2005:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
2006:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2007:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Configure the Time Stamp TSEDGE and Enable bits */
2008:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->CR = (uint32_t)tmpreg;
2009:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2010:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Enable the write protection for RTC registers */
2011:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xFF; 
2012:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
2013:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2014:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
2015:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Get the RTC TimeStamp value and masks.
2016:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_Format: specifies the format of the output parameters.
2017:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          This parameter can be one of the following values:
2018:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_Format_BIN: Binary data format 
2019:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_Format_BCD: BCD data format
2020:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param RTC_StampTimeStruct: pointer to a RTC_TimeTypeDef structure that will 
2021:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                             contains the TimeStamp time values. 
2022:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param RTC_StampDateStruct: pointer to a RTC_DateTypeDef structure that will 
2023:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                             contains the TimeStamp date values.     
2024:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval None
2025:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
2026:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** void RTC_GetTimeStamp(uint32_t RTC_Format, RTC_TimeTypeDef* RTC_StampTimeStruct, 
2027:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****                                       RTC_DateTypeDef* RTC_StampDateStruct)
2028:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
2029:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   uint32_t tmptime = 0, tmpdate = 0;
2030:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2031:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
2032:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_FORMAT(RTC_Format));
2033:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2034:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Get the TimeStamp time and date registers values */
2035:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   tmptime = (uint32_t)(RTC->TSTR & RTC_TR_RESERVED_MASK);
2036:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   tmpdate = (uint32_t)(RTC->TSDR & RTC_DR_RESERVED_MASK);
2037:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2038:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Fill the Time structure fields with the read parameters */
2039:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_StampTimeStruct->RTC_Hours = (uint8_t)((tmptime & (RTC_TR_HT | RTC_TR_HU)) >> 16);
2040:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_StampTimeStruct->RTC_Minutes = (uint8_t)((tmptime & (RTC_TR_MNT | RTC_TR_MNU)) >> 8);
2041:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_StampTimeStruct->RTC_Seconds = (uint8_t)(tmptime & (RTC_TR_ST | RTC_TR_SU));
2042:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_StampTimeStruct->RTC_H12 = (uint8_t)((tmptime & (RTC_TR_PM)) >> 16);  
2043:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2044:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Fill the Date structure fields with the read parameters */
2045:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_StampDateStruct->RTC_Year = 0;
2046:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_StampDateStruct->RTC_Month = (uint8_t)((tmpdate & (RTC_DR_MT | RTC_DR_MU)) >> 8);
2047:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_StampDateStruct->RTC_Date = (uint8_t)(tmpdate & (RTC_DR_DT | RTC_DR_DU));
2048:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_StampDateStruct->RTC_WeekDay = (uint8_t)((tmpdate & (RTC_DR_WDU)) >> 13);
2049:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2050:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the input parameters format */
2051:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   if (RTC_Format == RTC_Format_BIN)
2052:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
2053:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Convert the Time structure parameters to Binary format */
2054:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC_StampTimeStruct->RTC_Hours = (uint8_t)RTC_Bcd2ToByte(RTC_StampTimeStruct->RTC_Hours);
2055:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC_StampTimeStruct->RTC_Minutes = (uint8_t)RTC_Bcd2ToByte(RTC_StampTimeStruct->RTC_Minutes);
2056:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC_StampTimeStruct->RTC_Seconds = (uint8_t)RTC_Bcd2ToByte(RTC_StampTimeStruct->RTC_Seconds);
2057:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2058:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Convert the Date structure parameters to Binary format */
2059:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC_StampDateStruct->RTC_Month = (uint8_t)RTC_Bcd2ToByte(RTC_StampDateStruct->RTC_Month);
2060:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC_StampDateStruct->RTC_Date = (uint8_t)RTC_Bcd2ToByte(RTC_StampDateStruct->RTC_Date);
2061:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC_StampDateStruct->RTC_WeekDay = (uint8_t)RTC_Bcd2ToByte(RTC_StampDateStruct->RTC_WeekDay);
2062:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
2063:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
2064:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2065:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
2066:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Get the RTC timestamp Sub seconds value.
2067:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  None
2068:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval RTC current timestamp Sub seconds value.
2069:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
2070:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** uint32_t RTC_GetTimeStampSubSecond(void)
2071:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
2072:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Get timestamp sub seconds values from the correspondent registers */
2073:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   return (uint32_t)(RTC->TSSSR);
2074:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
2075:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2076:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
2077:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @}
2078:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
2079:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2080:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /** @defgroup RTC_Group9 Tampers configuration functions
2081:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  *  @brief   Tampers configuration functions 
2082:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  *
2083:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** @verbatim   
2084:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  ===============================================================================
2085:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****                  ##### Tampers configuration functions #####
2086:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  ===============================================================================  
2087:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2088:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** @endverbatim
2089:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @{
2090:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
2091:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2092:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
2093:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Configures the select Tamper pin edge.
2094:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_Tamper: Selected tamper pin.
2095:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          This parameter can be RTC_Tamper_1.
2096:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_TamperTrigger: Specifies the trigger on the tamper pin that 
2097:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *         stimulates tamper event. 
2098:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *   This parameter can be one of the following values:
2099:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_TamperTrigger_RisingEdge: Rising Edge of the tamper pin causes tamper event.
2100:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_TamperTrigger_FallingEdge: Falling Edge of the tamper pin causes tamper event.
2101:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_TamperTrigger_LowLevel: Low Level of the tamper pin causes tamper event.
2102:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_TamperTrigger_HighLevel: High Level of the tamper pin causes tamper event.
2103:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval None
2104:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
2105:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** void RTC_TamperTriggerConfig(uint32_t RTC_Tamper, uint32_t RTC_TamperTrigger)
2106:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
2107:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
2108:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_TAMPER(RTC_Tamper)); 
2109:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_TAMPER_TRIGGER(RTC_TamperTrigger));
2110:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  
2111:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   if (RTC_TamperTrigger == RTC_TamperTrigger_RisingEdge)
2112:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {  
2113:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Configure the RTC_TAFCR register */
2114:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC->TAFCR &= (uint32_t)((uint32_t)~(RTC_Tamper << 1));	
2115:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
2116:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   else
2117:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   { 
2118:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Configure the RTC_TAFCR register */
2119:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC->TAFCR |= (uint32_t)(RTC_Tamper << 1);  
2120:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }  
2121:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
2122:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2123:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
2124:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Enables or Disables the Tamper detection.
2125:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_Tamper: Selected tamper pin.
2126:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          This parameter can be RTC_Tamper_1.
2127:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  NewState: new state of the tamper pin.
2128:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          This parameter can be: ENABLE or DISABLE.                   
2129:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval None
2130:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
2131:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** void RTC_TamperCmd(uint32_t RTC_Tamper, FunctionalState NewState)
2132:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
2133:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
2134:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_TAMPER(RTC_Tamper));  
2135:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2136:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
2137:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   if (NewState != DISABLE)
2138:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
2139:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Enable the selected Tamper pin */
2140:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC->TAFCR |= (uint32_t)RTC_Tamper;
2141:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
2142:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   else
2143:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
2144:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Disable the selected Tamper pin */
2145:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC->TAFCR &= (uint32_t)~RTC_Tamper;    
2146:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }  
2147:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
2148:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2149:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
2150:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Configures the Tampers Filter.
2151:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_TamperFilter: Specifies the tampers filter.
2152:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *   This parameter can be one of the following values:
2153:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_TamperFilter_Disable: Tamper filter is disabled.
2154:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_TamperFilter_2Sample: Tamper is activated after 2 consecutive 
2155:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                                    samples at the active level 
2156:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_TamperFilter_4Sample: Tamper is activated after 4 consecutive 
2157:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                                    samples at the active level
2158:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_TamperFilter_8Sample: Tamper is activated after 8 consecutive 
2159:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                                    samples at the active level 
2160:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval None
2161:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
2162:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** void RTC_TamperFilterConfig(uint32_t RTC_TamperFilter)
2163:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
2164:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
2165:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_TAMPER_FILTER(RTC_TamperFilter));
2166:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    
2167:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Clear TAMPFLT[1:0] bits in the RTC_TAFCR register */
2168:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->TAFCR &= (uint32_t)~(RTC_TAFCR_TAMPFLT);
2169:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2170:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Configure the RTC_TAFCR register */
2171:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->TAFCR |= (uint32_t)RTC_TamperFilter;
2172:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
2173:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2174:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
2175:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Configures the Tampers Sampling Frequency.
2176:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_TamperSamplingFreq: Specifies the tampers Sampling Frequency.
2177:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *   This parameter can be one of the following values:
2178:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_TamperSamplingFreq_RTCCLK_Div32768: Each of the tamper inputs are sampled
2179:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                                           with a frequency =  RTCCLK / 32768
2180:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_TamperSamplingFreq_RTCCLK_Div16384: Each of the tamper inputs are sampled
2181:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                                           with a frequency =  RTCCLK / 16384
2182:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_TamperSamplingFreq_RTCCLK_Div8192: Each of the tamper inputs are sampled
2183:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                                           with a frequency =  RTCCLK / 8192
2184:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_TamperSamplingFreq_RTCCLK_Div4096: Each of the tamper inputs are sampled
2185:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                                           with a frequency =  RTCCLK / 4096
2186:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_TamperSamplingFreq_RTCCLK_Div2048: Each of the tamper inputs are sampled
2187:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                                           with a frequency =  RTCCLK / 2048
2188:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_TamperSamplingFreq_RTCCLK_Div1024: Each of the tamper inputs are sampled
2189:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                                           with a frequency =  RTCCLK / 1024
2190:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_TamperSamplingFreq_RTCCLK_Div512: Each of the tamper inputs are sampled
2191:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                                           with a frequency =  RTCCLK / 512  
2192:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_TamperSamplingFreq_RTCCLK_Div256: Each of the tamper inputs are sampled
2193:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                                           with a frequency =  RTCCLK / 256  
2194:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval None
2195:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
2196:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** void RTC_TamperSamplingFreqConfig(uint32_t RTC_TamperSamplingFreq)
2197:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
2198:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
2199:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_TAMPER_SAMPLING_FREQ(RTC_TamperSamplingFreq));
2200:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  
2201:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Clear TAMPFREQ[2:0] bits in the RTC_TAFCR register */
2202:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->TAFCR &= (uint32_t)~(RTC_TAFCR_TAMPFREQ);
2203:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2204:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Configure the RTC_TAFCR register */
2205:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->TAFCR |= (uint32_t)RTC_TamperSamplingFreq;
2206:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
2207:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2208:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
2209:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Configures the Tampers Pins input Precharge Duration.
2210:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_TamperPrechargeDuration: Specifies the Tampers Pins input
2211:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *         Precharge Duration.
2212:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *   This parameter can be one of the following values:
2213:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_TamperPrechargeDuration_1RTCCLK: Tamper pins are precharged before sampling during
2214:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_TamperPrechargeDuration_2RTCCLK: Tamper pins are precharged before sampling during
2215:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_TamperPrechargeDuration_4RTCCLK: Tamper pins are precharged before sampling during
2216:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_TamperPrechargeDuration_8RTCCLK: Tamper pins are precharged before sampling during
2217:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval None
2218:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
2219:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** void RTC_TamperPinsPrechargeDuration(uint32_t RTC_TamperPrechargeDuration)
2220:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
2221:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
2222:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_TAMPER_PRECHARGE_DURATION(RTC_TamperPrechargeDuration));
2223:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    
2224:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Clear TAMPPRCH[1:0] bits in the RTC_TAFCR register */
2225:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->TAFCR &= (uint32_t)~(RTC_TAFCR_TAMPPRCH);
2226:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2227:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Configure the RTC_TAFCR register */
2228:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->TAFCR |= (uint32_t)RTC_TamperPrechargeDuration;
2229:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
2230:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2231:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
2232:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Enables or Disables the TimeStamp on Tamper Detection Event.
2233:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @note   The timestamp is valid even the TSE bit in tamper control register 
2234:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *         is reset.   
2235:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  NewState: new state of the timestamp on tamper event.
2236:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *         This parameter can be: ENABLE or DISABLE.
2237:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval None
2238:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
2239:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** void RTC_TimeStampOnTamperDetectionCmd(FunctionalState NewState)
2240:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
2241:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
2242:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2243:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    
2244:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   if (NewState != DISABLE)
2245:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
2246:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Save timestamp on tamper detection event */
2247:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC->TAFCR |= (uint32_t)RTC_TAFCR_TAMPTS;
2248:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
2249:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   else
2250:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
2251:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Tamper detection does not cause a timestamp to be saved */
2252:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC->TAFCR &= (uint32_t)~RTC_TAFCR_TAMPTS;    
2253:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
2254:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
2255:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2256:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
2257:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Enables or Disables the Precharge of Tamper pin.
2258:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  NewState: new state of tamper pull up.
2259:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *   This parameter can be: ENABLE or DISABLE.                   
2260:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval None
2261:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
2262:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** void RTC_TamperPullUpCmd(FunctionalState NewState)
2263:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
2264:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
2265:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2266:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
2267:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  if (NewState != DISABLE)
2268:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
2269:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Enable precharge of the selected Tamper pin */
2270:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC->TAFCR &= (uint32_t)~RTC_TAFCR_TAMPPUDIS; 
2271:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
2272:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   else
2273:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
2274:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Disable precharge of the selected Tamper pin */
2275:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC->TAFCR |= (uint32_t)RTC_TAFCR_TAMPPUDIS;    
2276:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   } 
2277:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
2278:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2279:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
2280:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @}
2281:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
2282:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2283:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /** @defgroup RTC_Group10 Backup Data Registers configuration functions
2284:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  *  @brief   Backup Data Registers configuration functions  
2285:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  *
2286:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** @verbatim   
2287:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  ===============================================================================
2288:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****              ##### Backup Data Registers configuration functions ##### 
2289:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  ===============================================================================  
2290:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2291:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** @endverbatim
2292:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @{
2293:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
2294:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2295:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
2296:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Writes a data in a specified RTC Backup data register.
2297:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_BKP_DR: RTC Backup data Register number.
2298:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          This parameter can be: RTC_BKP_DRx where x can be from 0 to 19 to 
2299:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                          specify the register.
2300:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  Data: Data to be written in the specified RTC Backup data register.                    
2301:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval None
2302:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
2303:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** void RTC_WriteBackupRegister(uint32_t RTC_BKP_DR, uint32_t Data)
2304:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
2305:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   __IO uint32_t tmp = 0;
2306:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
2307:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
2308:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_BKP(RTC_BKP_DR));
2309:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2310:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   tmp = RTC_BASE + 0x50;
2311:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   tmp += (RTC_BKP_DR * 4);
2312:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2313:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Write the specified register */
2314:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *(__IO uint32_t *)tmp = (uint32_t)Data;
2315:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
2316:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2317:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
2318:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Reads data from the specified RTC Backup data Register.
2319:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_BKP_DR: RTC Backup data Register number.
2320:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          This parameter can be: RTC_BKP_DRx where x can be from 0 to 19 to 
2321:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                          specify the register.                   
2322:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval None
2323:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
2324:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** uint32_t RTC_ReadBackupRegister(uint32_t RTC_BKP_DR)
2325:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
2326:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   __IO uint32_t tmp = 0;
2327:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
2328:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
2329:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_BKP(RTC_BKP_DR));
2330:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2331:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   tmp = RTC_BASE + 0x50;
2332:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   tmp += (RTC_BKP_DR * 4);
2333:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
2334:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Read the specified register */
2335:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   return (*(__IO uint32_t *)tmp);
2336:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
2337:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2338:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
2339:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @}
2340:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
2341:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2342:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /** @defgroup RTC_Group11 RTC Tamper and TimeStamp Pins Selection and Output Type Config configurat
2343:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  *  @brief   RTC Tamper and TimeStamp Pins Selection and Output Type Config 
2344:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  *           configuration functions  
2345:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  *
2346:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** @verbatim   
2347:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  ==================================================================================================
2348:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  ##### RTC Tamper and TimeStamp Pins Selection and Output Type Config configuration functions #####
2349:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  ==================================================================================================
2350:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2351:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** @endverbatim
2352:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @{
2353:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
2354:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2355:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
2356:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Selects the RTC Tamper Pin.
2357:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_TamperPin: specifies the RTC Tamper Pin.
2358:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          This parameter can be one of the following values:
2359:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_TamperPin_PC13: PC13 is selected as RTC Tamper Pin.
2360:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_TamperPin_PI8: PI8 is selected as RTC Tamper Pin.    
2361:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval None
2362:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
2363:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** void RTC_TamperPinSelection(uint32_t RTC_TamperPin)
2364:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
2365:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
2366:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_TAMPER_PIN(RTC_TamperPin));
2367:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
2368:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->TAFCR &= (uint32_t)~(RTC_TAFCR_TAMPINSEL);
2369:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->TAFCR |= (uint32_t)(RTC_TamperPin);  
2370:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
2371:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2372:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
2373:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Selects the RTC TimeStamp Pin.
2374:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_TimeStampPin: specifies the RTC TimeStamp Pin.
2375:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          This parameter can be one of the following values:
2376:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_TimeStampPin_PC13: PC13 is selected as RTC TimeStamp Pin.
2377:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_TimeStampPin_PI8: PI8 is selected as RTC TimeStamp Pin.    
2378:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval None
2379:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
2380:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** void RTC_TimeStampPinSelection(uint32_t RTC_TimeStampPin)
2381:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
2382:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
2383:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_TIMESTAMP_PIN(RTC_TimeStampPin));
2384:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
2385:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->TAFCR &= (uint32_t)~(RTC_TAFCR_TSINSEL);
2386:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->TAFCR |= (uint32_t)(RTC_TimeStampPin);  
2387:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
2388:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2389:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
2390:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Configures the RTC Output Pin mode. 
2391:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_OutputType: specifies the RTC Output (PC13) pin mode.
2392:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          This parameter can be one of the following values:
2393:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_OutputType_OpenDrain: RTC Output (PC13) is configured in 
2394:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                                    Open Drain mode.
2395:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_OutputType_PushPull:  RTC Output (PC13) is configured in 
2396:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *                                    Push Pull mode.    
2397:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval None
2398:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
2399:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** void RTC_OutputTypeConfig(uint32_t RTC_OutputType)
2400:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
2401:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
2402:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_OUTPUT_TYPE(RTC_OutputType));
2403:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
2404:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->TAFCR &= (uint32_t)~(RTC_TAFCR_ALARMOUTTYPE);
2405:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->TAFCR |= (uint32_t)(RTC_OutputType);  
2406:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
2407:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2408:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
2409:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @}
2410:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
2411:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2412:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /** @defgroup RTC_Group12 Shift control synchronisation functions
2413:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  *  @brief   Shift control synchronisation functions 
2414:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  *
2415:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** @verbatim   
2416:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  ===============================================================================
2417:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****               ##### Shift control synchronisation functions #####
2418:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  ===============================================================================  
2419:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2420:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** @endverbatim
2421:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @{
2422:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
2423:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2424:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
2425:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Configures the Synchronization Shift Control Settings.
2426:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @note   When REFCKON is set, firmware must not write to Shift control register 
2427:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_ShiftAdd1S : Select to add or not 1 second to the time Calendar.
2428:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *   This parameter can be one of the following values :
2429:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_ShiftAdd1S_Set  : Add one second to the clock calendar. 
2430:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *     @arg RTC_ShiftAdd1S_Reset: No effect.
2431:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_ShiftSubFS: Select the number of Second Fractions to Substitute.
2432:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *         This parameter can be one any value from 0 to 0x7FFF.
2433:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval An ErrorStatus enumeration value:
2434:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          - SUCCESS: RTC Shift registers are configured
2435:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          - ERROR: RTC Shift registers are not configured
2436:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** */
2437:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** ErrorStatus RTC_SynchroShiftConfig(uint32_t RTC_ShiftAdd1S, uint32_t RTC_ShiftSubFS)
2438:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
2439:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   ErrorStatus status = ERROR;
2440:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   uint32_t shpfcount = 0;
2441:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2442:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
2443:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_SHIFT_ADD1S(RTC_ShiftAdd1S));
2444:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_SHIFT_SUBFS(RTC_ShiftSubFS));
2445:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2446:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Disable the write protection for RTC registers */
2447:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xCA;
2448:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
2449:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
2450:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check if a Shift is pending*/
2451:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   if ((RTC->ISR & RTC_ISR_SHPF) != RESET)
2452:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
2453:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Wait until the shift is completed*/
2454:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     while (((RTC->ISR & RTC_ISR_SHPF) != RESET) && (shpfcount != SHPF_TIMEOUT))
2455:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
2456:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       shpfcount++;
2457:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     }
2458:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
2459:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2460:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check if the Shift pending is completed or if there is no Shift operation at all*/
2461:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   if ((RTC->ISR & RTC_ISR_SHPF) == RESET)
2462:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
2463:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* check if the reference clock detection is disabled */
2464:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     if((RTC->CR & RTC_CR_REFCKON) == RESET)
2465:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
2466:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       /* Configure the Shift settings */
2467:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       RTC->SHIFTR = (uint32_t)(uint32_t)(RTC_ShiftSubFS) | (uint32_t)(RTC_ShiftAdd1S);
2468:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     
2469:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       if(RTC_WaitForSynchro() == ERROR)
2470:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       {
2471:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****         status = ERROR;
2472:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       }
2473:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       else
2474:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       {
2475:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****         status = SUCCESS;
2476:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       }
2477:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     }
2478:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     else
2479:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
2480:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       status = ERROR;
2481:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     }
2482:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
2483:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   else
2484:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
2485:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     status = ERROR;
2486:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
2487:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2488:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Enable the write protection for RTC registers */
2489:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xFF;
2490:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
2491:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   return (ErrorStatus)(status);
2492:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
2493:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2494:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
2495:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @}
2496:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
2497:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2498:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /** @defgroup RTC_Group13 Interrupts and flags management functions
2499:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  *  @brief   Interrupts and flags management functions  
2500:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  *
2501:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** @verbatim   
2502:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  ===============================================================================
2503:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****               ##### Interrupts and flags management functions #####
2504:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  ===============================================================================  
2505:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  [..] All RTC interrupts are connected to the EXTI controller.
2506:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  
2507:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    (+) To enable the RTC Alarm interrupt, the following sequence is required:
2508:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****        (++) Configure and enable the EXTI Line 17 in interrupt mode and select 
2509:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****             the rising edge sensitivity using the EXTI_Init() function.
2510:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****        (++) Configure and enable the RTC_Alarm IRQ channel in the NVIC using the 
2511:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****             NVIC_Init() function.
2512:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****        (++) Configure the RTC to generate RTC alarms (Alarm A and/or Alarm B) using
2513:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****             the RTC_SetAlarm() and RTC_AlarmCmd() functions.
2514:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2515:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    (+) To enable the RTC Wakeup interrupt, the following sequence is required:
2516:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****        (++) Configure and enable the EXTI Line 22 in interrupt mode and select the
2517:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****             rising edge sensitivity using the EXTI_Init() function.
2518:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****        (++) Configure and enable the RTC_WKUP IRQ channel in the NVIC using the 
2519:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****             NVIC_Init() function.
2520:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****        (++) Configure the RTC to generate the RTC wakeup timer event using the 
2521:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****             RTC_WakeUpClockConfig(), RTC_SetWakeUpCounter() and RTC_WakeUpCmd() 
2522:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****             functions.
2523:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2524:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    (+) To enable the RTC Tamper interrupt, the following sequence is required:
2525:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****        (++) Configure and enable the EXTI Line 21 in interrupt mode and select 
2526:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****             the rising edge sensitivity using the EXTI_Init() function.
2527:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****        (++) Configure and enable the TAMP_STAMP IRQ channel in the NVIC using the
2528:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****             NVIC_Init() function.
2529:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****        (++) Configure the RTC to detect the RTC tamper event using the 
2530:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****             RTC_TamperTriggerConfig() and RTC_TamperCmd() functions.
2531:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2532:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    (+) To enable the RTC TimeStamp interrupt, the following sequence is required:
2533:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****        (++) Configure and enable the EXTI Line 21 in interrupt mode and select the
2534:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****             rising edge sensitivity using the EXTI_Init() function.
2535:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****        (++) Configure and enable the TAMP_STAMP IRQ channel in the NVIC using the 
2536:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****             NVIC_Init() function.
2537:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****        (++) Configure the RTC to detect the RTC time stamp event using the 
2538:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****             RTC_TimeStampCmd() functions.
2539:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2540:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** @endverbatim
2541:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @{
2542:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
2543:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2544:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
2545:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Enables or disables the specified RTC interrupts.
2546:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_IT: specifies the RTC interrupt sources to be enabled or disabled. 
2547:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          This parameter can be any combination of the following values:
2548:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_IT_TS:  Time Stamp interrupt mask
2549:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_IT_WUT:  WakeUp Timer interrupt mask
2550:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_IT_ALRB:  Alarm B interrupt mask
2551:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_IT_ALRA:  Alarm A interrupt mask
2552:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_IT_TAMP: Tamper event interrupt mask
2553:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  NewState: new state of the specified RTC interrupts.
2554:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          This parameter can be: ENABLE or DISABLE.
2555:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval None
2556:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
2557:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** void RTC_ITConfig(uint32_t RTC_IT, FunctionalState NewState)
2558:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
2559:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
2560:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_CONFIG_IT(RTC_IT));
2561:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2562:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2563:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Disable the write protection for RTC registers */
2564:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xCA;
2565:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
2566:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2567:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   if (NewState != DISABLE)
2568:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
2569:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Configure the Interrupts in the RTC_CR register */
2570:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC->CR |= (uint32_t)(RTC_IT & ~RTC_TAFCR_TAMPIE);
2571:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Configure the Tamper Interrupt in the RTC_TAFCR */
2572:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC->TAFCR |= (uint32_t)(RTC_IT & RTC_TAFCR_TAMPIE);
2573:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
2574:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   else
2575:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
2576:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Configure the Interrupts in the RTC_CR register */
2577:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC->CR &= (uint32_t)~(RTC_IT & (uint32_t)~RTC_TAFCR_TAMPIE);
2578:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Configure the Tamper Interrupt in the RTC_TAFCR */
2579:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC->TAFCR &= (uint32_t)~(RTC_IT & RTC_TAFCR_TAMPIE);
2580:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
2581:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Enable the write protection for RTC registers */
2582:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0xFF; 
2583:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
2584:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2585:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
2586:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Checks whether the specified RTC flag is set or not.
2587:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_FLAG: specifies the flag to check.
2588:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          This parameter can be one of the following values:
2589:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_FLAG_RECALPF: RECALPF event flag.
2590:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_FLAG_TAMP1F: Tamper 1 event flag
2591:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_FLAG_TSOVF: Time Stamp OverFlow flag
2592:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_FLAG_TSF: Time Stamp event flag
2593:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_FLAG_WUTF: WakeUp Timer flag
2594:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_FLAG_ALRBF: Alarm B flag
2595:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_FLAG_ALRAF: Alarm A flag
2596:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_FLAG_INITF: Initialization mode flag
2597:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_FLAG_RSF: Registers Synchronized flag
2598:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_FLAG_INITS: Registers Configured flag
2599:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_FLAG_SHPF: Shift operation pending flag.
2600:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_FLAG_WUTWF: WakeUp Timer Write flag
2601:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_FLAG_ALRBWF: Alarm B Write flag
2602:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_FLAG_ALRAWF: Alarm A write flag
2603:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval The new state of RTC_FLAG (SET or RESET).
2604:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
2605:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** FlagStatus RTC_GetFlagStatus(uint32_t RTC_FLAG)
2606:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
2607:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   FlagStatus bitstatus = RESET;
2608:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   uint32_t tmpreg = 0;
2609:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
2610:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
2611:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_GET_FLAG(RTC_FLAG));
2612:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
2613:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Get all the flags */
2614:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   tmpreg = (uint32_t)(RTC->ISR & RTC_FLAGS_MASK);
2615:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
2616:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Return the status of the flag */
2617:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   if ((tmpreg & RTC_FLAG) != (uint32_t)RESET)
2618:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
2619:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     bitstatus = SET;
2620:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
2621:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   else
2622:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
2623:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     bitstatus = RESET;
2624:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
2625:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   return bitstatus;
2626:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
2627:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2628:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
2629:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Clears the RTC's pending flags.
2630:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_FLAG: specifies the RTC flag to clear.
2631:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          This parameter can be any combination of the following values:
2632:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_FLAG_TAMP1F: Tamper 1 event flag
2633:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_FLAG_TSOVF: Time Stamp Overflow flag 
2634:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_FLAG_TSF: Time Stamp event flag
2635:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_FLAG_WUTF: WakeUp Timer flag
2636:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_FLAG_ALRBF: Alarm B flag
2637:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_FLAG_ALRAF: Alarm A flag
2638:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_FLAG_RSF: Registers Synchronized flag
2639:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval None
2640:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
2641:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** void RTC_ClearFlag(uint32_t RTC_FLAG)
2642:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
2643:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
2644:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_CLEAR_FLAG(RTC_FLAG));
2645:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2646:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Clear the Flags in the RTC_ISR register */
2647:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->ISR = (uint32_t)((uint32_t)(~((RTC_FLAG | RTC_ISR_INIT)& 0x0000FFFF) | (uint32_t)(RTC->ISR &
2648:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
2649:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2650:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
2651:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Checks whether the specified RTC interrupt has occurred or not.
2652:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_IT: specifies the RTC interrupt source to check.
2653:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          This parameter can be one of the following values:
2654:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_IT_TS: Time Stamp interrupt 
2655:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_IT_WUT: WakeUp Timer interrupt 
2656:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_IT_ALRB: Alarm B interrupt 
2657:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_IT_ALRA: Alarm A interrupt 
2658:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_IT_TAMP1: Tamper 1 event interrupt 
2659:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval The new state of RTC_IT (SET or RESET).
2660:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
2661:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** ITStatus RTC_GetITStatus(uint32_t RTC_IT)
2662:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
2663:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   ITStatus bitstatus = RESET;
2664:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   uint32_t tmpreg = 0, enablestatus = 0;
2665:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  
2666:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
2667:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_GET_IT(RTC_IT));
2668:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
2669:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Get the TAMPER Interrupt enable bit and pending bit */
2670:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   tmpreg = (uint32_t)(RTC->TAFCR & (RTC_TAFCR_TAMPIE));
2671:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  
2672:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Get the Interrupt enable Status */
2673:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   enablestatus = (uint32_t)((RTC->CR & RTC_IT) | (tmpreg & (RTC_IT >> 15)));
2674:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
2675:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Get the Interrupt pending bit */
2676:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   tmpreg = (uint32_t)((RTC->ISR & (uint32_t)(RTC_IT >> 4)));
2677:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
2678:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Get the status of the Interrupt */
2679:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   if ((enablestatus != (uint32_t)RESET) && ((tmpreg & 0x0000FFFF) != (uint32_t)RESET))
2680:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
2681:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     bitstatus = SET;
2682:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
2683:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   else
2684:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
2685:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     bitstatus = RESET;
2686:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
2687:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   return bitstatus;
2688:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
2689:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2690:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
2691:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Clears the RTC's interrupt pending bits.
2692:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  RTC_IT: specifies the RTC interrupt pending bit to clear.
2693:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *          This parameter can be any combination of the following values:
2694:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_IT_TS: Time Stamp interrupt 
2695:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_IT_WUT: WakeUp Timer interrupt 
2696:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_IT_ALRB: Alarm B interrupt 
2697:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_IT_ALRA: Alarm A interrupt 
2698:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   *            @arg RTC_IT_TAMP1: Tamper 1 event interrupt 
2699:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval None
2700:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
2701:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** void RTC_ClearITPendingBit(uint32_t RTC_IT)
2702:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
2703:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   uint32_t tmpreg = 0;
2704:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2705:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
2706:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   assert_param(IS_RTC_CLEAR_IT(RTC_IT));
2707:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2708:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Get the RTC_ISR Interrupt pending bits mask */
2709:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   tmpreg = (uint32_t)(RTC_IT >> 4);
2710:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2711:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Clear the interrupt pending bits in the RTC_ISR register */
2712:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->ISR = (uint32_t)((uint32_t)(~((tmpreg | RTC_ISR_INIT)& 0x0000FFFF) | (uint32_t)(RTC->ISR & R
2713:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
2714:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2715:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
2716:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @}
2717:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
2718:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2719:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
2720:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Converts a 2 digit decimal to BCD format.
2721:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  Value: Byte to be converted.
2722:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval Converted byte
2723:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
2724:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** static uint8_t RTC_ByteToBcd2(uint8_t Value)
2725:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
2726:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   uint8_t bcdhigh = 0;
2727:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
2728:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   while (Value >= 10)
 671              		.loc 1 2728 0
 672 0014 0928     		cmp	r0, #9
 673 0016 4FF00005 		mov	r5, #0
 674 001a 07D9     		bls	.L92
 675              	.LVL38:
 676              	.L84:
2729:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
2730:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     bcdhigh++;
2731:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     Value -= 10;
 677              		.loc 1 2731 0
 678 001c 0A38     		subs	r0, r0, #10
 679              	.LVL39:
 680 001e C0B2     		uxtb	r0, r0
2730:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     Value -= 10;
 681              		.loc 1 2730 0
 682 0020 0135     		adds	r5, r5, #1
 683              	.LVL40:
2728:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 684              		.loc 1 2728 0
 685 0022 0928     		cmp	r0, #9
2730:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     Value -= 10;
 686              		.loc 1 2730 0
 687 0024 EDB2     		uxtb	r5, r5
 688              	.LVL41:
2728:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 689              		.loc 1 2728 0
 690 0026 F9D8     		bhi	.L84
 691 0028 2D01     		lsls	r5, r5, #4
 692              	.LVL42:
 693 002a EDB2     		uxtb	r5, r5
 694              	.L92:
 695              	.LBE87:
 696              	.LBE86:
 816:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****                    ((uint32_t)RTC_ByteToBcd2(RTC_TimeStruct->RTC_Seconds)) | \
 697              		.loc 1 816 0
 698 002c 4A78     		ldrb	r2, [r1, #1]	@ zero_extendqisi2
 699              	.LVL43:
 815:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****                    ((uint32_t)RTC_ByteToBcd2(RTC_TimeStruct->RTC_Minutes) << 8) | \
 700              		.loc 1 815 0
 701 002e 2843     		orrs	r0, r0, r5
 702              	.LVL44:
 703              	.LBB88:
 704              	.LBB89:
2728:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 705              		.loc 1 2728 0
 706 0030 092A     		cmp	r2, #9
 707              	.LBE89:
 708              	.LBE88:
 815:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****                    ((uint32_t)RTC_ByteToBcd2(RTC_TimeStruct->RTC_Minutes) << 8) | \
 709              		.loc 1 815 0
 710 0032 4FEA0040 		lsl	r0, r0, #16
 711              	.LBB92:
 712              	.LBB90:
2728:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 713              		.loc 1 2728 0
 714 0036 56D9     		bls	.L93
 715 0038 0023     		movs	r3, #0
 716              	.LVL45:
 717              	.L86:
 718              		.loc 1 2731 0
 719 003a 0A3A     		subs	r2, r2, #10
 720              	.LVL46:
 721 003c D2B2     		uxtb	r2, r2
2730:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     Value -= 10;
 722              		.loc 1 2730 0
 723 003e 0133     		adds	r3, r3, #1
 724              	.LVL47:
2728:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 725              		.loc 1 2728 0
 726 0040 092A     		cmp	r2, #9
2730:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     Value -= 10;
 727              		.loc 1 2730 0
 728 0042 DBB2     		uxtb	r3, r3
 729              	.LVL48:
2728:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 730              		.loc 1 2728 0
 731 0044 F9D8     		bhi	.L86
 732 0046 1B01     		lsls	r3, r3, #4
 733              	.LVL49:
 734 0048 DCB2     		uxtb	r4, r3
 735              	.L85:
 736              	.LBE90:
 737              	.LBE92:
 817:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****                    (((uint32_t)RTC_TimeStruct->RTC_H12) << 16));
 738              		.loc 1 817 0
 739 004a 8B78     		ldrb	r3, [r1, #2]	@ zero_extendqisi2
 740              	.LVL50:
 816:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****                    ((uint32_t)RTC_ByteToBcd2(RTC_TimeStruct->RTC_Seconds)) | \
 741              		.loc 1 816 0
 742 004c 2243     		orrs	r2, r2, r4
 743              	.LVL51:
 744              	.LBB93:
 745              	.LBB94:
2728:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 746              		.loc 1 2728 0
 747 004e 092B     		cmp	r3, #9
 748              	.LBE94:
 749              	.LBE93:
 816:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****                    ((uint32_t)RTC_ByteToBcd2(RTC_TimeStruct->RTC_Seconds)) | \
 750              		.loc 1 816 0
 751 0050 4FEA0221 		lsl	r1, r2, #8
 752              	.LVL52:
 753              	.LBB96:
 754              	.LBB95:
2728:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 755              		.loc 1 2728 0
 756 0054 4FF00004 		mov	r4, #0
 757 0058 07D9     		bls	.L87
 758              	.LVL53:
 759              	.L88:
 760              		.loc 1 2731 0
 761 005a 0A3B     		subs	r3, r3, #10
 762              	.LVL54:
 763 005c DBB2     		uxtb	r3, r3
2730:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     Value -= 10;
 764              		.loc 1 2730 0
 765 005e 0134     		adds	r4, r4, #1
 766              	.LVL55:
2728:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 767              		.loc 1 2728 0
 768 0060 092B     		cmp	r3, #9
2730:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     Value -= 10;
 769              		.loc 1 2730 0
 770 0062 E4B2     		uxtb	r4, r4
 771              	.LVL56:
2728:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 772              		.loc 1 2728 0
 773 0064 F9D8     		bhi	.L88
 774 0066 2401     		lsls	r4, r4, #4
 775              	.LVL57:
 776 0068 E4B2     		uxtb	r4, r4
 777              	.L87:
 778 006a 40EA0602 		orr	r2, r0, r6
 779 006e 0A43     		orrs	r2, r2, r1
 780              	.LBE95:
 781              	.LBE96:
 817:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****                    (((uint32_t)RTC_TimeStruct->RTC_H12) << 16));
 782              		.loc 1 817 0
 783 0070 2343     		orrs	r3, r3, r4
 784              	.LVL58:
 815:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****                    ((uint32_t)RTC_ByteToBcd2(RTC_TimeStruct->RTC_Minutes) << 8) | \
 785              		.loc 1 815 0
 786 0072 42EA0304 		orr	r4, r2, r3
 787              	.LVL59:
 788 0076 0DE0     		b	.L90
 789              	.LVL60:
 790              	.L79:
 790:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
 791              		.loc 1 790 0
 792 0078 9C68     		ldr	r4, [r3, #8]
 793 007a 14F04002 		ands	r2, r4, #64
 794 007e 25D1     		bne	.L82
 798:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       assert_param(IS_RTC_HOUR24(RTC_Bcd2ToByte(RTC_TimeStruct->RTC_Hours)));
 795              		.loc 1 798 0
 796 0080 CA70     		strb	r2, [r1, #3]
 797              	.L83:
 809:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****              ((uint32_t)RTC_TimeStruct->RTC_Seconds) | \
 798              		.loc 1 809 0
 799 0082 4878     		ldrb	r0, [r1, #1]	@ zero_extendqisi2
 800              	.LVL61:
 808:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****              ((uint32_t)(RTC_TimeStruct->RTC_Minutes) << 8) | \
 801              		.loc 1 808 0
 802 0084 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 810:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****              ((uint32_t)(RTC_TimeStruct->RTC_H12) << 16)); 
 803              		.loc 1 810 0
 804 0086 8C78     		ldrb	r4, [r1, #2]	@ zero_extendqisi2
 809:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****              ((uint32_t)RTC_TimeStruct->RTC_Seconds) | \
 805              		.loc 1 809 0
 806 0088 0102     		lsls	r1, r0, #8
 807              	.LVL62:
 808:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****              ((uint32_t)(RTC_TimeStruct->RTC_Minutes) << 8) | \
 808              		.loc 1 808 0
 809 008a 41EA0343 		orr	r3, r1, r3, lsl #16
 809:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****              ((uint32_t)RTC_TimeStruct->RTC_Seconds) | \
 810              		.loc 1 809 0
 811 008e 2343     		orrs	r3, r3, r4
 808:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****              ((uint32_t)(RTC_TimeStruct->RTC_Minutes) << 8) | \
 812              		.loc 1 808 0
 813 0090 43EA0204 		orr	r4, r3, r2
 814              	.LVL63:
 815              	.L90:
 822:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 816              		.loc 1 822 0
 817 0094 154D     		ldr	r5, .L103
 818 0096 CA22     		movs	r2, #202
 823:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 819              		.loc 1 823 0
 820 0098 5323     		movs	r3, #83
 822:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 821              		.loc 1 822 0
 822 009a 6A62     		str	r2, [r5, #36]
 823:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 823              		.loc 1 823 0
 824 009c 6B62     		str	r3, [r5, #36]
 826:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 825              		.loc 1 826 0
 826 009e FFF7FEFF 		bl	RTC_EnterInitMode
 827              	.LVL64:
 828 00a2 60B1     		cbz	r0, .L89
 833:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 829              		.loc 1 833 0
 830 00a4 04F07F33 		and	r3, r4, #2139062143
 831 00a8 23F0FE43 		bic	r3, r3, #2130706432
 832 00ac 2B60     		str	r3, [r5]
 833              	.LBB97:
 834              	.LBB98:
 600:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 835              		.loc 1 600 0
 836 00ae EB68     		ldr	r3, [r5, #12]
 837 00b0 23F08003 		bic	r3, r3, #128
 838 00b4 EB60     		str	r3, [r5, #12]
 839              	.LBE98:
 840              	.LBE97:
 839:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
 841              		.loc 1 839 0
 842 00b6 AB68     		ldr	r3, [r5, #8]
 843 00b8 9B06     		lsls	r3, r3, #26
 844 00ba 0AD5     		bpl	.L102
 852:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     }
 845              		.loc 1 852 0
 846 00bc 0120     		movs	r0, #1
 847              	.L89:
 848              	.LVL65:
 856:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     
 849              		.loc 1 856 0
 850 00be 0B4B     		ldr	r3, .L103
 851 00c0 FF22     		movs	r2, #255
 852 00c2 5A62     		str	r2, [r3, #36]
 859:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 853              		.loc 1 859 0
 854 00c4 70BD     		pop	{r4, r5, r6, pc}
 855              	.LVL66:
 856              	.L80:
 857 00c6 CE78     		ldrb	r6, [r1, #3]	@ zero_extendqisi2
 858 00c8 3604     		lsls	r6, r6, #16
 859 00ca A2E7     		b	.L81
 860              	.L82:
 861 00cc CC78     		ldrb	r4, [r1, #3]	@ zero_extendqisi2
 862 00ce 2204     		lsls	r2, r4, #16
 863 00d0 D7E7     		b	.L83
 864              	.LVL67:
 865              	.L102:
 841:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
 866              		.loc 1 841 0
 867 00d2 FFF7FEFF 		bl	RTC_WaitForSynchro
 868              	.LVL68:
 856:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     
 869              		.loc 1 856 0
 870 00d6 054B     		ldr	r3, .L103
 828:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   } 
 871              		.loc 1 828 0
 872 00d8 0030     		adds	r0, r0, #0
 856:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     
 873              		.loc 1 856 0
 874 00da 4FF0FF02 		mov	r2, #255
 828:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   } 
 875              		.loc 1 828 0
 876 00de 18BF     		it	ne
 877 00e0 0120     		movne	r0, #1
 878              	.LVL69:
 856:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     
 879              		.loc 1 856 0
 880 00e2 5A62     		str	r2, [r3, #36]
 859:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 881              		.loc 1 859 0
 882 00e4 70BD     		pop	{r4, r5, r6, pc}
 883              	.LVL70:
 884              	.L93:
 885              	.LBB99:
 886              	.LBB91:
2728:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 887              		.loc 1 2728 0
 888 00e6 0024     		movs	r4, #0
 889 00e8 AFE7     		b	.L85
 890              	.L104:
 891 00ea 00BF     		.align	2
 892              	.L103:
 893 00ec 00280040 		.word	1073752064
 894              	.LBE91:
 895              	.LBE99:
 896              		.cfi_endproc
 897              	.LFE119:
 899              		.section	.text.RTC_TimeStructInit,"ax",%progbits
 900              		.align	2
 901              		.global	RTC_TimeStructInit
 902              		.thumb
 903              		.thumb_func
 905              	RTC_TimeStructInit:
 906              	.LFB120:
 869:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Time = 00h:00min:00sec */
 907              		.loc 1 869 0
 908              		.cfi_startproc
 909              		@ args = 0, pretend = 0, frame = 0
 910              		@ frame_needed = 0, uses_anonymous_args = 0
 911              		@ link register save eliminated.
 912              	.LVL71:
 871:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_TimeStruct->RTC_Hours = 0;
 913              		.loc 1 871 0
 914 0000 0023     		movs	r3, #0
 915 0002 C370     		strb	r3, [r0, #3]
 872:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_TimeStruct->RTC_Minutes = 0;
 916              		.loc 1 872 0
 917 0004 0370     		strb	r3, [r0]
 873:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_TimeStruct->RTC_Seconds = 0; 
 918              		.loc 1 873 0
 919 0006 4370     		strb	r3, [r0, #1]
 874:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 920              		.loc 1 874 0
 921 0008 8370     		strb	r3, [r0, #2]
 922 000a 7047     		bx	lr
 923              		.cfi_endproc
 924              	.LFE120:
 926              		.section	.text.RTC_GetTime,"ax",%progbits
 927              		.align	2
 928              		.global	RTC_GetTime
 929              		.thumb
 930              		.thumb_func
 932              	RTC_GetTime:
 933              	.LFB121:
 888:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   uint32_t tmpreg = 0;
 934              		.loc 1 888 0
 935              		.cfi_startproc
 936              		@ args = 0, pretend = 0, frame = 0
 937              		@ frame_needed = 0, uses_anonymous_args = 0
 938              		@ link register save eliminated.
 939              	.LVL72:
 895:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
 940              		.loc 1 895 0
 941 0000 154B     		ldr	r3, .L109
 942 0002 1B68     		ldr	r3, [r3]
 943              	.LVL73:
 901:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 944              		.loc 1 901 0
 945 0004 03F48002 		and	r2, r3, #4194304
 888:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   uint32_t tmpreg = 0;
 946              		.loc 1 888 0
 947 0008 F0B4     		push	{r4, r5, r6, r7}
 948              	.LCFI13:
 949              		.cfi_def_cfa_offset 16
 950              		.cfi_offset 4, -16
 951              		.cfi_offset 5, -12
 952              		.cfi_offset 6, -8
 953              		.cfi_offset 7, -4
 901:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 954              		.loc 1 901 0
 955 000a 120C     		lsrs	r2, r2, #16
 900:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_TimeStruct->RTC_H12 = (uint8_t)((tmpreg & (RTC_TR_PM)) >> 16);  
 956              		.loc 1 900 0
 957 000c 03F07F06 		and	r6, r3, #127
 898:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_TimeStruct->RTC_Minutes = (uint8_t)((tmpreg & (RTC_TR_MNT | RTC_TR_MNU)) >>8);
 958              		.loc 1 898 0
 959 0010 C3F30544 		ubfx	r4, r3, #16, #6
 899:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_TimeStruct->RTC_Seconds = (uint8_t)(tmpreg & (RTC_TR_ST | RTC_TR_SU));
 960              		.loc 1 899 0
 961 0014 C3F30623 		ubfx	r3, r3, #8, #7
 962              	.LVL74:
 901:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 963              		.loc 1 901 0
 964 0018 CA70     		strb	r2, [r1, #3]
 900:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_TimeStruct->RTC_H12 = (uint8_t)((tmpreg & (RTC_TR_PM)) >> 16);  
 965              		.loc 1 900 0
 966 001a 8E70     		strb	r6, [r1, #2]
 898:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_TimeStruct->RTC_Minutes = (uint8_t)((tmpreg & (RTC_TR_MNT | RTC_TR_MNU)) >>8);
 967              		.loc 1 898 0
 968 001c 0C70     		strb	r4, [r1]
 899:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_TimeStruct->RTC_Seconds = (uint8_t)(tmpreg & (RTC_TR_ST | RTC_TR_SU));
 969              		.loc 1 899 0
 970 001e 4B70     		strb	r3, [r1, #1]
 904:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 971              		.loc 1 904 0
 972 0020 B8B9     		cbnz	r0, .L106
 973              	.LVL75:
 974              	.LBB100:
 975              	.LBB101:
2732:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
2733:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
2734:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   return  ((uint8_t)(bcdhigh << 4) | Value);
2735:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
2736:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
2737:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** /**
2738:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @brief  Convert from 2 digit BCD to Binary.
2739:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @param  Value: BCD value to be converted.
2740:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   * @retval Converted word
2741:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   */
2742:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** static uint8_t RTC_Bcd2ToByte(uint8_t Value)
2743:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** {
2744:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   uint8_t tmp = 0;
2745:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   tmp = ((uint8_t)(Value & (uint8_t)0xF0) >> (uint8_t)0x4) * 10;
 976              		.loc 1 2745 0
 977 0022 2009     		lsrs	r0, r4, #4
 978              	.LVL76:
 979              	.LBE101:
 980              	.LBE100:
 981              	.LBB105:
 982              	.LBB106:
 983 0024 1A09     		lsrs	r2, r3, #4
 984              	.LBE106:
 985              	.LBE105:
 986              	.LBB110:
 987              	.LBB111:
 988 0026 3509     		lsrs	r5, r6, #4
 989              	.LBE111:
 990              	.LBE110:
 991              	.LBB115:
 992              	.LBB102:
 993 0028 00EB8007 		add	r7, r0, r0, lsl #2
 994              	.LBE102:
 995              	.LBE115:
 996              	.LBB116:
 997              	.LBB112:
 998 002c 05EB8505 		add	r5, r5, r5, lsl #2
 999              	.LBE112:
 1000              	.LBE116:
 1001              	.LBB117:
 1002              	.LBB107:
 1003 0030 02EB8200 		add	r0, r2, r2, lsl #2
 1004              	.LBE107:
 1005              	.LBE117:
 1006              	.LBB118:
 1007              	.LBB113:
2746:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   return (tmp + (Value & (uint8_t)0x0F));
 1008              		.loc 1 2746 0
 1009 0034 06F00F06 		and	r6, r6, #15
 1010              	.LBE113:
 1011              	.LBE118:
 1012              	.LBB119:
 1013              	.LBB103:
 1014 0038 04F00F04 		and	r4, r4, #15
 1015              	.LVL77:
 1016              	.LBE103:
 1017              	.LBE119:
 1018              	.LBB120:
 1019              	.LBB108:
 1020 003c 03F00F02 		and	r2, r3, #15
 1021              	.LBE108:
 1022              	.LBE120:
 1023              	.LBB121:
 1024              	.LBB114:
 1025 0040 06EB4505 		add	r5, r6, r5, lsl #1
 1026              	.LBE114:
 1027              	.LBE121:
 1028              	.LBB122:
 1029              	.LBB104:
 1030 0044 04EB4704 		add	r4, r4, r7, lsl #1
 1031              	.LBE104:
 1032              	.LBE122:
 1033              	.LBB123:
 1034              	.LBB109:
 1035 0048 02EB4003 		add	r3, r2, r0, lsl #1
 1036              	.LBE109:
 1037              	.LBE123:
 909:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
 1038              		.loc 1 909 0
 1039 004c 8D70     		strb	r5, [r1, #2]
 907:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC_TimeStruct->RTC_Minutes = (uint8_t)RTC_Bcd2ToByte(RTC_TimeStruct->RTC_Minutes);
 1040              		.loc 1 907 0
 1041 004e 0C70     		strb	r4, [r1]
 1042              	.LVL78:
 908:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC_TimeStruct->RTC_Seconds = (uint8_t)RTC_Bcd2ToByte(RTC_TimeStruct->RTC_Seconds);   
 1043              		.loc 1 908 0
 1044 0050 4B70     		strb	r3, [r1, #1]
 1045              	.LVL79:
 1046              	.L106:
 911:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 1047              		.loc 1 911 0
 1048 0052 F0BC     		pop	{r4, r5, r6, r7}
 1049              	.LCFI14:
 1050              		.cfi_restore 7
 1051              		.cfi_restore 6
 1052              		.cfi_restore 5
 1053              		.cfi_restore 4
 1054              		.cfi_def_cfa_offset 0
 1055 0054 7047     		bx	lr
 1056              	.L110:
 1057 0056 00BF     		.align	2
 1058              	.L109:
 1059 0058 00280040 		.word	1073752064
 1060              		.cfi_endproc
 1061              	.LFE121:
 1063              		.section	.text.RTC_GetSubSecond,"ax",%progbits
 1064              		.align	2
 1065              		.global	RTC_GetSubSecond
 1066              		.thumb
 1067              		.thumb_func
 1069              	RTC_GetSubSecond:
 1070              	.LFB122:
 921:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   uint32_t tmpreg = 0;
 1071              		.loc 1 921 0
 1072              		.cfi_startproc
 1073              		@ args = 0, pretend = 0, frame = 0
 1074              		@ frame_needed = 0, uses_anonymous_args = 0
 1075              		@ link register save eliminated.
 1076              	.LVL80:
 925:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
 1077              		.loc 1 925 0
 1078 0000 014B     		ldr	r3, .L112
 1079 0002 986A     		ldr	r0, [r3, #40]
 1080              	.LVL81:
 928:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
 1081              		.loc 1 928 0
 1082 0004 5B68     		ldr	r3, [r3, #4]
 931:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 1083              		.loc 1 931 0
 1084 0006 7047     		bx	lr
 1085              	.L113:
 1086              		.align	2
 1087              	.L112:
 1088 0008 00280040 		.word	1073752064
 1089              		.cfi_endproc
 1090              	.LFE122:
 1092              		.section	.text.RTC_SetDate,"ax",%progbits
 1093              		.align	2
 1094              		.global	RTC_SetDate
 1095              		.thumb
 1096              		.thumb_func
 1098              	RTC_SetDate:
 1099              	.LFB123:
 946:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   uint32_t tmpreg = 0;
 1100              		.loc 1 946 0
 1101              		.cfi_startproc
 1102              		@ args = 0, pretend = 0, frame = 0
 1103              		@ frame_needed = 0, uses_anonymous_args = 0
 1104              	.LVL82:
 1105 0000 38B5     		push	{r3, r4, r5, lr}
 1106              	.LCFI15:
 1107              		.cfi_def_cfa_offset 16
 1108              		.cfi_offset 3, -16
 1109              		.cfi_offset 4, -12
 1110              		.cfi_offset 5, -8
 1111              		.cfi_offset 14, -4
 953:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 1112              		.loc 1 953 0
 1113 0002 0028     		cmp	r0, #0
 1114 0004 3AD1     		bne	.L115
 953:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 1115              		.loc 1 953 0 is_stmt 0 discriminator 1
 1116 0006 4A78     		ldrb	r2, [r1, #1]	@ zero_extendqisi2
 1117 0008 D006     		lsls	r0, r2, #27
 1118              	.LVL83:
 1119 000a 04D5     		bpl	.L116
 955:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }  
 1120              		.loc 1 955 0 is_stmt 1
 1121 000c 22F01002 		bic	r2, r2, #16
 1122 0010 0A32     		adds	r2, r2, #10
 1123 0012 D2B2     		uxtb	r2, r2
 1124 0014 4A70     		strb	r2, [r1, #1]
 1125              	.L116:
 983:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(RTC_DateStruct->RTC_Month) << 8) | \
 1126              		.loc 1 983 0
 1127 0016 CB78     		ldrb	r3, [r1, #3]	@ zero_extendqisi2
 1128              	.LVL84:
 1129              	.LBB124:
 1130              	.LBB125:
2728:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 1131              		.loc 1 2728 0
 1132 0018 092B     		cmp	r3, #9
 1133 001a 4FF00000 		mov	r0, #0
 1134 001e 07D9     		bls	.L124
 1135              	.LVL85:
 1136              	.L117:
2731:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
 1137              		.loc 1 2731 0
 1138 0020 0A3B     		subs	r3, r3, #10
 1139              	.LVL86:
 1140 0022 DBB2     		uxtb	r3, r3
2730:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     Value -= 10;
 1141              		.loc 1 2730 0
 1142 0024 0130     		adds	r0, r0, #1
 1143              	.LVL87:
2728:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 1144              		.loc 1 2728 0
 1145 0026 092B     		cmp	r3, #9
2730:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     Value -= 10;
 1146              		.loc 1 2730 0
 1147 0028 C0B2     		uxtb	r0, r0
 1148              	.LVL88:
2728:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 1149              		.loc 1 2728 0
 1150 002a F9D8     		bhi	.L117
 1151 002c 0001     		lsls	r0, r0, #4
 1152              	.LVL89:
 1153 002e C0B2     		uxtb	r0, r0
 1154              	.L124:
 1155              	.LBE125:
 1156              	.LBE124:
 983:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(RTC_DateStruct->RTC_Month) << 8) | \
 1157              		.loc 1 983 0
 1158 0030 0343     		orrs	r3, r3, r0
 1159              	.LVL90:
 1160              	.LBB126:
 1161              	.LBB127:
2728:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 1162              		.loc 1 2728 0
 1163 0032 092A     		cmp	r2, #9
 1164              	.LBE127:
 1165              	.LBE126:
 983:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(RTC_DateStruct->RTC_Month) << 8) | \
 1166              		.loc 1 983 0
 1167 0034 4FEA0340 		lsl	r0, r3, #16
 1168              	.LVL91:
 1169              	.LBB130:
 1170              	.LBB128:
2728:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 1171              		.loc 1 2728 0
 1172 0038 4ED9     		bls	.L127
 1173 003a 0023     		movs	r3, #0
 1174              	.LVL92:
 1175              	.L119:
2731:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
 1176              		.loc 1 2731 0
 1177 003c 0A3A     		subs	r2, r2, #10
 1178              	.LVL93:
 1179 003e D2B2     		uxtb	r2, r2
2730:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     Value -= 10;
 1180              		.loc 1 2730 0
 1181 0040 0133     		adds	r3, r3, #1
 1182              	.LVL94:
2728:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 1183              		.loc 1 2728 0
 1184 0042 092A     		cmp	r2, #9
2730:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     Value -= 10;
 1185              		.loc 1 2730 0
 1186 0044 DBB2     		uxtb	r3, r3
 1187              	.LVL95:
2728:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 1188              		.loc 1 2728 0
 1189 0046 F9D8     		bhi	.L119
 1190 0048 1B01     		lsls	r3, r3, #4
 1191              	.LVL96:
 1192 004a DCB2     		uxtb	r4, r3
 1193              	.L118:
 1194              	.LBE128:
 1195              	.LBE130:
 985:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****               ((uint32_t)RTC_DateStruct->RTC_WeekDay << 13));
 1196              		.loc 1 985 0
 1197 004c 8B78     		ldrb	r3, [r1, #2]	@ zero_extendqisi2
 1198              	.LVL97:
 984:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(RTC_DateStruct->RTC_Date)) | \
 1199              		.loc 1 984 0
 1200 004e 2243     		orrs	r2, r2, r4
 1201              	.LVL98:
 1202              	.LBB131:
 1203              	.LBB132:
2728:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 1204              		.loc 1 2728 0
 1205 0050 092B     		cmp	r3, #9
 1206              	.LBE132:
 1207              	.LBE131:
 984:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(RTC_DateStruct->RTC_Date)) | \
 1208              		.loc 1 984 0
 1209 0052 4FEA0222 		lsl	r2, r2, #8
 1210              	.LBB134:
 1211              	.LBB133:
2728:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 1212              		.loc 1 2728 0
 1213 0056 4FF00004 		mov	r4, #0
 1214 005a 07D9     		bls	.L120
 1215              	.LVL99:
 1216              	.L121:
2731:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
 1217              		.loc 1 2731 0
 1218 005c 0A3B     		subs	r3, r3, #10
 1219              	.LVL100:
 1220 005e DBB2     		uxtb	r3, r3
2730:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     Value -= 10;
 1221              		.loc 1 2730 0
 1222 0060 0134     		adds	r4, r4, #1
 1223              	.LVL101:
2728:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 1224              		.loc 1 2728 0
 1225 0062 092B     		cmp	r3, #9
2730:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     Value -= 10;
 1226              		.loc 1 2730 0
 1227 0064 E4B2     		uxtb	r4, r4
 1228              	.LVL102:
2728:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 1229              		.loc 1 2728 0
 1230 0066 F9D8     		bhi	.L121
 1231 0068 2401     		lsls	r4, r4, #4
 1232              	.LVL103:
 1233 006a E4B2     		uxtb	r4, r4
 1234              	.L120:
 1235              	.LBE133:
 1236              	.LBE134:
 986:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
 1237              		.loc 1 986 0
 1238 006c 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1239              	.LVL104:
 1240 006e 40EA4130 		orr	r0, r0, r1, lsl #13
 1241 0072 1043     		orrs	r0, r0, r2
 985:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****               ((uint32_t)RTC_DateStruct->RTC_WeekDay << 13));
 1242              		.loc 1 985 0
 1243 0074 2343     		orrs	r3, r3, r4
 1244              	.LVL105:
 983:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(RTC_DateStruct->RTC_Month) << 8) | \
 1245              		.loc 1 983 0
 1246 0076 40EA0304 		orr	r4, r0, r3
 1247              	.LVL106:
 1248 007a 0AE0     		b	.L125
 1249              	.LVL107:
 1250              	.L115:
 977:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****               ((uint32_t)RTC_DateStruct->RTC_Date) | \
 1251              		.loc 1 977 0
 1252 007c 4878     		ldrb	r0, [r1, #1]	@ zero_extendqisi2
 1253              	.LVL108:
 976:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****               (((uint32_t)RTC_DateStruct->RTC_Month) << 8) | \
 1254              		.loc 1 976 0
 1255 007e CC78     		ldrb	r4, [r1, #3]	@ zero_extendqisi2
 978:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****               (((uint32_t)RTC_DateStruct->RTC_WeekDay) << 13)); 
 1256              		.loc 1 978 0
 1257 0080 8A78     		ldrb	r2, [r1, #2]	@ zero_extendqisi2
 979:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }  
 1258              		.loc 1 979 0
 1259 0082 0D78     		ldrb	r5, [r1]	@ zero_extendqisi2
 977:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****               ((uint32_t)RTC_DateStruct->RTC_Date) | \
 1260              		.loc 1 977 0
 1261 0084 0102     		lsls	r1, r0, #8
 1262              	.LVL109:
 976:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****               (((uint32_t)RTC_DateStruct->RTC_Month) << 8) | \
 1263              		.loc 1 976 0
 1264 0086 41EA0444 		orr	r4, r1, r4, lsl #16
 977:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****               ((uint32_t)RTC_DateStruct->RTC_Date) | \
 1265              		.loc 1 977 0
 1266 008a 44EA0203 		orr	r3, r4, r2
 976:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****               (((uint32_t)RTC_DateStruct->RTC_Month) << 8) | \
 1267              		.loc 1 976 0
 1268 008e 43EA4534 		orr	r4, r3, r5, lsl #13
 1269              	.LVL110:
 1270              	.L125:
 990:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 1271              		.loc 1 990 0
 1272 0092 124D     		ldr	r5, .L137
 1273 0094 CA22     		movs	r2, #202
 991:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 1274              		.loc 1 991 0
 1275 0096 5323     		movs	r3, #83
 990:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 1276              		.loc 1 990 0
 1277 0098 6A62     		str	r2, [r5, #36]
 991:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 1278              		.loc 1 991 0
 1279 009a 6B62     		str	r3, [r5, #36]
 994:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 1280              		.loc 1 994 0
 1281 009c FFF7FEFF 		bl	RTC_EnterInitMode
 1282              	.LVL111:
 1283 00a0 60B1     		cbz	r0, .L122
1001:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 1284              		.loc 1 1001 0
 1285 00a2 24F07F43 		bic	r3, r4, #-16777216
 1286 00a6 23F0C003 		bic	r3, r3, #192
 1287 00aa 6B60     		str	r3, [r5, #4]
 1288              	.LBB135:
 1289              	.LBB136:
 600:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 1290              		.loc 1 600 0
 1291 00ac EB68     		ldr	r3, [r5, #12]
 1292 00ae 23F08003 		bic	r3, r3, #128
 1293 00b2 EB60     		str	r3, [r5, #12]
 1294              	.LBE136:
 1295              	.LBE135:
1007:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
 1296              		.loc 1 1007 0
 1297 00b4 AB68     		ldr	r3, [r5, #8]
 1298 00b6 9B06     		lsls	r3, r3, #26
 1299 00b8 04D5     		bpl	.L136
1020:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     }
 1300              		.loc 1 1020 0
 1301 00ba 0120     		movs	r0, #1
 1302              	.L122:
 1303              	.LVL112:
1024:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
 1304              		.loc 1 1024 0
 1305 00bc 074B     		ldr	r3, .L137
 1306 00be FF22     		movs	r2, #255
 1307 00c0 5A62     		str	r2, [r3, #36]
1027:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 1308              		.loc 1 1027 0
 1309 00c2 38BD     		pop	{r3, r4, r5, pc}
 1310              	.LVL113:
 1311              	.L136:
1009:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
 1312              		.loc 1 1009 0
 1313 00c4 FFF7FEFF 		bl	RTC_WaitForSynchro
 1314              	.LVL114:
1024:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
 1315              		.loc 1 1024 0
 1316 00c8 044B     		ldr	r3, .L137
 996:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   } 
 1317              		.loc 1 996 0
 1318 00ca 0030     		adds	r0, r0, #0
1024:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
 1319              		.loc 1 1024 0
 1320 00cc 4FF0FF02 		mov	r2, #255
 996:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   } 
 1321              		.loc 1 996 0
 1322 00d0 18BF     		it	ne
 1323 00d2 0120     		movne	r0, #1
 1324              	.LVL115:
1024:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
 1325              		.loc 1 1024 0
 1326 00d4 5A62     		str	r2, [r3, #36]
1027:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 1327              		.loc 1 1027 0
 1328 00d6 38BD     		pop	{r3, r4, r5, pc}
 1329              	.LVL116:
 1330              	.L127:
 1331              	.LBB137:
 1332              	.LBB129:
2728:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 1333              		.loc 1 2728 0
 1334 00d8 0024     		movs	r4, #0
 1335 00da B7E7     		b	.L118
 1336              	.L138:
 1337              		.align	2
 1338              	.L137:
 1339 00dc 00280040 		.word	1073752064
 1340              	.LBE129:
 1341              	.LBE137:
 1342              		.cfi_endproc
 1343              	.LFE123:
 1345              		.section	.text.RTC_DateStructInit,"ax",%progbits
 1346              		.align	2
 1347              		.global	RTC_DateStructInit
 1348              		.thumb
 1349              		.thumb_func
 1351              	RTC_DateStructInit:
 1352              	.LFB124:
1037:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Monday, January 01 xx00 */
 1353              		.loc 1 1037 0
 1354              		.cfi_startproc
 1355              		@ args = 0, pretend = 0, frame = 0
 1356              		@ frame_needed = 0, uses_anonymous_args = 0
 1357              		@ link register save eliminated.
 1358              	.LVL117:
1039:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_DateStruct->RTC_Date = 1;
 1359              		.loc 1 1039 0
 1360 0000 0123     		movs	r3, #1
1042:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 1361              		.loc 1 1042 0
 1362 0002 0022     		movs	r2, #0
 1363 0004 C270     		strb	r2, [r0, #3]
1039:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_DateStruct->RTC_Date = 1;
 1364              		.loc 1 1039 0
 1365 0006 0370     		strb	r3, [r0]
1040:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_DateStruct->RTC_Month = RTC_Month_January;
 1366              		.loc 1 1040 0
 1367 0008 8370     		strb	r3, [r0, #2]
1041:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_DateStruct->RTC_Year = 0;
 1368              		.loc 1 1041 0
 1369 000a 4370     		strb	r3, [r0, #1]
 1370 000c 7047     		bx	lr
 1371              		.cfi_endproc
 1372              	.LFE124:
 1374 000e 00BF     		.section	.text.RTC_GetDate,"ax",%progbits
 1375              		.align	2
 1376              		.global	RTC_GetDate
 1377              		.thumb
 1378              		.thumb_func
 1380              	RTC_GetDate:
 1381              	.LFB125:
1056:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   uint32_t tmpreg = 0;
 1382              		.loc 1 1056 0
 1383              		.cfi_startproc
 1384              		@ args = 0, pretend = 0, frame = 0
 1385              		@ frame_needed = 0, uses_anonymous_args = 0
 1386              		@ link register save eliminated.
 1387              	.LVL118:
1063:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 1388              		.loc 1 1063 0
 1389 0000 144B     		ldr	r3, .L143
 1390 0002 5B68     		ldr	r3, [r3, #4]
 1391              	.LVL119:
1056:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   uint32_t tmpreg = 0;
 1392              		.loc 1 1056 0
 1393 0004 F0B4     		push	{r4, r5, r6, r7}
 1394              	.LCFI16:
 1395              		.cfi_def_cfa_offset 16
 1396              		.cfi_offset 4, -16
 1397              		.cfi_offset 5, -12
 1398              		.cfi_offset 6, -8
 1399              		.cfi_offset 7, -4
1066:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_DateStruct->RTC_Month = (uint8_t)((tmpreg & (RTC_DR_MT | RTC_DR_MU)) >> 8);
 1400              		.loc 1 1066 0
 1401 0006 C3F30742 		ubfx	r2, r3, #16, #8
1068:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_DateStruct->RTC_WeekDay = (uint8_t)((tmpreg & (RTC_DR_WDU)) >> 13);
 1402              		.loc 1 1068 0
 1403 000a 03F03F05 		and	r5, r3, #63
1069:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 1404              		.loc 1 1069 0
 1405 000e C3F34236 		ubfx	r6, r3, #13, #3
1067:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_DateStruct->RTC_Date = (uint8_t)(tmpreg & (RTC_DR_DT | RTC_DR_DU));
 1406              		.loc 1 1067 0
 1407 0012 C3F30423 		ubfx	r3, r3, #8, #5
 1408              	.LVL120:
1069:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 1409              		.loc 1 1069 0
 1410 0016 0E70     		strb	r6, [r1]
1068:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_DateStruct->RTC_WeekDay = (uint8_t)((tmpreg & (RTC_DR_WDU)) >> 13);
 1411              		.loc 1 1068 0
 1412 0018 8D70     		strb	r5, [r1, #2]
1066:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_DateStruct->RTC_Month = (uint8_t)((tmpreg & (RTC_DR_MT | RTC_DR_MU)) >> 8);
 1413              		.loc 1 1066 0
 1414 001a CA70     		strb	r2, [r1, #3]
1067:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_DateStruct->RTC_Date = (uint8_t)(tmpreg & (RTC_DR_DT | RTC_DR_DU));
 1415              		.loc 1 1067 0
 1416 001c 4B70     		strb	r3, [r1, #1]
1072:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 1417              		.loc 1 1072 0
 1418 001e B8B9     		cbnz	r0, .L140
 1419              	.LVL121:
 1420              	.LBB138:
 1421              	.LBB139:
2745:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   return (tmp + (Value & (uint8_t)0x0F));
 1422              		.loc 1 2745 0
 1423 0020 1F09     		lsrs	r7, r3, #4
 1424              	.LBE139:
 1425              	.LBE138:
 1426              	.LBB143:
 1427              	.LBB144:
 1428 0022 2C09     		lsrs	r4, r5, #4
 1429              	.LBE144:
 1430              	.LBE143:
 1431              	.LBB147:
 1432              	.LBB148:
 1433 0024 1009     		lsrs	r0, r2, #4
 1434              	.LVL122:
 1435              	.LBE148:
 1436              	.LBE147:
 1437              	.LBB151:
 1438              	.LBB140:
 1439 0026 BE00     		lsls	r6, r7, #2
 1440              	.LBE140:
 1441              	.LBE151:
 1442              	.LBB152:
 1443              	.LBB145:
 1444 0028 04EB8404 		add	r4, r4, r4, lsl #2
 1445              		.loc 1 2746 0
 1446 002c 05F00F05 		and	r5, r5, #15
 1447              	.LBE145:
 1448              	.LBE152:
 1449              	.LBB153:
 1450              	.LBB141:
 1451 0030 03F00F03 		and	r3, r3, #15
2745:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   return (tmp + (Value & (uint8_t)0x0F));
 1452              		.loc 1 2745 0
 1453 0034 3E44     		add	r6, r6, r7
 1454              	.LBE141:
 1455              	.LBE153:
 1456              	.LBB154:
 1457              	.LBB149:
 1458 0036 00EB8000 		add	r0, r0, r0, lsl #2
 1459              		.loc 1 2746 0
 1460 003a 02F00F02 		and	r2, r2, #15
 1461              	.LVL123:
 1462              	.LBE149:
 1463              	.LBE154:
 1464              	.LBB155:
 1465              	.LBB146:
 1466 003e 05EB4404 		add	r4, r5, r4, lsl #1
 1467              	.LBE146:
 1468              	.LBE155:
 1469              	.LBB156:
 1470              	.LBB142:
 1471 0042 03EB4603 		add	r3, r3, r6, lsl #1
 1472              	.LBE142:
 1473              	.LBE156:
 1474              	.LBB157:
 1475              	.LBB150:
 1476 0046 02EB4002 		add	r2, r2, r0, lsl #1
 1477              	.LBE150:
 1478              	.LBE157:
1077:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
 1479              		.loc 1 1077 0
 1480 004a 8C70     		strb	r4, [r1, #2]
1076:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC_DateStruct->RTC_Date = (uint8_t)RTC_Bcd2ToByte(RTC_DateStruct->RTC_Date);
 1481              		.loc 1 1076 0
 1482 004c 4B70     		strb	r3, [r1, #1]
1075:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC_DateStruct->RTC_Month = (uint8_t)RTC_Bcd2ToByte(RTC_DateStruct->RTC_Month);
 1483              		.loc 1 1075 0
 1484 004e CA70     		strb	r2, [r1, #3]
 1485              	.LVL124:
 1486              	.L140:
1079:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 1487              		.loc 1 1079 0
 1488 0050 F0BC     		pop	{r4, r5, r6, r7}
 1489              	.LCFI17:
 1490              		.cfi_restore 7
 1491              		.cfi_restore 6
 1492              		.cfi_restore 5
 1493              		.cfi_restore 4
 1494              		.cfi_def_cfa_offset 0
 1495 0052 7047     		bx	lr
 1496              	.L144:
 1497              		.align	2
 1498              	.L143:
 1499 0054 00280040 		.word	1073752064
 1500              		.cfi_endproc
 1501              	.LFE125:
 1503              		.section	.text.RTC_SetAlarm,"ax",%progbits
 1504              		.align	2
 1505              		.global	RTC_SetAlarm
 1506              		.thumb
 1507              		.thumb_func
 1509              	RTC_SetAlarm:
 1510              	.LFB126:
1116:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   uint32_t tmpreg = 0;
 1511              		.loc 1 1116 0
 1512              		.cfi_startproc
 1513              		@ args = 0, pretend = 0, frame = 0
 1514              		@ frame_needed = 0, uses_anonymous_args = 0
 1515              	.LVL125:
 1516 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1517              	.LCFI18:
 1518              		.cfi_def_cfa_offset 20
 1519              		.cfi_offset 4, -20
 1520              		.cfi_offset 5, -16
 1521              		.cfi_offset 6, -12
 1522              		.cfi_offset 7, -8
 1523              		.cfi_offset 14, -4
1127:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
 1524              		.loc 1 1127 0
 1525 0002 414B     		ldr	r3, .L173
1125:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 1526              		.loc 1 1125 0
 1527 0004 0028     		cmp	r0, #0
 1528 0006 50D1     		bne	.L146
1127:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
 1529              		.loc 1 1127 0
 1530 0008 9D68     		ldr	r5, [r3, #8]
 1531 000a 15F04005 		ands	r5, r5, #64
 1532 000e 74D1     		bne	.L147
1134:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       assert_param(IS_RTC_HOUR24(RTC_AlarmStruct->RTC_AlarmTime.RTC_Hours));
 1533              		.loc 1 1134 0
 1534 0010 D570     		strb	r5, [r2, #3]
 1535              	.L148:
1191:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(RTC_AlarmStruct->RTC_AlarmTime.RTC_Minutes) << 8) | \
 1536              		.loc 1 1191 0
 1537 0012 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1538              	.LVL126:
 1539              	.LBB158:
 1540              	.LBB159:
2728:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 1541              		.loc 1 2728 0
 1542 0014 092B     		cmp	r3, #9
 1543 0016 98BF     		it	ls
 1544 0018 0024     		movls	r4, #0
 1545 001a 08D9     		bls	.L162
 1546 001c 0020     		movs	r0, #0
 1547              	.LVL127:
 1548              	.L151:
2731:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
 1549              		.loc 1 2731 0
 1550 001e 0A3B     		subs	r3, r3, #10
 1551              	.LVL128:
 1552 0020 DBB2     		uxtb	r3, r3
2730:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     Value -= 10;
 1553              		.loc 1 2730 0
 1554 0022 0130     		adds	r0, r0, #1
 1555              	.LVL129:
2728:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 1556              		.loc 1 2728 0
 1557 0024 092B     		cmp	r3, #9
2730:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     Value -= 10;
 1558              		.loc 1 2730 0
 1559 0026 C0B2     		uxtb	r0, r0
 1560              	.LVL130:
2728:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 1561              		.loc 1 2728 0
 1562 0028 F9D8     		bhi	.L151
 1563 002a 0001     		lsls	r0, r0, #4
 1564              	.LVL131:
 1565 002c C4B2     		uxtb	r4, r0
 1566              	.L162:
 1567              	.LBE159:
 1568              	.LBE158:
1192:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(RTC_AlarmStruct->RTC_AlarmTime.RTC_Seconds)) | \
 1569              		.loc 1 1192 0
 1570 002e 5078     		ldrb	r0, [r2, #1]	@ zero_extendqisi2
 1571              	.LVL132:
1191:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(RTC_AlarmStruct->RTC_AlarmTime.RTC_Minutes) << 8) | \
 1572              		.loc 1 1191 0
 1573 0030 2343     		orrs	r3, r3, r4
 1574              	.LVL133:
 1575              	.LBB160:
 1576              	.LBB161:
2728:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 1577              		.loc 1 2728 0
 1578 0032 0928     		cmp	r0, #9
 1579              	.LBE161:
 1580              	.LBE160:
1191:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(RTC_AlarmStruct->RTC_AlarmTime.RTC_Minutes) << 8) | \
 1581              		.loc 1 1191 0
 1582 0034 4FEA0343 		lsl	r3, r3, #16
 1583              	.LBB164:
 1584              	.LBB162:
2728:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 1585              		.loc 1 2728 0
 1586 0038 62D9     		bls	.L163
 1587 003a 0024     		movs	r4, #0
 1588              	.LVL134:
 1589              	.L153:
2731:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
 1590              		.loc 1 2731 0
 1591 003c 0A38     		subs	r0, r0, #10
 1592              	.LVL135:
 1593 003e C0B2     		uxtb	r0, r0
2730:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     Value -= 10;
 1594              		.loc 1 2730 0
 1595 0040 0134     		adds	r4, r4, #1
 1596              	.LVL136:
2728:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 1597              		.loc 1 2728 0
 1598 0042 0928     		cmp	r0, #9
2730:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     Value -= 10;
 1599              		.loc 1 2730 0
 1600 0044 E4B2     		uxtb	r4, r4
 1601              	.LVL137:
2728:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 1602              		.loc 1 2728 0
 1603 0046 F9D8     		bhi	.L153
 1604 0048 2401     		lsls	r4, r4, #4
 1605              	.LVL138:
 1606 004a E6B2     		uxtb	r6, r4
 1607              	.L152:
 1608              	.LBE162:
 1609              	.LBE164:
1193:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****               ((uint32_t)(RTC_AlarmStruct->RTC_AlarmTime.RTC_H12) << 16) | \
 1610              		.loc 1 1193 0
 1611 004c 9478     		ldrb	r4, [r2, #2]	@ zero_extendqisi2
 1612              	.LVL139:
1192:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(RTC_AlarmStruct->RTC_AlarmTime.RTC_Seconds)) | \
 1613              		.loc 1 1192 0
 1614 004e 3043     		orrs	r0, r0, r6
 1615              	.LVL140:
 1616              	.LBB165:
 1617              	.LBB166:
2728:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 1618              		.loc 1 2728 0
 1619 0050 092C     		cmp	r4, #9
 1620              	.LBE166:
 1621              	.LBE165:
1192:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(RTC_AlarmStruct->RTC_AlarmTime.RTC_Seconds)) | \
 1622              		.loc 1 1192 0
 1623 0052 4FEA0020 		lsl	r0, r0, #8
 1624              	.LBB169:
 1625              	.LBB167:
2728:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 1626              		.loc 1 2728 0
 1627 0056 55D9     		bls	.L164
 1628 0058 0026     		movs	r6, #0
 1629              	.LVL141:
 1630              	.L155:
2731:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
 1631              		.loc 1 2731 0
 1632 005a 0A3C     		subs	r4, r4, #10
 1633              	.LVL142:
 1634 005c E4B2     		uxtb	r4, r4
2730:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     Value -= 10;
 1635              		.loc 1 2730 0
 1636 005e 0136     		adds	r6, r6, #1
 1637              	.LVL143:
2728:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 1638              		.loc 1 2728 0
 1639 0060 092C     		cmp	r4, #9
2730:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     Value -= 10;
 1640              		.loc 1 2730 0
 1641 0062 F6B2     		uxtb	r6, r6
 1642              	.LVL144:
2728:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 1643              		.loc 1 2728 0
 1644 0064 F9D8     		bhi	.L155
 1645 0066 3601     		lsls	r6, r6, #4
 1646              	.LVL145:
 1647 0068 F7B2     		uxtb	r7, r6
 1648              	.L154:
 1649              	.LBE167:
 1650              	.LBE169:
1195:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****               ((uint32_t)RTC_AlarmStruct->RTC_AlarmDateWeekDaySel) | \
 1651              		.loc 1 1195 0
 1652 006a 92F80CE0 		ldrb	lr, [r2, #12]	@ zero_extendqisi2
 1653              	.LVL146:
 1654              	.LBB170:
 1655              	.LBB171:
2728:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 1656              		.loc 1 2728 0
 1657 006e BEF1090F 		cmp	lr, #9
 1658              	.LBE171:
 1659              	.LBE170:
1193:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****               ((uint32_t)(RTC_AlarmStruct->RTC_AlarmTime.RTC_H12) << 16) | \
 1660              		.loc 1 1193 0
 1661 0072 44EA0704 		orr	r4, r4, r7
 1662              	.LVL147:
 1663              	.LBB173:
 1664              	.LBB172:
2728:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 1665              		.loc 1 2728 0
 1666 0076 4FF00006 		mov	r6, #0
 1667 007a 0AD9     		bls	.L156
 1668              	.LVL148:
 1669              	.L157:
2731:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
 1670              		.loc 1 2731 0
 1671 007c AEF10A0E 		sub	lr, lr, #10
 1672              	.LVL149:
 1673 0080 5FFA8EFE 		uxtb	lr, lr
2730:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     Value -= 10;
 1674              		.loc 1 2730 0
 1675 0084 0136     		adds	r6, r6, #1
 1676              	.LVL150:
2728:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 1677              		.loc 1 2728 0
 1678 0086 BEF1090F 		cmp	lr, #9
2730:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     Value -= 10;
 1679              		.loc 1 2730 0
 1680 008a F6B2     		uxtb	r6, r6
 1681              	.LVL151:
2728:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 1682              		.loc 1 2728 0
 1683 008c F6D8     		bhi	.L157
 1684 008e 3601     		lsls	r6, r6, #4
 1685              	.LVL152:
 1686 0090 F6B2     		uxtb	r6, r6
 1687              	.L156:
 1688 0092 5768     		ldr	r7, [r2, #4]
 1689 0094 9268     		ldr	r2, [r2, #8]
 1690              	.LVL153:
 1691 0096 3A43     		orrs	r2, r2, r7
 1692 0098 1543     		orrs	r5, r5, r2
 1693 009a 2B43     		orrs	r3, r3, r5
 1694 009c 1843     		orrs	r0, r0, r3
 1695              	.LBE172:
 1696              	.LBE173:
1195:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****               ((uint32_t)RTC_AlarmStruct->RTC_AlarmDateWeekDaySel) | \
 1697              		.loc 1 1195 0
 1698 009e 46EA0E06 		orr	r6, r6, lr
 1699 00a2 2043     		orrs	r0, r0, r4
1191:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(RTC_AlarmStruct->RTC_AlarmTime.RTC_Minutes) << 8) | \
 1700              		.loc 1 1191 0
 1701 00a4 40EA0666 		orr	r6, r0, r6, lsl #24
 1702              	.LVL154:
 1703 00a8 15E0     		b	.L160
 1704              	.LVL155:
 1705              	.L146:
1151:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
 1706              		.loc 1 1151 0
 1707 00aa 9E68     		ldr	r6, [r3, #8]
 1708 00ac 16F04003 		ands	r3, r6, #64
 1709 00b0 20D1     		bne	.L149
1159:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       assert_param(IS_RTC_HOUR24(RTC_Bcd2ToByte(RTC_AlarmStruct->RTC_AlarmTime.RTC_Hours)));
 1710              		.loc 1 1159 0
 1711 00b2 D370     		strb	r3, [r2, #3]
 1712              	.L150:
 1713 00b4 D2F804E0 		ldr	lr, [r2, #4]
 1714 00b8 9068     		ldr	r0, [r2, #8]
 1715              	.LVL156:
1183:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****               ((uint32_t)(RTC_AlarmStruct->RTC_AlarmTime.RTC_H12) << 16) | \
 1716              		.loc 1 1183 0
 1717 00ba 9478     		ldrb	r4, [r2, #2]	@ zero_extendqisi2
1181:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****               ((uint32_t)(RTC_AlarmStruct->RTC_AlarmTime.RTC_Minutes) << 8) | \
 1718              		.loc 1 1181 0
 1719 00bc 1778     		ldrb	r7, [r2]	@ zero_extendqisi2
1182:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****               ((uint32_t)RTC_AlarmStruct->RTC_AlarmTime.RTC_Seconds) | \
 1720              		.loc 1 1182 0
 1721 00be 5578     		ldrb	r5, [r2, #1]	@ zero_extendqisi2
1185:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****               ((uint32_t)RTC_AlarmStruct->RTC_AlarmDateWeekDaySel) | \
 1722              		.loc 1 1185 0
 1723 00c0 167B     		ldrb	r6, [r2, #12]	@ zero_extendqisi2
 1724 00c2 4EEA0000 		orr	r0, lr, r0
 1725 00c6 2043     		orrs	r0, r0, r4
 1726 00c8 40EA0742 		orr	r2, r0, r7, lsl #16
 1727              	.LVL157:
 1728 00cc 42EA0522 		orr	r2, r2, r5, lsl #8
 1729 00d0 42EA0666 		orr	r6, r2, r6, lsl #24
1181:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****               ((uint32_t)(RTC_AlarmStruct->RTC_AlarmTime.RTC_Minutes) << 8) | \
 1730              		.loc 1 1181 0
 1731 00d4 1E43     		orrs	r6, r6, r3
 1732              	.LVL158:
 1733              	.L160:
1201:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 1734              		.loc 1 1201 0
 1735 00d6 0C4B     		ldr	r3, .L173
1202:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 1736              		.loc 1 1202 0
 1737 00d8 5322     		movs	r2, #83
1205:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 1738              		.loc 1 1205 0
 1739 00da B1F5807F 		cmp	r1, #256
1201:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 1740              		.loc 1 1201 0
 1741 00de 4FF0CA00 		mov	r0, #202
 1742 00e2 5862     		str	r0, [r3, #36]
1202:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 1743              		.loc 1 1202 0
 1744 00e4 5A62     		str	r2, [r3, #36]
1207:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
 1745              		.loc 1 1207 0
 1746 00e6 0CBF     		ite	eq
 1747 00e8 DE61     		streq	r6, [r3, #28]
1211:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
 1748              		.loc 1 1211 0
 1749 00ea 1E62     		strne	r6, [r3, #32]
1215:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 1750              		.loc 1 1215 0
 1751 00ec 064B     		ldr	r3, .L173
 1752 00ee FF22     		movs	r2, #255
 1753 00f0 5A62     		str	r2, [r3, #36]
 1754 00f2 F0BD     		pop	{r4, r5, r6, r7, pc}
 1755              	.LVL159:
 1756              	.L149:
 1757 00f4 D678     		ldrb	r6, [r2, #3]	@ zero_extendqisi2
 1758 00f6 3304     		lsls	r3, r6, #16
 1759 00f8 DCE7     		b	.L150
 1760              	.L147:
 1761 00fa D578     		ldrb	r5, [r2, #3]	@ zero_extendqisi2
 1762 00fc 2D04     		lsls	r5, r5, #16
 1763 00fe 88E7     		b	.L148
 1764              	.LVL160:
 1765              	.L163:
 1766              	.LBB174:
 1767              	.LBB163:
2728:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 1768              		.loc 1 2728 0
 1769 0100 0026     		movs	r6, #0
 1770 0102 A3E7     		b	.L152
 1771              	.LVL161:
 1772              	.L164:
 1773              	.LBE163:
 1774              	.LBE174:
 1775              	.LBB175:
 1776              	.LBB168:
 1777 0104 0027     		movs	r7, #0
 1778 0106 B0E7     		b	.L154
 1779              	.L174:
 1780              		.align	2
 1781              	.L173:
 1782 0108 00280040 		.word	1073752064
 1783              	.LBE168:
 1784              	.LBE175:
 1785              		.cfi_endproc
 1786              	.LFE126:
 1788              		.section	.text.RTC_AlarmStructInit,"ax",%progbits
 1789              		.align	2
 1790              		.global	RTC_AlarmStructInit
 1791              		.thumb
 1792              		.thumb_func
 1794              	RTC_AlarmStructInit:
 1795              	.LFB127:
1227:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Alarm Time Settings : Time = 00h:00mn:00sec */
 1796              		.loc 1 1227 0
 1797              		.cfi_startproc
 1798              		@ args = 0, pretend = 0, frame = 0
 1799              		@ frame_needed = 0, uses_anonymous_args = 0
 1800              		@ link register save eliminated.
 1801              	.LVL162:
1229:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_AlarmStruct->RTC_AlarmTime.RTC_Hours = 0;
 1802              		.loc 1 1229 0
 1803 0000 0023     		movs	r3, #0
1236:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 1804              		.loc 1 1236 0
 1805 0002 0122     		movs	r2, #1
 1806 0004 0273     		strb	r2, [r0, #12]
1229:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_AlarmStruct->RTC_AlarmTime.RTC_Hours = 0;
 1807              		.loc 1 1229 0
 1808 0006 C370     		strb	r3, [r0, #3]
1230:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_AlarmStruct->RTC_AlarmTime.RTC_Minutes = 0;
 1809              		.loc 1 1230 0
 1810 0008 0370     		strb	r3, [r0]
1231:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_AlarmStruct->RTC_AlarmTime.RTC_Seconds = 0;
 1811              		.loc 1 1231 0
 1812 000a 4370     		strb	r3, [r0, #1]
1232:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 1813              		.loc 1 1232 0
 1814 000c 8370     		strb	r3, [r0, #2]
1235:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_AlarmStruct->RTC_AlarmDateWeekDay = 1;
 1815              		.loc 1 1235 0
 1816 000e 8360     		str	r3, [r0, #8]
1239:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 1817              		.loc 1 1239 0
 1818 0010 4360     		str	r3, [r0, #4]
 1819 0012 7047     		bx	lr
 1820              		.cfi_endproc
 1821              	.LFE127:
 1823              		.section	.text.RTC_GetAlarm,"ax",%progbits
 1824              		.align	2
 1825              		.global	RTC_GetAlarm
 1826              		.thumb
 1827              		.thumb_func
 1829              	RTC_GetAlarm:
 1830              	.LFB128:
1257:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   uint32_t tmpreg = 0;
 1831              		.loc 1 1257 0
 1832              		.cfi_startproc
 1833              		@ args = 0, pretend = 0, frame = 0
 1834              		@ frame_needed = 0, uses_anonymous_args = 0
 1835              	.LVL163:
1267:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
 1836              		.loc 1 1267 0
 1837 0000 214B     		ldr	r3, .L181
1265:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 1838              		.loc 1 1265 0
 1839 0002 B1F5807F 		cmp	r1, #256
1267:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
 1840              		.loc 1 1267 0
 1841 0006 0CBF     		ite	eq
 1842 0008 DB69     		ldreq	r3, [r3, #28]
 1843              	.LVL164:
1271:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
 1844              		.loc 1 1271 0
 1845 000a 1B6A     		ldrne	r3, [r3, #32]
 1846              	.LVL165:
1257:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   uint32_t tmpreg = 0;
 1847              		.loc 1 1257 0
 1848 000c F0B5     		push	{r4, r5, r6, r7, lr}
 1849              	.LCFI19:
 1850              		.cfi_def_cfa_offset 20
 1851              		.cfi_offset 4, -20
 1852              		.cfi_offset 5, -16
 1853              		.cfi_offset 6, -12
 1854              		.cfi_offset 7, -8
 1855              		.cfi_offset 14, -4
1279:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****                                                      RTC_ALRMAR_SU));
 1856              		.loc 1 1279 0
 1857 000e DEB2     		uxtb	r6, r3
1281:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_AlarmStruct->RTC_AlarmDateWeekDay = (uint32_t)((tmpreg & (RTC_ALRMAR_DT | RTC_ALRMAR_DU)) >> 
 1858              		.loc 1 1281 0
 1859 0010 03F4800E 		and	lr, r3, #4194304
1275:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****                                                      RTC_ALRMAR_HU)) >> 16);
 1860              		.loc 1 1275 0
 1861 0014 C3F30545 		ubfx	r5, r3, #16, #6
1277:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****                                                      RTC_ALRMAR_MNU)) >> 8);
 1862              		.loc 1 1277 0
 1863 0018 C3F30624 		ubfx	r4, r3, #8, #7
1282:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_AlarmStruct->RTC_AlarmDateWeekDaySel = (uint32_t)(tmpreg & RTC_ALRMAR_WDSEL);
 1864              		.loc 1 1282 0
 1865 001c C3F30561 		ubfx	r1, r3, #24, #6
 1866              	.LVL166:
1283:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_AlarmStruct->RTC_AlarmMask = (uint32_t)(tmpreg & RTC_AlarmMask_All);
 1867              		.loc 1 1283 0
 1868 0020 03F0804C 		and	ip, r3, #1073741824
1279:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****                                                      RTC_ALRMAR_SU));
 1869              		.loc 1 1279 0
 1870 0024 06F07F07 		and	r7, r6, #127
1281:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_AlarmStruct->RTC_AlarmDateWeekDay = (uint32_t)((tmpreg & (RTC_ALRMAR_DT | RTC_ALRMAR_DU)) >> 
 1871              		.loc 1 1281 0
 1872 0028 4FEA1E4E 		lsr	lr, lr, #16
1284:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 1873              		.loc 1 1284 0
 1874 002c 03F08033 		and	r3, r3, #-2139062144
 1875              	.LVL167:
1279:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****                                                      RTC_ALRMAR_SU));
 1876              		.loc 1 1279 0
 1877 0030 9770     		strb	r7, [r2, #2]
1281:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_AlarmStruct->RTC_AlarmDateWeekDay = (uint32_t)((tmpreg & (RTC_ALRMAR_DT | RTC_ALRMAR_DU)) >> 
 1878              		.loc 1 1281 0
 1879 0032 82F803E0 		strb	lr, [r2, #3]
1275:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****                                                      RTC_ALRMAR_HU)) >> 16);
 1880              		.loc 1 1275 0
 1881 0036 1570     		strb	r5, [r2]
1277:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****                                                      RTC_ALRMAR_MNU)) >> 8);
 1882              		.loc 1 1277 0
 1883 0038 5470     		strb	r4, [r2, #1]
1282:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_AlarmStruct->RTC_AlarmDateWeekDaySel = (uint32_t)(tmpreg & RTC_ALRMAR_WDSEL);
 1884              		.loc 1 1282 0
 1885 003a 1173     		strb	r1, [r2, #12]
1283:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_AlarmStruct->RTC_AlarmMask = (uint32_t)(tmpreg & RTC_AlarmMask_All);
 1886              		.loc 1 1283 0
 1887 003c C2F808C0 		str	ip, [r2, #8]
1284:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 1888              		.loc 1 1284 0
 1889 0040 5360     		str	r3, [r2, #4]
1286:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 1890              		.loc 1 1286 0
 1891 0042 00BB     		cbnz	r0, .L176
 1892              	.LVL168:
 1893              	.LBB176:
 1894              	.LBB177:
2745:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   return (tmp + (Value & (uint8_t)0x0F));
 1895              		.loc 1 2745 0
 1896 0044 4FEA151E 		lsr	lr, r5, #4
 1897              	.LBE177:
 1898              	.LBE176:
 1899              	.LBB180:
 1900              	.LBB181:
 1901 0048 2009     		lsrs	r0, r4, #4
 1902              	.LVL169:
 1903              	.LBE181:
 1904              	.LBE180:
 1905              	.LBB184:
 1906              	.LBB185:
 1907 004a 0B09     		lsrs	r3, r1, #4
 1908              	.LBE185:
 1909              	.LBE184:
 1910              	.LBB188:
 1911              	.LBB189:
 1912 004c 3F09     		lsrs	r7, r7, #4
 1913 004e 07EB8707 		add	r7, r7, r7, lsl #2
 1914              		.loc 1 2746 0
 1915 0052 06F00F06 		and	r6, r6, #15
 1916              	.LBE189:
 1917              	.LBE188:
 1918              	.LBB191:
 1919              	.LBB178:
2745:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   return (tmp + (Value & (uint8_t)0x0F));
 1920              		.loc 1 2745 0
 1921 0056 0EEB8E0E 		add	lr, lr, lr, lsl #2
 1922              		.loc 1 2746 0
 1923 005a 05F00F05 		and	r5, r5, #15
 1924              	.LVL170:
 1925              	.LBE178:
 1926              	.LBE191:
 1927              	.LBB192:
 1928              	.LBB182:
2745:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   return (tmp + (Value & (uint8_t)0x0F));
 1929              		.loc 1 2745 0
 1930 005e 00EB8000 		add	r0, r0, r0, lsl #2
 1931              		.loc 1 2746 0
 1932 0062 04F00F04 		and	r4, r4, #15
 1933              	.LBE182:
 1934              	.LBE192:
 1935              	.LBB193:
 1936              	.LBB186:
2745:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   return (tmp + (Value & (uint8_t)0x0F));
 1937              		.loc 1 2745 0
 1938 0066 03EB8303 		add	r3, r3, r3, lsl #2
 1939              		.loc 1 2746 0
 1940 006a 01F00F01 		and	r1, r1, #15
 1941              	.LBE186:
 1942              	.LBE193:
 1943              	.LBB194:
 1944              	.LBB190:
 1945 006e 06EB4707 		add	r7, r6, r7, lsl #1
 1946              	.LBE190:
 1947              	.LBE194:
 1948              	.LBB195:
 1949              	.LBB179:
 1950 0072 05EB4E05 		add	r5, r5, lr, lsl #1
 1951              	.LBE179:
 1952              	.LBE195:
 1953              	.LBB196:
 1954              	.LBB183:
 1955 0076 04EB4004 		add	r4, r4, r0, lsl #1
 1956              	.LBE183:
 1957              	.LBE196:
 1958              	.LBB197:
 1959              	.LBB187:
 1960 007a 01EB4301 		add	r1, r1, r3, lsl #1
 1961              	.LBE187:
 1962              	.LBE197:
1292:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****                                                         RTC_AlarmTime.RTC_Seconds);
 1963              		.loc 1 1292 0
 1964 007e 9770     		strb	r7, [r2, #2]
1288:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****                                                         RTC_AlarmTime.RTC_Hours);
 1965              		.loc 1 1288 0
 1966 0080 1570     		strb	r5, [r2]
 1967              	.LVL171:
1290:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****                                                         RTC_AlarmTime.RTC_Minutes);
 1968              		.loc 1 1290 0
 1969 0082 5470     		strb	r4, [r2, #1]
 1970              	.LVL172:
1294:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }  
 1971              		.loc 1 1294 0
 1972 0084 1173     		strb	r1, [r2, #12]
 1973              	.L176:
 1974 0086 F0BD     		pop	{r4, r5, r6, r7, pc}
 1975              	.L182:
 1976              		.align	2
 1977              	.L181:
 1978 0088 00280040 		.word	1073752064
 1979              		.cfi_endproc
 1980              	.LFE128:
 1982              		.section	.text.RTC_AlarmCmd,"ax",%progbits
 1983              		.align	2
 1984              		.global	RTC_AlarmCmd
 1985              		.thumb
 1986              		.thumb_func
 1988              	RTC_AlarmCmd:
 1989              	.LFB129:
1311:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   __IO uint32_t alarmcounter = 0x00;
 1990              		.loc 1 1311 0
 1991              		.cfi_startproc
 1992              		@ args = 0, pretend = 0, frame = 8
 1993              		@ frame_needed = 0, uses_anonymous_args = 0
 1994              		@ link register save eliminated.
 1995              	.LVL173:
 1996 0000 30B4     		push	{r4, r5}
 1997              	.LCFI20:
 1998              		.cfi_def_cfa_offset 8
 1999              		.cfi_offset 4, -8
 2000              		.cfi_offset 5, -4
1321:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 2001              		.loc 1 1321 0
 2002 0002 154B     		ldr	r3, .L196
1311:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   __IO uint32_t alarmcounter = 0x00;
 2003              		.loc 1 1311 0
 2004 0004 82B0     		sub	sp, sp, #8
 2005              	.LCFI21:
 2006              		.cfi_def_cfa_offset 16
1322:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 2007              		.loc 1 1322 0
 2008 0006 5322     		movs	r2, #83
1312:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   uint32_t alarmstatus = 0x00;
 2009              		.loc 1 1312 0
 2010 0008 0025     		movs	r5, #0
1321:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 2011              		.loc 1 1321 0
 2012 000a CA24     		movs	r4, #202
1312:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   uint32_t alarmstatus = 0x00;
 2013              		.loc 1 1312 0
 2014 000c 0195     		str	r5, [sp, #4]
 2015              	.LVL174:
1321:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 2016              		.loc 1 1321 0
 2017 000e 5C62     		str	r4, [r3, #36]
1322:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 2018              		.loc 1 1322 0
 2019 0010 5A62     		str	r2, [r3, #36]
1327:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 2020              		.loc 1 1327 0
 2021 0012 9A68     		ldr	r2, [r3, #8]
1325:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 2022              		.loc 1 1325 0
 2023 0014 E1B9     		cbnz	r1, .L194
1334:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****    
 2024              		.loc 1 1334 0
 2025 0016 22EA0002 		bic	r2, r2, r0
 2026 001a 9A60     		str	r2, [r3, #8]
 2027 001c 000A     		lsrs	r0, r0, #8
 2028              	.LVL175:
1339:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       alarmcounter++;  
 2029              		.loc 1 1339 0
 2030 001e 1946     		mov	r1, r3
 2031              	.LVL176:
 2032 0020 00E0     		b	.L187
 2033              	.LVL177:
 2034              	.L195:
1341:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     
 2035              		.loc 1 1341 0 discriminator 1
 2036 0022 4AB9     		cbnz	r2, .L186
 2037              	.LVL178:
 2038              	.L187:
1339:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       alarmcounter++;  
 2039              		.loc 1 1339 0 discriminator 2
 2040 0024 CA68     		ldr	r2, [r1, #12]
1340:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     } while((alarmcounter != INITMODE_TIMEOUT) && (alarmstatus == 0x00));
 2041              		.loc 1 1340 0 discriminator 2
 2042 0026 019B     		ldr	r3, [sp, #4]
 2043 0028 0133     		adds	r3, r3, #1
 2044 002a 0193     		str	r3, [sp, #4]
1341:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     
 2045              		.loc 1 1341 0 discriminator 2
 2046 002c 019B     		ldr	r3, [sp, #4]
 2047 002e B3F5803F 		cmp	r3, #65536
1339:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       alarmcounter++;  
 2048              		.loc 1 1339 0 discriminator 2
 2049 0032 02EA0002 		and	r2, r2, r0
 2050              	.LVL179:
1341:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     
 2051              		.loc 1 1341 0 discriminator 2
 2052 0036 F4D1     		bne	.L195
 2053              	.L186:
1343:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
 2054              		.loc 1 1343 0
 2055 0038 074B     		ldr	r3, .L196
 2056 003a DB68     		ldr	r3, [r3, #12]
 2057 003c 1842     		tst	r0, r3
1329:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
 2058              		.loc 1 1329 0
 2059 003e 14BF     		ite	ne
 2060 0040 0120     		movne	r0, #1
 2061 0042 0020     		moveq	r0, #0
 2062              	.LVL180:
 2063              	.L185:
1354:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
 2064              		.loc 1 1354 0
 2065 0044 044B     		ldr	r3, .L196
 2066 0046 FF22     		movs	r2, #255
 2067 0048 5A62     		str	r2, [r3, #36]
1357:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 2068              		.loc 1 1357 0
 2069 004a 02B0     		add	sp, sp, #8
 2070              	.LCFI22:
 2071              		.cfi_remember_state
 2072              		.cfi_def_cfa_offset 8
 2073              		@ sp needed
 2074 004c 30BC     		pop	{r4, r5}
 2075              	.LCFI23:
 2076              		.cfi_restore 5
 2077              		.cfi_restore 4
 2078              		.cfi_def_cfa_offset 0
 2079 004e 7047     		bx	lr
 2080              	.LVL181:
 2081              	.L194:
 2082              	.LCFI24:
 2083              		.cfi_restore_state
1327:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 2084              		.loc 1 1327 0
 2085 0050 1043     		orrs	r0, r0, r2
 2086              	.LVL182:
 2087 0052 9860     		str	r0, [r3, #8]
 2088              	.LVL183:
1329:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
 2089              		.loc 1 1329 0
 2090 0054 0120     		movs	r0, #1
 2091 0056 F5E7     		b	.L185
 2092              	.L197:
 2093              		.align	2
 2094              	.L196:
 2095 0058 00280040 		.word	1073752064
 2096              		.cfi_endproc
 2097              	.LFE129:
 2099              		.section	.text.RTC_AlarmSubSecondConfig,"ax",%progbits
 2100              		.align	2
 2101              		.global	RTC_AlarmSubSecondConfig
 2102              		.thumb
 2103              		.thumb_func
 2105              	RTC_AlarmSubSecondConfig:
 2106              	.LFB130:
1405:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   uint32_t tmpreg = 0;
 2107              		.loc 1 1405 0
 2108              		.cfi_startproc
 2109              		@ args = 0, pretend = 0, frame = 0
 2110              		@ frame_needed = 0, uses_anonymous_args = 0
 2111              		@ link register save eliminated.
 2112              	.LVL184:
 2113 0000 30B4     		push	{r4, r5}
 2114              	.LCFI25:
 2115              		.cfi_def_cfa_offset 8
 2116              		.cfi_offset 4, -8
 2117              		.cfi_offset 5, -4
1414:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 2118              		.loc 1 1414 0
 2119 0002 084B     		ldr	r3, .L202
1418:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
 2120              		.loc 1 1418 0
 2121 0004 0A43     		orrs	r2, r2, r1
 2122              	.LVL185:
1414:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 2123              		.loc 1 1414 0
 2124 0006 CA25     		movs	r5, #202
1415:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
 2125              		.loc 1 1415 0
 2126 0008 5324     		movs	r4, #83
1420:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 2127              		.loc 1 1420 0
 2128 000a B0F5807F 		cmp	r0, #256
1414:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 2129              		.loc 1 1414 0
 2130 000e 5D62     		str	r5, [r3, #36]
1415:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
 2131              		.loc 1 1415 0
 2132 0010 5C62     		str	r4, [r3, #36]
1423:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
 2133              		.loc 1 1423 0
 2134 0012 0CBF     		ite	eq
 2135 0014 5A64     		streq	r2, [r3, #68]
1428:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
 2136              		.loc 1 1428 0
 2137 0016 9A64     		strne	r2, [r3, #72]
1432:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 2138              		.loc 1 1432 0
 2139 0018 024B     		ldr	r3, .L202
 2140 001a FF22     		movs	r2, #255
 2141              	.LVL186:
 2142 001c 5A62     		str	r2, [r3, #36]
1434:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 2143              		.loc 1 1434 0
 2144 001e 30BC     		pop	{r4, r5}
 2145              	.LCFI26:
 2146              		.cfi_restore 5
 2147              		.cfi_restore 4
 2148              		.cfi_def_cfa_offset 0
 2149 0020 7047     		bx	lr
 2150              	.L203:
 2151 0022 00BF     		.align	2
 2152              	.L202:
 2153 0024 00280040 		.word	1073752064
 2154              		.cfi_endproc
 2155              	.LFE130:
 2157              		.section	.text.RTC_GetAlarmSubSecond,"ax",%progbits
 2158              		.align	2
 2159              		.global	RTC_GetAlarmSubSecond
 2160              		.thumb
 2161              		.thumb_func
 2163              	RTC_GetAlarmSubSecond:
 2164              	.LFB131:
1446:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   uint32_t tmpreg = 0;
 2165              		.loc 1 1446 0
 2166              		.cfi_startproc
 2167              		@ args = 0, pretend = 0, frame = 0
 2168              		@ frame_needed = 0, uses_anonymous_args = 0
 2169              		@ link register save eliminated.
 2170              	.LVL187:
1452:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
 2171              		.loc 1 1452 0
 2172 0000 044B     		ldr	r3, .L207
1450:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 2173              		.loc 1 1450 0
 2174 0002 B0F5807F 		cmp	r0, #256
1452:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
 2175              		.loc 1 1452 0
 2176 0006 0CBF     		ite	eq
 2177 0008 586C     		ldreq	r0, [r3, #68]
 2178              	.LVL188:
1456:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   } 
 2179              		.loc 1 1456 0
 2180 000a 986C     		ldrne	r0, [r3, #72]
 2181 000c C0F30E00 		ubfx	r0, r0, #0, #15
 2182              	.LVL189:
1460:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 2183              		.loc 1 1460 0
 2184 0010 7047     		bx	lr
 2185              	.L208:
 2186 0012 00BF     		.align	2
 2187              	.L207:
 2188 0014 00280040 		.word	1073752064
 2189              		.cfi_endproc
 2190              	.LFE131:
 2192              		.section	.text.RTC_WakeUpClockConfig,"ax",%progbits
 2193              		.align	2
 2194              		.global	RTC_WakeUpClockConfig
 2195              		.thumb
 2196              		.thumb_func
 2198              	RTC_WakeUpClockConfig:
 2199              	.LFB132:
1495:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
 2200              		.loc 1 1495 0
 2201              		.cfi_startproc
 2202              		@ args = 0, pretend = 0, frame = 0
 2203              		@ frame_needed = 0, uses_anonymous_args = 0
 2204              		@ link register save eliminated.
 2205              	.LVL190:
1500:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 2206              		.loc 1 1500 0
 2207 0000 074B     		ldr	r3, .L210
 2208 0002 CA21     		movs	r1, #202
1501:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 2209              		.loc 1 1501 0
 2210 0004 5322     		movs	r2, #83
1500:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 2211              		.loc 1 1500 0
 2212 0006 5962     		str	r1, [r3, #36]
1501:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 2213              		.loc 1 1501 0
 2214 0008 5A62     		str	r2, [r3, #36]
1504:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 2215              		.loc 1 1504 0
 2216 000a 9A68     		ldr	r2, [r3, #8]
 2217 000c 22F00702 		bic	r2, r2, #7
 2218 0010 9A60     		str	r2, [r3, #8]
1507:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
 2219              		.loc 1 1507 0
 2220 0012 9A68     		ldr	r2, [r3, #8]
1510:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 2221              		.loc 1 1510 0
 2222 0014 FF21     		movs	r1, #255
1507:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
 2223              		.loc 1 1507 0
 2224 0016 1043     		orrs	r0, r0, r2
 2225              	.LVL191:
 2226 0018 9860     		str	r0, [r3, #8]
1510:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 2227              		.loc 1 1510 0
 2228 001a 5962     		str	r1, [r3, #36]
 2229 001c 7047     		bx	lr
 2230              	.L211:
 2231 001e 00BF     		.align	2
 2232              	.L210:
 2233 0020 00280040 		.word	1073752064
 2234              		.cfi_endproc
 2235              	.LFE132:
 2237              		.section	.text.RTC_SetWakeUpCounter,"ax",%progbits
 2238              		.align	2
 2239              		.global	RTC_SetWakeUpCounter
 2240              		.thumb
 2241              		.thumb_func
 2243              	RTC_SetWakeUpCounter:
 2244              	.LFB133:
1522:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
 2245              		.loc 1 1522 0
 2246              		.cfi_startproc
 2247              		@ args = 0, pretend = 0, frame = 0
 2248              		@ frame_needed = 0, uses_anonymous_args = 0
 2249              		@ link register save eliminated.
 2250              	.LVL192:
1527:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 2251              		.loc 1 1527 0
 2252 0000 054B     		ldr	r3, .L214
1522:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
 2253              		.loc 1 1522 0
 2254 0002 10B4     		push	{r4}
 2255              	.LCFI27:
 2256              		.cfi_def_cfa_offset 4
 2257              		.cfi_offset 4, -4
1528:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
 2258              		.loc 1 1528 0
 2259 0004 5321     		movs	r1, #83
1527:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 2260              		.loc 1 1527 0
 2261 0006 CA24     		movs	r4, #202
1534:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 2262              		.loc 1 1534 0
 2263 0008 FF22     		movs	r2, #255
1527:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 2264              		.loc 1 1527 0
 2265 000a 5C62     		str	r4, [r3, #36]
1528:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
 2266              		.loc 1 1528 0
 2267 000c 5962     		str	r1, [r3, #36]
1535:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 2268              		.loc 1 1535 0
 2269 000e 5DF8044B 		ldr	r4, [sp], #4
 2270              	.LCFI28:
 2271              		.cfi_restore 4
 2272              		.cfi_def_cfa_offset 0
1531:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
 2273              		.loc 1 1531 0
 2274 0012 5861     		str	r0, [r3, #20]
1534:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 2275              		.loc 1 1534 0
 2276 0014 5A62     		str	r2, [r3, #36]
1535:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 2277              		.loc 1 1535 0
 2278 0016 7047     		bx	lr
 2279              	.L215:
 2280              		.align	2
 2281              	.L214:
 2282 0018 00280040 		.word	1073752064
 2283              		.cfi_endproc
 2284              	.LFE133:
 2286              		.section	.text.RTC_GetWakeUpCounter,"ax",%progbits
 2287              		.align	2
 2288              		.global	RTC_GetWakeUpCounter
 2289              		.thumb
 2290              		.thumb_func
 2292              	RTC_GetWakeUpCounter:
 2293              	.LFB134:
1543:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Get the counter value */
 2294              		.loc 1 1543 0
 2295              		.cfi_startproc
 2296              		@ args = 0, pretend = 0, frame = 0
 2297              		@ frame_needed = 0, uses_anonymous_args = 0
 2298              		@ link register save eliminated.
1545:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 2299              		.loc 1 1545 0
 2300 0000 014B     		ldr	r3, .L217
 2301 0002 5869     		ldr	r0, [r3, #20]
1546:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 2302              		.loc 1 1546 0
 2303 0004 80B2     		uxth	r0, r0
 2304 0006 7047     		bx	lr
 2305              	.L218:
 2306              		.align	2
 2307              	.L217:
 2308 0008 00280040 		.word	1073752064
 2309              		.cfi_endproc
 2310              	.LFE134:
 2312              		.section	.text.RTC_WakeUpCmd,"ax",%progbits
 2313              		.align	2
 2314              		.global	RTC_WakeUpCmd
 2315              		.thumb
 2316              		.thumb_func
 2318              	RTC_WakeUpCmd:
 2319              	.LFB135:
1555:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   __IO uint32_t wutcounter = 0x00;
 2320              		.loc 1 1555 0
 2321              		.cfi_startproc
 2322              		@ args = 0, pretend = 0, frame = 8
 2323              		@ frame_needed = 0, uses_anonymous_args = 0
 2324              		@ link register save eliminated.
 2325              	.LVL193:
 2326 0000 10B4     		push	{r4}
 2327              	.LCFI29:
 2328              		.cfi_def_cfa_offset 4
 2329              		.cfi_offset 4, -4
1564:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 2330              		.loc 1 1564 0
 2331 0002 1449     		ldr	r1, .L232
1555:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   __IO uint32_t wutcounter = 0x00;
 2332              		.loc 1 1555 0
 2333 0004 83B0     		sub	sp, sp, #12
 2334              	.LCFI30:
 2335              		.cfi_def_cfa_offset 16
1565:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 2336              		.loc 1 1565 0
 2337 0006 5323     		movs	r3, #83
1556:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   uint32_t wutwfstatus = 0x00;
 2338              		.loc 1 1556 0
 2339 0008 0024     		movs	r4, #0
1564:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 2340              		.loc 1 1564 0
 2341 000a CA22     		movs	r2, #202
1556:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   uint32_t wutwfstatus = 0x00;
 2342              		.loc 1 1556 0
 2343 000c 0194     		str	r4, [sp, #4]
 2344              	.LVL194:
1564:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 2345              		.loc 1 1564 0
 2346 000e 4A62     		str	r2, [r1, #36]
1565:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 2347              		.loc 1 1565 0
 2348 0010 4B62     		str	r3, [r1, #36]
1570:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     status = SUCCESS;    
 2349              		.loc 1 1570 0
 2350 0012 8B68     		ldr	r3, [r1, #8]
1567:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 2351              		.loc 1 1567 0
 2352 0014 C8B9     		cbnz	r0, .L230
1576:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Wait till RTC WUTWF flag is set and if Time out is reached exit */
 2353              		.loc 1 1576 0
 2354 0016 23F48063 		bic	r3, r3, #1024
 2355 001a 8B60     		str	r3, [r1, #8]
 2356 001c 00E0     		b	.L223
 2357              	.LVL195:
 2358              	.L231:
1582:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     
 2359              		.loc 1 1582 0 discriminator 1
 2360 001e 4AB9     		cbnz	r2, .L222
 2361              	.LVL196:
 2362              	.L223:
1580:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       wutcounter++;  
 2363              		.loc 1 1580 0 discriminator 2
 2364 0020 CA68     		ldr	r2, [r1, #12]
1581:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     } while((wutcounter != INITMODE_TIMEOUT) && (wutwfstatus == 0x00));
 2365              		.loc 1 1581 0 discriminator 2
 2366 0022 019B     		ldr	r3, [sp, #4]
 2367 0024 0133     		adds	r3, r3, #1
 2368 0026 0193     		str	r3, [sp, #4]
1582:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     
 2369              		.loc 1 1582 0 discriminator 2
 2370 0028 019B     		ldr	r3, [sp, #4]
 2371 002a B3F5803F 		cmp	r3, #65536
1580:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       wutcounter++;  
 2372              		.loc 1 1580 0 discriminator 2
 2373 002e 02F00402 		and	r2, r2, #4
 2374              	.LVL197:
1582:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     
 2375              		.loc 1 1582 0 discriminator 2
 2376 0032 F4D1     		bne	.L231
 2377              	.L222:
1584:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
 2378              		.loc 1 1584 0
 2379 0034 074B     		ldr	r3, .L232
 2380 0036 D868     		ldr	r0, [r3, #12]
 2381              	.LVL198:
1571:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
 2382              		.loc 1 1571 0
 2383 0038 C0F38000 		ubfx	r0, r0, #2, #1
 2384              	.LVL199:
 2385              	.L221:
1595:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
 2386              		.loc 1 1595 0
 2387 003c 054B     		ldr	r3, .L232
 2388 003e FF22     		movs	r2, #255
 2389 0040 5A62     		str	r2, [r3, #36]
1598:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 2390              		.loc 1 1598 0
 2391 0042 03B0     		add	sp, sp, #12
 2392              	.LCFI31:
 2393              		.cfi_remember_state
 2394              		.cfi_def_cfa_offset 4
 2395              		@ sp needed
 2396 0044 5DF8044B 		ldr	r4, [sp], #4
 2397              	.LCFI32:
 2398              		.cfi_restore 4
 2399              		.cfi_def_cfa_offset 0
 2400 0048 7047     		bx	lr
 2401              	.LVL200:
 2402              	.L230:
 2403              	.LCFI33:
 2404              		.cfi_restore_state
1570:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     status = SUCCESS;    
 2405              		.loc 1 1570 0
 2406 004a 43F48063 		orr	r3, r3, #1024
 2407 004e 8B60     		str	r3, [r1, #8]
 2408              	.LVL201:
1571:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
 2409              		.loc 1 1571 0
 2410 0050 0120     		movs	r0, #1
 2411              	.LVL202:
 2412 0052 F3E7     		b	.L221
 2413              	.L233:
 2414              		.align	2
 2415              	.L232:
 2416 0054 00280040 		.word	1073752064
 2417              		.cfi_endproc
 2418              	.LFE135:
 2420              		.section	.text.RTC_DayLightSavingConfig,"ax",%progbits
 2421              		.align	2
 2422              		.global	RTC_DayLightSavingConfig
 2423              		.thumb
 2424              		.thumb_func
 2426              	RTC_DayLightSavingConfig:
 2427              	.LFB136:
1632:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
 2428              		.loc 1 1632 0
 2429              		.cfi_startproc
 2430              		@ args = 0, pretend = 0, frame = 0
 2431              		@ frame_needed = 0, uses_anonymous_args = 0
 2432              		@ link register save eliminated.
 2433              	.LVL203:
1638:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 2434              		.loc 1 1638 0
 2435 0000 094B     		ldr	r3, .L236
1632:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
 2436              		.loc 1 1632 0
 2437 0002 10B4     		push	{r4}
 2438              	.LCFI34:
 2439              		.cfi_def_cfa_offset 4
 2440              		.cfi_offset 4, -4
1639:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 2441              		.loc 1 1639 0
 2442 0004 5322     		movs	r2, #83
1638:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 2443              		.loc 1 1638 0
 2444 0006 CA24     		movs	r4, #202
 2445 0008 5C62     		str	r4, [r3, #36]
1639:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 2446              		.loc 1 1639 0
 2447 000a 5A62     		str	r2, [r3, #36]
1642:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 2448              		.loc 1 1642 0
 2449 000c 9A68     		ldr	r2, [r3, #8]
1649:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 2450              		.loc 1 1649 0
 2451 000e 5DF8044B 		ldr	r4, [sp], #4
 2452              	.LCFI35:
 2453              		.cfi_restore 4
 2454              		.cfi_def_cfa_offset 0
1642:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 2455              		.loc 1 1642 0
 2456 0012 22F48022 		bic	r2, r2, #262144
 2457 0016 9A60     		str	r2, [r3, #8]
1645:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 2458              		.loc 1 1645 0
 2459 0018 9A68     		ldr	r2, [r3, #8]
 2460 001a 1143     		orrs	r1, r1, r2
 2461              	.LVL204:
 2462 001c 0843     		orrs	r0, r0, r1
 2463              	.LVL205:
1648:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 2464              		.loc 1 1648 0
 2465 001e FF22     		movs	r2, #255
1645:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 2466              		.loc 1 1645 0
 2467 0020 9860     		str	r0, [r3, #8]
1648:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 2468              		.loc 1 1648 0
 2469 0022 5A62     		str	r2, [r3, #36]
1649:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 2470              		.loc 1 1649 0
 2471 0024 7047     		bx	lr
 2472              	.L237:
 2473 0026 00BF     		.align	2
 2474              	.L236:
 2475 0028 00280040 		.word	1073752064
 2476              		.cfi_endproc
 2477              	.LFE136:
 2479              		.section	.text.RTC_GetStoreOperation,"ax",%progbits
 2480              		.align	2
 2481              		.global	RTC_GetStoreOperation
 2482              		.thumb
 2483              		.thumb_func
 2485              	RTC_GetStoreOperation:
 2486              	.LFB137:
1659:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   return (RTC->CR & RTC_CR_BCK);
 2487              		.loc 1 1659 0
 2488              		.cfi_startproc
 2489              		@ args = 0, pretend = 0, frame = 0
 2490              		@ frame_needed = 0, uses_anonymous_args = 0
 2491              		@ link register save eliminated.
1660:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 2492              		.loc 1 1660 0
 2493 0000 024B     		ldr	r3, .L239
 2494 0002 9868     		ldr	r0, [r3, #8]
1661:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 2495              		.loc 1 1661 0
 2496 0004 00F48020 		and	r0, r0, #262144
 2497 0008 7047     		bx	lr
 2498              	.L240:
 2499 000a 00BF     		.align	2
 2500              	.L239:
 2501 000c 00280040 		.word	1073752064
 2502              		.cfi_endproc
 2503              	.LFE137:
 2505              		.section	.text.RTC_OutputConfig,"ax",%progbits
 2506              		.align	2
 2507              		.global	RTC_OutputConfig
 2508              		.thumb
 2509              		.thumb_func
 2511              	RTC_OutputConfig:
 2512              	.LFB138:
1698:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
 2513              		.loc 1 1698 0
 2514              		.cfi_startproc
 2515              		@ args = 0, pretend = 0, frame = 0
 2516              		@ frame_needed = 0, uses_anonymous_args = 0
 2517              		@ link register save eliminated.
 2518              	.LVL206:
1704:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 2519              		.loc 1 1704 0
 2520 0000 094B     		ldr	r3, .L243
1698:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
 2521              		.loc 1 1698 0
 2522 0002 10B4     		push	{r4}
 2523              	.LCFI36:
 2524              		.cfi_def_cfa_offset 4
 2525              		.cfi_offset 4, -4
1705:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 2526              		.loc 1 1705 0
 2527 0004 5322     		movs	r2, #83
1704:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 2528              		.loc 1 1704 0
 2529 0006 CA24     		movs	r4, #202
 2530 0008 5C62     		str	r4, [r3, #36]
1705:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 2531              		.loc 1 1705 0
 2532 000a 5A62     		str	r2, [r3, #36]
1708:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 2533              		.loc 1 1708 0
 2534 000c 9A68     		ldr	r2, [r3, #8]
1715:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 2535              		.loc 1 1715 0
 2536 000e 5DF8044B 		ldr	r4, [sp], #4
 2537              	.LCFI37:
 2538              		.cfi_restore 4
 2539              		.cfi_def_cfa_offset 0
1708:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 2540              		.loc 1 1708 0
 2541 0012 22F4E002 		bic	r2, r2, #7340032
 2542 0016 9A60     		str	r2, [r3, #8]
1711:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 2543              		.loc 1 1711 0
 2544 0018 9A68     		ldr	r2, [r3, #8]
 2545 001a 1143     		orrs	r1, r1, r2
 2546              	.LVL207:
 2547 001c 0843     		orrs	r0, r0, r1
 2548              	.LVL208:
1714:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 2549              		.loc 1 1714 0
 2550 001e FF22     		movs	r2, #255
1711:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 2551              		.loc 1 1711 0
 2552 0020 9860     		str	r0, [r3, #8]
1714:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 2553              		.loc 1 1714 0
 2554 0022 5A62     		str	r2, [r3, #36]
1715:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 2555              		.loc 1 1715 0
 2556 0024 7047     		bx	lr
 2557              	.L244:
 2558 0026 00BF     		.align	2
 2559              	.L243:
 2560 0028 00280040 		.word	1073752064
 2561              		.cfi_endproc
 2562              	.LFE138:
 2564              		.section	.text.RTC_CoarseCalibConfig,"ax",%progbits
 2565              		.align	2
 2566              		.global	RTC_CoarseCalibConfig
 2567              		.thumb
 2568              		.thumb_func
 2570              	RTC_CoarseCalibConfig:
 2571              	.LFB139:
1752:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   ErrorStatus status = ERROR;
 2572              		.loc 1 1752 0
 2573              		.cfi_startproc
 2574              		@ args = 0, pretend = 0, frame = 0
 2575              		@ frame_needed = 0, uses_anonymous_args = 0
 2576              	.LVL209:
 2577 0000 70B5     		push	{r4, r5, r6, lr}
 2578              	.LCFI38:
 2579              		.cfi_def_cfa_offset 16
 2580              		.cfi_offset 4, -16
 2581              		.cfi_offset 5, -12
 2582              		.cfi_offset 6, -8
 2583              		.cfi_offset 14, -4
1760:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 2584              		.loc 1 1760 0
 2585 0002 0A4C     		ldr	r4, .L249
 2586 0004 CA22     		movs	r2, #202
1761:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 2587              		.loc 1 1761 0
 2588 0006 5323     		movs	r3, #83
1760:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 2589              		.loc 1 1760 0
 2590 0008 6262     		str	r2, [r4, #36]
1761:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 2591              		.loc 1 1761 0
 2592 000a 6362     		str	r3, [r4, #36]
1752:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   ErrorStatus status = ERROR;
 2593              		.loc 1 1752 0
 2594 000c 0646     		mov	r6, r0
 2595 000e 0D46     		mov	r5, r1
1764:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 2596              		.loc 1 1764 0
 2597 0010 FFF7FEFF 		bl	RTC_EnterInitMode
 2598              	.LVL210:
 2599 0014 30B1     		cbz	r0, .L246
1771:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Exit Initialization mode */
 2600              		.loc 1 1771 0
 2601 0016 3543     		orrs	r5, r5, r6
 2602              	.LVL211:
 2603 0018 A561     		str	r5, [r4, #24]
 2604              	.LBB198:
 2605              	.LBB199:
 600:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 2606              		.loc 1 600 0
 2607 001a E368     		ldr	r3, [r4, #12]
 2608 001c 23F08003 		bic	r3, r3, #128
 2609 0020 E360     		str	r3, [r4, #12]
 2610              	.LVL212:
 2611              	.LBE199:
 2612              	.LBE198:
1775:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   } 
 2613              		.loc 1 1775 0
 2614 0022 0120     		movs	r0, #1
 2615              	.LVL213:
 2616              	.L246:
1779:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
 2617              		.loc 1 1779 0
 2618 0024 014B     		ldr	r3, .L249
 2619 0026 FF22     		movs	r2, #255
 2620 0028 5A62     		str	r2, [r3, #36]
1782:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 2621              		.loc 1 1782 0
 2622 002a 70BD     		pop	{r4, r5, r6, pc}
 2623              	.LVL214:
 2624              	.L250:
 2625              		.align	2
 2626              	.L249:
 2627 002c 00280040 		.word	1073752064
 2628              		.cfi_endproc
 2629              	.LFE139:
 2631              		.section	.text.RTC_CoarseCalibCmd,"ax",%progbits
 2632              		.align	2
 2633              		.global	RTC_CoarseCalibCmd
 2634              		.thumb
 2635              		.thumb_func
 2637              	RTC_CoarseCalibCmd:
 2638              	.LFB140:
1793:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   ErrorStatus status = ERROR;
 2639              		.loc 1 1793 0
 2640              		.cfi_startproc
 2641              		@ args = 0, pretend = 0, frame = 0
 2642              		@ frame_needed = 0, uses_anonymous_args = 0
 2643              	.LVL215:
 2644 0000 38B5     		push	{r3, r4, r5, lr}
 2645              	.LCFI39:
 2646              		.cfi_def_cfa_offset 16
 2647              		.cfi_offset 3, -16
 2648              		.cfi_offset 4, -12
 2649              		.cfi_offset 5, -8
 2650              		.cfi_offset 14, -4
1800:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 2651              		.loc 1 1800 0
 2652 0002 0E4C     		ldr	r4, .L258
 2653 0004 CA22     		movs	r2, #202
1801:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
 2654              		.loc 1 1801 0
 2655 0006 5323     		movs	r3, #83
1800:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 2656              		.loc 1 1800 0
 2657 0008 6262     		str	r2, [r4, #36]
1801:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
 2658              		.loc 1 1801 0
 2659 000a 6362     		str	r3, [r4, #36]
1793:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   ErrorStatus status = ERROR;
 2660              		.loc 1 1793 0
 2661 000c 0546     		mov	r5, r0
1804:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 2662              		.loc 1 1804 0
 2663 000e FFF7FEFF 		bl	RTC_EnterInitMode
 2664              	.LVL216:
 2665 0012 50B1     		cbz	r0, .L252
1813:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     }
 2666              		.loc 1 1813 0
 2667 0014 A368     		ldr	r3, [r4, #8]
1810:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
 2668              		.loc 1 1810 0
 2669 0016 65B9     		cbnz	r5, .L257
1818:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     }
 2670              		.loc 1 1818 0
 2671 0018 23F08003 		bic	r3, r3, #128
 2672 001c A360     		str	r3, [r4, #8]
 2673              	.L254:
 2674              	.LBB200:
 2675              	.LBB201:
 600:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 2676              		.loc 1 600 0
 2677 001e 074A     		ldr	r2, .L258
 2678 0020 D368     		ldr	r3, [r2, #12]
 2679 0022 23F08003 		bic	r3, r3, #128
 2680 0026 D360     		str	r3, [r2, #12]
 2681              	.LVL217:
 2682              	.LBE201:
 2683              	.LBE200:
1823:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   } 
 2684              		.loc 1 1823 0
 2685 0028 0120     		movs	r0, #1
 2686              	.LVL218:
 2687              	.L252:
1827:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
 2688              		.loc 1 1827 0
 2689 002a 044B     		ldr	r3, .L258
 2690 002c FF22     		movs	r2, #255
 2691 002e 5A62     		str	r2, [r3, #36]
1830:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 2692              		.loc 1 1830 0
 2693 0030 38BD     		pop	{r3, r4, r5, pc}
 2694              	.LVL219:
 2695              	.L257:
1813:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     }
 2696              		.loc 1 1813 0
 2697 0032 43F08003 		orr	r3, r3, #128
 2698 0036 A360     		str	r3, [r4, #8]
 2699 0038 F1E7     		b	.L254
 2700              	.L259:
 2701 003a 00BF     		.align	2
 2702              	.L258:
 2703 003c 00280040 		.word	1073752064
 2704              		.cfi_endproc
 2705              	.LFE140:
 2707              		.section	.text.RTC_CalibOutputCmd,"ax",%progbits
 2708              		.align	2
 2709              		.global	RTC_CalibOutputCmd
 2710              		.thumb
 2711              		.thumb_func
 2713              	RTC_CalibOutputCmd:
 2714              	.LFB141:
1839:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
 2715              		.loc 1 1839 0
 2716              		.cfi_startproc
 2717              		@ args = 0, pretend = 0, frame = 0
 2718              		@ frame_needed = 0, uses_anonymous_args = 0
 2719              		@ link register save eliminated.
 2720              	.LVL220:
1844:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 2721              		.loc 1 1844 0
 2722 0000 0A4B     		ldr	r3, .L264
1845:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
 2723              		.loc 1 1845 0
 2724 0002 5322     		movs	r2, #83
1844:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 2725              		.loc 1 1844 0
 2726 0004 CA21     		movs	r1, #202
 2727 0006 5962     		str	r1, [r3, #36]
1845:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
 2728              		.loc 1 1845 0
 2729 0008 5A62     		str	r2, [r3, #36]
1850:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
 2730              		.loc 1 1850 0
 2731 000a 9A68     		ldr	r2, [r3, #8]
1847:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 2732              		.loc 1 1847 0
 2733 000c 30B9     		cbnz	r0, .L263
1855:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
 2734              		.loc 1 1855 0
 2735 000e 22F40002 		bic	r2, r2, #8388608
 2736 0012 9A60     		str	r2, [r3, #8]
1859:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 2737              		.loc 1 1859 0
 2738 0014 054B     		ldr	r3, .L264
 2739 0016 FF22     		movs	r2, #255
 2740 0018 5A62     		str	r2, [r3, #36]
 2741 001a 7047     		bx	lr
 2742              	.L263:
1850:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
 2743              		.loc 1 1850 0
 2744 001c 42F40002 		orr	r2, r2, #8388608
 2745 0020 9A60     		str	r2, [r3, #8]
1859:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 2746              		.loc 1 1859 0
 2747 0022 024B     		ldr	r3, .L264
 2748 0024 FF22     		movs	r2, #255
 2749 0026 5A62     		str	r2, [r3, #36]
 2750 0028 7047     		bx	lr
 2751              	.L265:
 2752 002a 00BF     		.align	2
 2753              	.L264:
 2754 002c 00280040 		.word	1073752064
 2755              		.cfi_endproc
 2756              	.LFE141:
 2758              		.section	.text.RTC_CalibOutputConfig,"ax",%progbits
 2759              		.align	2
 2760              		.global	RTC_CalibOutputConfig
 2761              		.thumb
 2762              		.thumb_func
 2764              	RTC_CalibOutputConfig:
 2765              	.LFB142:
1871:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
 2766              		.loc 1 1871 0
 2767              		.cfi_startproc
 2768              		@ args = 0, pretend = 0, frame = 0
 2769              		@ frame_needed = 0, uses_anonymous_args = 0
 2770              		@ link register save eliminated.
 2771              	.LVL221:
1876:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 2772              		.loc 1 1876 0
 2773 0000 074B     		ldr	r3, .L267
 2774 0002 CA21     		movs	r1, #202
1877:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
 2775              		.loc 1 1877 0
 2776 0004 5322     		movs	r2, #83
1876:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 2777              		.loc 1 1876 0
 2778 0006 5962     		str	r1, [r3, #36]
1877:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
 2779              		.loc 1 1877 0
 2780 0008 5A62     		str	r2, [r3, #36]
1880:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 2781              		.loc 1 1880 0
 2782 000a 9A68     		ldr	r2, [r3, #8]
 2783 000c 22F40022 		bic	r2, r2, #524288
 2784 0010 9A60     		str	r2, [r3, #8]
1883:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 2785              		.loc 1 1883 0
 2786 0012 9A68     		ldr	r2, [r3, #8]
1886:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 2787              		.loc 1 1886 0
 2788 0014 FF21     		movs	r1, #255
1883:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 2789              		.loc 1 1883 0
 2790 0016 1043     		orrs	r0, r0, r2
 2791              	.LVL222:
 2792 0018 9860     		str	r0, [r3, #8]
1886:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 2793              		.loc 1 1886 0
 2794 001a 5962     		str	r1, [r3, #36]
 2795 001c 7047     		bx	lr
 2796              	.L268:
 2797 001e 00BF     		.align	2
 2798              	.L267:
 2799 0020 00280040 		.word	1073752064
 2800              		.cfi_endproc
 2801              	.LFE142:
 2803              		.section	.text.RTC_SmoothCalibConfig,"ax",%progbits
 2804              		.align	2
 2805              		.global	RTC_SmoothCalibConfig
 2806              		.thumb
 2807              		.thumb_func
 2809              	RTC_SmoothCalibConfig:
 2810              	.LFB143:
1909:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   ErrorStatus status = ERROR;
 2811              		.loc 1 1909 0
 2812              		.cfi_startproc
 2813              		@ args = 0, pretend = 0, frame = 0
 2814              		@ frame_needed = 0, uses_anonymous_args = 0
 2815              		@ link register save eliminated.
 2816              	.LVL223:
 2817 0000 30B4     		push	{r4, r5}
 2818              	.LCFI40:
 2819              		.cfi_def_cfa_offset 8
 2820              		.cfi_offset 4, -8
 2821              		.cfi_offset 5, -4
1919:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 2822              		.loc 1 1919 0
 2823 0002 114D     		ldr	r5, .L286
 2824 0004 CA24     		movs	r4, #202
1920:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
 2825              		.loc 1 1920 0
 2826 0006 5323     		movs	r3, #83
1919:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 2827              		.loc 1 1919 0
 2828 0008 6C62     		str	r4, [r5, #36]
1920:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
 2829              		.loc 1 1920 0
 2830 000a 6B62     		str	r3, [r5, #36]
1923:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 2831              		.loc 1 1923 0
 2832 000c EB68     		ldr	r3, [r5, #12]
 2833 000e DC03     		lsls	r4, r3, #15
 2834 0010 0AD5     		bpl	.L270
1926:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
 2835              		.loc 1 1926 0
 2836 0012 EB68     		ldr	r3, [r5, #12]
 2837 0014 DB03     		lsls	r3, r3, #15
 2838 0016 07D5     		bpl	.L270
 2839 0018 4FF40033 		mov	r3, #131072
 2840 001c 01E0     		b	.L271
 2841              	.LVL224:
 2842              	.L285:
1926:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
 2843              		.loc 1 1926 0 is_stmt 0 discriminator 1
 2844 001e 013B     		subs	r3, r3, #1
 2845              	.LVL225:
 2846 0020 02D0     		beq	.L270
 2847              	.LVL226:
 2848              	.L271:
1926:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
 2849              		.loc 1 1926 0
 2850 0022 EC68     		ldr	r4, [r5, #12]
 2851 0024 E403     		lsls	r4, r4, #15
 2852 0026 FAD4     		bmi	.L285
 2853              	.LVL227:
 2854              	.L270:
1933:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 2855              		.loc 1 1933 0 is_stmt 1
 2856 0028 074B     		ldr	r3, .L286
 2857 002a DC68     		ldr	r4, [r3, #12]
 2858 002c E403     		lsls	r4, r4, #15
 2859 002e 08D4     		bmi	.L273
 2860 0030 0A43     		orrs	r2, r2, r1
 2861              	.LVL228:
1936:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 2862              		.loc 1 1936 0
 2863 0032 1043     		orrs	r0, r0, r2
 2864              	.LVL229:
 2865 0034 D863     		str	r0, [r3, #60]
 2866              	.LVL230:
1938:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
 2867              		.loc 1 1938 0
 2868 0036 0120     		movs	r0, #1
 2869              	.LVL231:
 2870              	.L272:
1946:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
 2871              		.loc 1 1946 0
 2872 0038 034B     		ldr	r3, .L286
 2873 003a FF22     		movs	r2, #255
 2874 003c 5A62     		str	r2, [r3, #36]
1949:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 2875              		.loc 1 1949 0
 2876 003e 30BC     		pop	{r4, r5}
 2877              	.LCFI41:
 2878              		.cfi_remember_state
 2879              		.cfi_restore 5
 2880              		.cfi_restore 4
 2881              		.cfi_def_cfa_offset 0
 2882 0040 7047     		bx	lr
 2883              	.LVL232:
 2884              	.L273:
 2885              	.LCFI42:
 2886              		.cfi_restore_state
1942:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
 2887              		.loc 1 1942 0
 2888 0042 0020     		movs	r0, #0
 2889              	.LVL233:
 2890 0044 F8E7     		b	.L272
 2891              	.L287:
 2892 0046 00BF     		.align	2
 2893              	.L286:
 2894 0048 00280040 		.word	1073752064
 2895              		.cfi_endproc
 2896              	.LFE143:
 2898              		.section	.text.RTC_TimeStampCmd,"ax",%progbits
 2899              		.align	2
 2900              		.global	RTC_TimeStampCmd
 2901              		.thumb
 2902              		.thumb_func
 2904              	RTC_TimeStampCmd:
 2905              	.LFB144:
1983:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   uint32_t tmpreg = 0;
 2906              		.loc 1 1983 0
 2907              		.cfi_startproc
 2908              		@ args = 0, pretend = 0, frame = 0
 2909              		@ frame_needed = 0, uses_anonymous_args = 0
 2910              		@ link register save eliminated.
 2911              	.LVL234:
1991:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 2912              		.loc 1 1991 0
 2913 0000 0B4B     		ldr	r3, .L293
 2914 0002 9B68     		ldr	r3, [r3, #8]
 2915 0004 23F40063 		bic	r3, r3, #2048
1983:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   uint32_t tmpreg = 0;
 2916              		.loc 1 1983 0
 2917 0008 10B4     		push	{r4}
 2918              	.LCFI43:
 2919              		.cfi_def_cfa_offset 4
 2920              		.cfi_offset 4, -4
1991:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 2921              		.loc 1 1991 0
 2922 000a 23F00803 		bic	r3, r3, #8
 2923              	.LVL235:
1994:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 2924              		.loc 1 1994 0
 2925 000e 59B9     		cbnz	r1, .L292
2000:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
 2926              		.loc 1 2000 0
 2927 0010 0343     		orrs	r3, r3, r0
 2928              	.LVL236:
 2929              	.L290:
2004:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 2930              		.loc 1 2004 0
 2931 0012 074A     		ldr	r2, .L293
 2932 0014 CA24     		movs	r4, #202
2005:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 2933              		.loc 1 2005 0
 2934 0016 5320     		movs	r0, #83
 2935              	.LVL237:
2011:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 2936              		.loc 1 2011 0
 2937 0018 FF21     		movs	r1, #255
 2938              	.LVL238:
2004:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 2939              		.loc 1 2004 0
 2940 001a 5462     		str	r4, [r2, #36]
2005:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 2941              		.loc 1 2005 0
 2942 001c 5062     		str	r0, [r2, #36]
2012:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 2943              		.loc 1 2012 0
 2944 001e 5DF8044B 		ldr	r4, [sp], #4
 2945              	.LCFI44:
 2946              		.cfi_remember_state
 2947              		.cfi_restore 4
 2948              		.cfi_def_cfa_offset 0
2008:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 2949              		.loc 1 2008 0
 2950 0022 9360     		str	r3, [r2, #8]
2011:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 2951              		.loc 1 2011 0
 2952 0024 5162     		str	r1, [r2, #36]
2012:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 2953              		.loc 1 2012 0
 2954 0026 7047     		bx	lr
 2955              	.LVL239:
 2956              	.L292:
 2957              	.LCFI45:
 2958              		.cfi_restore_state
 2959 0028 43F40063 		orr	r3, r3, #2048
 2960              	.LVL240:
1996:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
 2961              		.loc 1 1996 0
 2962 002c 0343     		orrs	r3, r3, r0
 2963              	.LVL241:
 2964 002e F0E7     		b	.L290
 2965              	.L294:
 2966              		.align	2
 2967              	.L293:
 2968 0030 00280040 		.word	1073752064
 2969              		.cfi_endproc
 2970              	.LFE144:
 2972              		.section	.text.RTC_GetTimeStamp,"ax",%progbits
 2973              		.align	2
 2974              		.global	RTC_GetTimeStamp
 2975              		.thumb
 2976              		.thumb_func
 2978              	RTC_GetTimeStamp:
 2979              	.LFB145:
2028:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   uint32_t tmptime = 0, tmpdate = 0;
 2980              		.loc 1 2028 0
 2981              		.cfi_startproc
 2982              		@ args = 0, pretend = 0, frame = 0
 2983              		@ frame_needed = 0, uses_anonymous_args = 0
 2984              	.LVL242:
 2985 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2986              	.LCFI46:
 2987              		.cfi_def_cfa_offset 24
 2988              		.cfi_offset 4, -24
 2989              		.cfi_offset 5, -20
 2990              		.cfi_offset 6, -16
 2991              		.cfi_offset 7, -12
 2992              		.cfi_offset 8, -8
 2993              		.cfi_offset 14, -4
2035:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   tmpdate = (uint32_t)(RTC->TSDR & RTC_DR_RESERVED_MASK);
 2994              		.loc 1 2035 0
 2995 0004 2B4C     		ldr	r4, .L298
 2996 0006 236B     		ldr	r3, [r4, #48]
 2997              	.LVL243:
2036:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 2998              		.loc 1 2036 0
 2999 0008 646B     		ldr	r4, [r4, #52]
 3000              	.LVL244:
2042:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 3001              		.loc 1 2042 0
 3002 000a 03F48005 		and	r5, r3, #4194304
2039:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_StampTimeStruct->RTC_Minutes = (uint8_t)((tmptime & (RTC_TR_MNT | RTC_TR_MNU)) >> 8);
 3003              		.loc 1 2039 0
 3004 000e C3F30548 		ubfx	r8, r3, #16, #6
2040:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_StampTimeStruct->RTC_Seconds = (uint8_t)(tmptime & (RTC_TR_ST | RTC_TR_SU));
 3005              		.loc 1 2040 0
 3006 0012 C3F3062C 		ubfx	ip, r3, #8, #7
2046:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_StampDateStruct->RTC_Date = (uint8_t)(tmpdate & (RTC_DR_DT | RTC_DR_DU));
 3007              		.loc 1 2046 0
 3008 0016 C4F30427 		ubfx	r7, r4, #8, #5
2047:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_StampDateStruct->RTC_WeekDay = (uint8_t)((tmpdate & (RTC_DR_WDU)) >> 13);
 3009              		.loc 1 2047 0
 3010 001a 04F03F06 		and	r6, r4, #63
2041:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_StampTimeStruct->RTC_H12 = (uint8_t)((tmptime & (RTC_TR_PM)) >> 16);  
 3011              		.loc 1 2041 0
 3012 001e 03F07F03 		and	r3, r3, #127
 3013              	.LVL245:
2042:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 3014              		.loc 1 2042 0
 3015 0022 2D0C     		lsrs	r5, r5, #16
2045:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_StampDateStruct->RTC_Month = (uint8_t)((tmpdate & (RTC_DR_MT | RTC_DR_MU)) >> 8);
 3016              		.loc 1 2045 0
 3017 0024 4FF0000E 		mov	lr, #0
2048:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 3018              		.loc 1 2048 0
 3019 0028 C4F34234 		ubfx	r4, r4, #13, #3
 3020              	.LVL246:
2039:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_StampTimeStruct->RTC_Minutes = (uint8_t)((tmptime & (RTC_TR_MNT | RTC_TR_MNU)) >> 8);
 3021              		.loc 1 2039 0
 3022 002c 81F80080 		strb	r8, [r1]
2040:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_StampTimeStruct->RTC_Seconds = (uint8_t)(tmptime & (RTC_TR_ST | RTC_TR_SU));
 3023              		.loc 1 2040 0
 3024 0030 81F801C0 		strb	ip, [r1, #1]
2041:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_StampTimeStruct->RTC_H12 = (uint8_t)((tmptime & (RTC_TR_PM)) >> 16);  
 3025              		.loc 1 2041 0
 3026 0034 8B70     		strb	r3, [r1, #2]
2042:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 3027              		.loc 1 2042 0
 3028 0036 CD70     		strb	r5, [r1, #3]
2045:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_StampDateStruct->RTC_Month = (uint8_t)((tmpdate & (RTC_DR_MT | RTC_DR_MU)) >> 8);
 3029              		.loc 1 2045 0
 3030 0038 82F803E0 		strb	lr, [r2, #3]
2046:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_StampDateStruct->RTC_Date = (uint8_t)(tmpdate & (RTC_DR_DT | RTC_DR_DU));
 3031              		.loc 1 2046 0
 3032 003c 5770     		strb	r7, [r2, #1]
2047:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC_StampDateStruct->RTC_WeekDay = (uint8_t)((tmpdate & (RTC_DR_WDU)) >> 13);
 3033              		.loc 1 2047 0
 3034 003e 9670     		strb	r6, [r2, #2]
2048:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 3035              		.loc 1 2048 0
 3036 0040 1470     		strb	r4, [r2]
2051:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 3037              		.loc 1 2051 0
 3038 0042 A8BB     		cbnz	r0, .L295
2054:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC_StampTimeStruct->RTC_Minutes = (uint8_t)RTC_Bcd2ToByte(RTC_StampTimeStruct->RTC_Minutes);
 3039              		.loc 1 2054 0
 3040 0044 0C78     		ldrb	r4, [r1]	@ zero_extendqisi2
 3041              	.LVL247:
2055:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC_StampTimeStruct->RTC_Seconds = (uint8_t)RTC_Bcd2ToByte(RTC_StampTimeStruct->RTC_Seconds);
 3042              		.loc 1 2055 0
 3043 0046 4878     		ldrb	r0, [r1, #1]	@ zero_extendqisi2
 3044              	.LVL248:
2056:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 3045              		.loc 1 2056 0
 3046 0048 8B78     		ldrb	r3, [r1, #2]	@ zero_extendqisi2
 3047              	.LVL249:
 3048              	.LBB202:
 3049              	.LBB203:
2745:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   return (tmp + (Value & (uint8_t)0x0F));
 3050              		.loc 1 2745 0
 3051 004a 2709     		lsrs	r7, r4, #4
 3052              	.LBE203:
 3053              	.LBE202:
 3054              	.LBB206:
 3055              	.LBB207:
 3056 004c 0609     		lsrs	r6, r0, #4
 3057              	.LBE207:
 3058              	.LBE206:
 3059              	.LBB211:
 3060              	.LBB212:
 3061 004e 1D09     		lsrs	r5, r3, #4
 3062              	.LBE212:
 3063              	.LBE211:
 3064              	.LBB216:
 3065              	.LBB208:
 3066 0050 06EB8606 		add	r6, r6, r6, lsl #2
 3067              	.LBE208:
 3068              	.LBE216:
 3069              	.LBB217:
 3070              	.LBB213:
 3071 0054 05EB8505 		add	r5, r5, r5, lsl #2
 3072              	.LBE213:
 3073              	.LBE217:
 3074              	.LBB218:
 3075              	.LBB204:
 3076 0058 07EB8707 		add	r7, r7, r7, lsl #2
 3077              		.loc 1 2746 0
 3078 005c 04F00F04 		and	r4, r4, #15
 3079              	.LVL250:
 3080              	.LBE204:
 3081              	.LBE218:
 3082              	.LBB219:
 3083              	.LBB209:
 3084 0060 00F00F00 		and	r0, r0, #15
 3085              	.LVL251:
 3086              	.LBE209:
 3087              	.LBE219:
 3088              	.LBB220:
 3089              	.LBB214:
 3090 0064 03F00F03 		and	r3, r3, #15
 3091              	.LVL252:
 3092              	.LBE214:
 3093              	.LBE220:
 3094              	.LBB221:
 3095              	.LBB210:
 3096 0068 00EB4600 		add	r0, r0, r6, lsl #1
 3097              	.LBE210:
 3098              	.LBE221:
 3099              	.LBB222:
 3100              	.LBB215:
 3101 006c 03EB4503 		add	r3, r3, r5, lsl #1
 3102              	.LBE215:
 3103              	.LBE222:
 3104              	.LBB223:
 3105              	.LBB205:
 3106 0070 04EB4704 		add	r4, r4, r7, lsl #1
 3107              	.LBE205:
 3108              	.LBE223:
2054:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC_StampTimeStruct->RTC_Minutes = (uint8_t)RTC_Bcd2ToByte(RTC_StampTimeStruct->RTC_Minutes);
 3109              		.loc 1 2054 0
 3110 0074 0C70     		strb	r4, [r1]
 3111              	.LVL253:
2055:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC_StampTimeStruct->RTC_Seconds = (uint8_t)RTC_Bcd2ToByte(RTC_StampTimeStruct->RTC_Seconds);
 3112              		.loc 1 2055 0
 3113 0076 4870     		strb	r0, [r1, #1]
 3114              	.LVL254:
2056:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 3115              		.loc 1 2056 0
 3116 0078 8B70     		strb	r3, [r1, #2]
 3117              	.LVL255:
2059:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC_StampDateStruct->RTC_Date = (uint8_t)RTC_Bcd2ToByte(RTC_StampDateStruct->RTC_Date);
 3118              		.loc 1 2059 0
 3119 007a 5078     		ldrb	r0, [r2, #1]	@ zero_extendqisi2
 3120              	.LVL256:
2060:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC_StampDateStruct->RTC_WeekDay = (uint8_t)RTC_Bcd2ToByte(RTC_StampDateStruct->RTC_WeekDay);
 3121              		.loc 1 2060 0
 3122 007c 9178     		ldrb	r1, [r2, #2]	@ zero_extendqisi2
 3123              	.LVL257:
2061:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
 3124              		.loc 1 2061 0
 3125 007e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 3126              	.LVL258:
 3127              	.LBB224:
 3128              	.LBB225:
2745:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   return (tmp + (Value & (uint8_t)0x0F));
 3129              		.loc 1 2745 0
 3130 0080 0609     		lsrs	r6, r0, #4
 3131              	.LBE225:
 3132              	.LBE224:
 3133              	.LBB228:
 3134              	.LBB229:
 3135 0082 0D09     		lsrs	r5, r1, #4
 3136              	.LBE229:
 3137              	.LBE228:
 3138              	.LBB232:
 3139              	.LBB233:
 3140 0084 1C09     		lsrs	r4, r3, #4
 3141              	.LBE233:
 3142              	.LBE232:
 3143              	.LBB236:
 3144              	.LBB226:
 3145 0086 06EB8606 		add	r6, r6, r6, lsl #2
 3146              		.loc 1 2746 0
 3147 008a 00F00F00 		and	r0, r0, #15
 3148              	.LVL259:
 3149              	.LBE226:
 3150              	.LBE236:
 3151              	.LBB237:
 3152              	.LBB230:
2745:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   return (tmp + (Value & (uint8_t)0x0F));
 3153              		.loc 1 2745 0
 3154 008e 05EB8505 		add	r5, r5, r5, lsl #2
 3155              		.loc 1 2746 0
 3156 0092 01F00F01 		and	r1, r1, #15
 3157              	.LVL260:
 3158              	.LBE230:
 3159              	.LBE237:
 3160              	.LBB238:
 3161              	.LBB234:
2745:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   return (tmp + (Value & (uint8_t)0x0F));
 3162              		.loc 1 2745 0
 3163 0096 04EB8404 		add	r4, r4, r4, lsl #2
 3164              		.loc 1 2746 0
 3165 009a 03F00F03 		and	r3, r3, #15
 3166              	.LVL261:
 3167              	.LBE234:
 3168              	.LBE238:
 3169              	.LBB239:
 3170              	.LBB227:
 3171 009e 00EB4600 		add	r0, r0, r6, lsl #1
 3172              	.LBE227:
 3173              	.LBE239:
 3174              	.LBB240:
 3175              	.LBB231:
 3176 00a2 01EB4501 		add	r1, r1, r5, lsl #1
 3177              	.LBE231:
 3178              	.LBE240:
 3179              	.LBB241:
 3180              	.LBB235:
 3181 00a6 03EB4403 		add	r3, r3, r4, lsl #1
 3182              	.LBE235:
 3183              	.LBE241:
2059:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC_StampDateStruct->RTC_Date = (uint8_t)RTC_Bcd2ToByte(RTC_StampDateStruct->RTC_Date);
 3184              		.loc 1 2059 0
 3185 00aa 5070     		strb	r0, [r2, #1]
 3186              	.LVL262:
2060:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     RTC_StampDateStruct->RTC_WeekDay = (uint8_t)RTC_Bcd2ToByte(RTC_StampDateStruct->RTC_WeekDay);
 3187              		.loc 1 2060 0
 3188 00ac 9170     		strb	r1, [r2, #2]
 3189              	.LVL263:
2061:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
 3190              		.loc 1 2061 0
 3191 00ae 1370     		strb	r3, [r2]
 3192              	.LVL264:
 3193              	.L295:
 3194 00b0 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3195              	.L299:
 3196              		.align	2
 3197              	.L298:
 3198 00b4 00280040 		.word	1073752064
 3199              		.cfi_endproc
 3200              	.LFE145:
 3202              		.section	.text.RTC_GetTimeStampSubSecond,"ax",%progbits
 3203              		.align	2
 3204              		.global	RTC_GetTimeStampSubSecond
 3205              		.thumb
 3206              		.thumb_func
 3208              	RTC_GetTimeStampSubSecond:
 3209              	.LFB146:
2071:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Get timestamp sub seconds values from the correspondent registers */
 3210              		.loc 1 2071 0
 3211              		.cfi_startproc
 3212              		@ args = 0, pretend = 0, frame = 0
 3213              		@ frame_needed = 0, uses_anonymous_args = 0
 3214              		@ link register save eliminated.
2073:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 3215              		.loc 1 2073 0
 3216 0000 014B     		ldr	r3, .L301
 3217 0002 986B     		ldr	r0, [r3, #56]
2074:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 3218              		.loc 1 2074 0
 3219 0004 7047     		bx	lr
 3220              	.L302:
 3221 0006 00BF     		.align	2
 3222              	.L301:
 3223 0008 00280040 		.word	1073752064
 3224              		.cfi_endproc
 3225              	.LFE146:
 3227              		.section	.text.RTC_TamperTriggerConfig,"ax",%progbits
 3228              		.align	2
 3229              		.global	RTC_TamperTriggerConfig
 3230              		.thumb
 3231              		.thumb_func
 3233              	RTC_TamperTriggerConfig:
 3234              	.LFB147:
2106:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
 3235              		.loc 1 2106 0
 3236              		.cfi_startproc
 3237              		@ args = 0, pretend = 0, frame = 0
 3238              		@ frame_needed = 0, uses_anonymous_args = 0
 3239              		@ link register save eliminated.
 3240              	.LVL265:
2114:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
 3241              		.loc 1 2114 0
 3242 0000 054A     		ldr	r2, .L307
 3243 0002 136C     		ldr	r3, [r2, #64]
2111:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {  
 3244              		.loc 1 2111 0
 3245 0004 19B1     		cbz	r1, .L306
2119:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }  
 3246              		.loc 1 2119 0
 3247 0006 43EA4000 		orr	r0, r3, r0, lsl #1
 3248              	.LVL266:
 3249 000a 1064     		str	r0, [r2, #64]
 3250 000c 7047     		bx	lr
 3251              	.LVL267:
 3252              	.L306:
2114:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
 3253              		.loc 1 2114 0
 3254 000e 23EA4000 		bic	r0, r3, r0, lsl #1
 3255              	.LVL268:
 3256 0012 1064     		str	r0, [r2, #64]
 3257 0014 7047     		bx	lr
 3258              	.L308:
 3259 0016 00BF     		.align	2
 3260              	.L307:
 3261 0018 00280040 		.word	1073752064
 3262              		.cfi_endproc
 3263              	.LFE147:
 3265              		.section	.text.RTC_TamperCmd,"ax",%progbits
 3266              		.align	2
 3267              		.global	RTC_TamperCmd
 3268              		.thumb
 3269              		.thumb_func
 3271              	RTC_TamperCmd:
 3272              	.LFB148:
2132:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
 3273              		.loc 1 2132 0
 3274              		.cfi_startproc
 3275              		@ args = 0, pretend = 0, frame = 0
 3276              		@ frame_needed = 0, uses_anonymous_args = 0
 3277              		@ link register save eliminated.
 3278              	.LVL269:
2140:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
 3279              		.loc 1 2140 0
 3280 0000 044A     		ldr	r2, .L313
 3281 0002 136C     		ldr	r3, [r2, #64]
2137:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 3282              		.loc 1 2137 0
 3283 0004 19B9     		cbnz	r1, .L312
2145:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }  
 3284              		.loc 1 2145 0
 3285 0006 23EA0000 		bic	r0, r3, r0
 3286              	.LVL270:
 3287 000a 1064     		str	r0, [r2, #64]
 3288 000c 7047     		bx	lr
 3289              	.LVL271:
 3290              	.L312:
2140:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
 3291              		.loc 1 2140 0
 3292 000e 1843     		orrs	r0, r0, r3
 3293              	.LVL272:
 3294 0010 1064     		str	r0, [r2, #64]
 3295 0012 7047     		bx	lr
 3296              	.L314:
 3297              		.align	2
 3298              	.L313:
 3299 0014 00280040 		.word	1073752064
 3300              		.cfi_endproc
 3301              	.LFE148:
 3303              		.section	.text.RTC_TamperFilterConfig,"ax",%progbits
 3304              		.align	2
 3305              		.global	RTC_TamperFilterConfig
 3306              		.thumb
 3307              		.thumb_func
 3309              	RTC_TamperFilterConfig:
 3310              	.LFB149:
2163:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
 3311              		.loc 1 2163 0
 3312              		.cfi_startproc
 3313              		@ args = 0, pretend = 0, frame = 0
 3314              		@ frame_needed = 0, uses_anonymous_args = 0
 3315              		@ link register save eliminated.
 3316              	.LVL273:
2168:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 3317              		.loc 1 2168 0
 3318 0000 044B     		ldr	r3, .L316
 3319 0002 1A6C     		ldr	r2, [r3, #64]
 3320 0004 22F4C052 		bic	r2, r2, #6144
 3321 0008 1A64     		str	r2, [r3, #64]
2171:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 3322              		.loc 1 2171 0
 3323 000a 1A6C     		ldr	r2, [r3, #64]
 3324 000c 1043     		orrs	r0, r0, r2
 3325              	.LVL274:
 3326 000e 1864     		str	r0, [r3, #64]
 3327 0010 7047     		bx	lr
 3328              	.L317:
 3329 0012 00BF     		.align	2
 3330              	.L316:
 3331 0014 00280040 		.word	1073752064
 3332              		.cfi_endproc
 3333              	.LFE149:
 3335              		.section	.text.RTC_TamperSamplingFreqConfig,"ax",%progbits
 3336              		.align	2
 3337              		.global	RTC_TamperSamplingFreqConfig
 3338              		.thumb
 3339              		.thumb_func
 3341              	RTC_TamperSamplingFreqConfig:
 3342              	.LFB150:
2197:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
 3343              		.loc 1 2197 0
 3344              		.cfi_startproc
 3345              		@ args = 0, pretend = 0, frame = 0
 3346              		@ frame_needed = 0, uses_anonymous_args = 0
 3347              		@ link register save eliminated.
 3348              	.LVL275:
2202:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 3349              		.loc 1 2202 0
 3350 0000 044B     		ldr	r3, .L319
 3351 0002 1A6C     		ldr	r2, [r3, #64]
 3352 0004 22F4E062 		bic	r2, r2, #1792
 3353 0008 1A64     		str	r2, [r3, #64]
2205:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 3354              		.loc 1 2205 0
 3355 000a 1A6C     		ldr	r2, [r3, #64]
 3356 000c 1043     		orrs	r0, r0, r2
 3357              	.LVL276:
 3358 000e 1864     		str	r0, [r3, #64]
 3359 0010 7047     		bx	lr
 3360              	.L320:
 3361 0012 00BF     		.align	2
 3362              	.L319:
 3363 0014 00280040 		.word	1073752064
 3364              		.cfi_endproc
 3365              	.LFE150:
 3367              		.section	.text.RTC_TamperPinsPrechargeDuration,"ax",%progbits
 3368              		.align	2
 3369              		.global	RTC_TamperPinsPrechargeDuration
 3370              		.thumb
 3371              		.thumb_func
 3373              	RTC_TamperPinsPrechargeDuration:
 3374              	.LFB151:
2220:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
 3375              		.loc 1 2220 0
 3376              		.cfi_startproc
 3377              		@ args = 0, pretend = 0, frame = 0
 3378              		@ frame_needed = 0, uses_anonymous_args = 0
 3379              		@ link register save eliminated.
 3380              	.LVL277:
2225:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 3381              		.loc 1 2225 0
 3382 0000 044B     		ldr	r3, .L322
 3383 0002 1A6C     		ldr	r2, [r3, #64]
 3384 0004 22F4C042 		bic	r2, r2, #24576
 3385 0008 1A64     		str	r2, [r3, #64]
2228:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 3386              		.loc 1 2228 0
 3387 000a 1A6C     		ldr	r2, [r3, #64]
 3388 000c 1043     		orrs	r0, r0, r2
 3389              	.LVL278:
 3390 000e 1864     		str	r0, [r3, #64]
 3391 0010 7047     		bx	lr
 3392              	.L323:
 3393 0012 00BF     		.align	2
 3394              	.L322:
 3395 0014 00280040 		.word	1073752064
 3396              		.cfi_endproc
 3397              	.LFE151:
 3399              		.section	.text.RTC_TimeStampOnTamperDetectionCmd,"ax",%progbits
 3400              		.align	2
 3401              		.global	RTC_TimeStampOnTamperDetectionCmd
 3402              		.thumb
 3403              		.thumb_func
 3405              	RTC_TimeStampOnTamperDetectionCmd:
 3406              	.LFB152:
2240:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
 3407              		.loc 1 2240 0
 3408              		.cfi_startproc
 3409              		@ args = 0, pretend = 0, frame = 0
 3410              		@ frame_needed = 0, uses_anonymous_args = 0
 3411              		@ link register save eliminated.
 3412              	.LVL279:
2247:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
 3413              		.loc 1 2247 0
 3414 0000 054A     		ldr	r2, .L328
 3415 0002 136C     		ldr	r3, [r2, #64]
2244:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 3416              		.loc 1 2244 0
 3417 0004 18B9     		cbnz	r0, .L327
2252:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
 3418              		.loc 1 2252 0
 3419 0006 23F08003 		bic	r3, r3, #128
 3420 000a 1364     		str	r3, [r2, #64]
 3421 000c 7047     		bx	lr
 3422              	.L327:
2247:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
 3423              		.loc 1 2247 0
 3424 000e 43F08003 		orr	r3, r3, #128
 3425 0012 1364     		str	r3, [r2, #64]
 3426 0014 7047     		bx	lr
 3427              	.L329:
 3428 0016 00BF     		.align	2
 3429              	.L328:
 3430 0018 00280040 		.word	1073752064
 3431              		.cfi_endproc
 3432              	.LFE152:
 3434              		.section	.text.RTC_TamperPullUpCmd,"ax",%progbits
 3435              		.align	2
 3436              		.global	RTC_TamperPullUpCmd
 3437              		.thumb
 3438              		.thumb_func
 3440              	RTC_TamperPullUpCmd:
 3441              	.LFB153:
2263:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
 3442              		.loc 1 2263 0
 3443              		.cfi_startproc
 3444              		@ args = 0, pretend = 0, frame = 0
 3445              		@ frame_needed = 0, uses_anonymous_args = 0
 3446              		@ link register save eliminated.
 3447              	.LVL280:
2270:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
 3448              		.loc 1 2270 0
 3449 0000 054A     		ldr	r2, .L334
 3450 0002 136C     		ldr	r3, [r2, #64]
2267:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 3451              		.loc 1 2267 0
 3452 0004 18B9     		cbnz	r0, .L333
2275:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   } 
 3453              		.loc 1 2275 0
 3454 0006 43F40043 		orr	r3, r3, #32768
 3455 000a 1364     		str	r3, [r2, #64]
 3456 000c 7047     		bx	lr
 3457              	.L333:
2270:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
 3458              		.loc 1 2270 0
 3459 000e 23F40043 		bic	r3, r3, #32768
 3460 0012 1364     		str	r3, [r2, #64]
 3461 0014 7047     		bx	lr
 3462              	.L335:
 3463 0016 00BF     		.align	2
 3464              	.L334:
 3465 0018 00280040 		.word	1073752064
 3466              		.cfi_endproc
 3467              	.LFE153:
 3469              		.section	.text.RTC_WriteBackupRegister,"ax",%progbits
 3470              		.align	2
 3471              		.global	RTC_WriteBackupRegister
 3472              		.thumb
 3473              		.thumb_func
 3475              	RTC_WriteBackupRegister:
 3476              	.LFB154:
2304:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   __IO uint32_t tmp = 0;
 3477              		.loc 1 2304 0
 3478              		.cfi_startproc
 3479              		@ args = 0, pretend = 0, frame = 8
 3480              		@ frame_needed = 0, uses_anonymous_args = 0
 3481              		@ link register save eliminated.
 3482              	.LVL281:
 3483 0000 82B0     		sub	sp, sp, #8
 3484              	.LCFI47:
 3485              		.cfi_def_cfa_offset 8
2305:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
 3486              		.loc 1 2305 0
 3487 0002 0022     		movs	r2, #0
2310:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   tmp += (RTC_BKP_DR * 4);
 3488              		.loc 1 2310 0
 3489 0004 054B     		ldr	r3, .L338
2305:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
 3490              		.loc 1 2305 0
 3491 0006 0192     		str	r2, [sp, #4]
2310:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   tmp += (RTC_BKP_DR * 4);
 3492              		.loc 1 2310 0
 3493 0008 0193     		str	r3, [sp, #4]
2311:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 3494              		.loc 1 2311 0
 3495 000a 019B     		ldr	r3, [sp, #4]
 3496 000c 03EB8000 		add	r0, r3, r0, lsl #2
 3497              	.LVL282:
 3498 0010 0190     		str	r0, [sp, #4]
2314:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 3499              		.loc 1 2314 0
 3500 0012 019B     		ldr	r3, [sp, #4]
 3501 0014 1960     		str	r1, [r3]
2315:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 3502              		.loc 1 2315 0
 3503 0016 02B0     		add	sp, sp, #8
 3504              	.LCFI48:
 3505              		.cfi_def_cfa_offset 0
 3506              		@ sp needed
 3507 0018 7047     		bx	lr
 3508              	.L339:
 3509 001a 00BF     		.align	2
 3510              	.L338:
 3511 001c 50280040 		.word	1073752144
 3512              		.cfi_endproc
 3513              	.LFE154:
 3515              		.section	.text.RTC_ReadBackupRegister,"ax",%progbits
 3516              		.align	2
 3517              		.global	RTC_ReadBackupRegister
 3518              		.thumb
 3519              		.thumb_func
 3521              	RTC_ReadBackupRegister:
 3522              	.LFB155:
2325:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   __IO uint32_t tmp = 0;
 3523              		.loc 1 2325 0
 3524              		.cfi_startproc
 3525              		@ args = 0, pretend = 0, frame = 8
 3526              		@ frame_needed = 0, uses_anonymous_args = 0
 3527              		@ link register save eliminated.
 3528              	.LVL283:
 3529 0000 82B0     		sub	sp, sp, #8
 3530              	.LCFI49:
 3531              		.cfi_def_cfa_offset 8
2326:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
 3532              		.loc 1 2326 0
 3533 0002 0022     		movs	r2, #0
2331:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   tmp += (RTC_BKP_DR * 4);
 3534              		.loc 1 2331 0
 3535 0004 054B     		ldr	r3, .L342
2326:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
 3536              		.loc 1 2326 0
 3537 0006 0192     		str	r2, [sp, #4]
2331:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   tmp += (RTC_BKP_DR * 4);
 3538              		.loc 1 2331 0
 3539 0008 0193     		str	r3, [sp, #4]
2332:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
 3540              		.loc 1 2332 0
 3541 000a 019B     		ldr	r3, [sp, #4]
 3542 000c 03EB8000 		add	r0, r3, r0, lsl #2
 3543              	.LVL284:
 3544 0010 0190     		str	r0, [sp, #4]
2335:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 3545              		.loc 1 2335 0
 3546 0012 019B     		ldr	r3, [sp, #4]
 3547 0014 1868     		ldr	r0, [r3]
2336:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 3548              		.loc 1 2336 0
 3549 0016 02B0     		add	sp, sp, #8
 3550              	.LCFI50:
 3551              		.cfi_def_cfa_offset 0
 3552              		@ sp needed
 3553 0018 7047     		bx	lr
 3554              	.L343:
 3555 001a 00BF     		.align	2
 3556              	.L342:
 3557 001c 50280040 		.word	1073752144
 3558              		.cfi_endproc
 3559              	.LFE155:
 3561              		.section	.text.RTC_TamperPinSelection,"ax",%progbits
 3562              		.align	2
 3563              		.global	RTC_TamperPinSelection
 3564              		.thumb
 3565              		.thumb_func
 3567              	RTC_TamperPinSelection:
 3568              	.LFB156:
2364:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
 3569              		.loc 1 2364 0
 3570              		.cfi_startproc
 3571              		@ args = 0, pretend = 0, frame = 0
 3572              		@ frame_needed = 0, uses_anonymous_args = 0
 3573              		@ link register save eliminated.
 3574              	.LVL285:
2368:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->TAFCR |= (uint32_t)(RTC_TamperPin);  
 3575              		.loc 1 2368 0
 3576 0000 044B     		ldr	r3, .L345
 3577 0002 1A6C     		ldr	r2, [r3, #64]
 3578 0004 22F48032 		bic	r2, r2, #65536
 3579 0008 1A64     		str	r2, [r3, #64]
2369:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 3580              		.loc 1 2369 0
 3581 000a 1A6C     		ldr	r2, [r3, #64]
 3582 000c 1043     		orrs	r0, r0, r2
 3583              	.LVL286:
 3584 000e 1864     		str	r0, [r3, #64]
 3585 0010 7047     		bx	lr
 3586              	.L346:
 3587 0012 00BF     		.align	2
 3588              	.L345:
 3589 0014 00280040 		.word	1073752064
 3590              		.cfi_endproc
 3591              	.LFE156:
 3593              		.section	.text.RTC_TimeStampPinSelection,"ax",%progbits
 3594              		.align	2
 3595              		.global	RTC_TimeStampPinSelection
 3596              		.thumb
 3597              		.thumb_func
 3599              	RTC_TimeStampPinSelection:
 3600              	.LFB157:
2381:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
 3601              		.loc 1 2381 0
 3602              		.cfi_startproc
 3603              		@ args = 0, pretend = 0, frame = 0
 3604              		@ frame_needed = 0, uses_anonymous_args = 0
 3605              		@ link register save eliminated.
 3606              	.LVL287:
2385:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->TAFCR |= (uint32_t)(RTC_TimeStampPin);  
 3607              		.loc 1 2385 0
 3608 0000 044B     		ldr	r3, .L348
 3609 0002 1A6C     		ldr	r2, [r3, #64]
 3610 0004 22F40032 		bic	r2, r2, #131072
 3611 0008 1A64     		str	r2, [r3, #64]
2386:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 3612              		.loc 1 2386 0
 3613 000a 1A6C     		ldr	r2, [r3, #64]
 3614 000c 1043     		orrs	r0, r0, r2
 3615              	.LVL288:
 3616 000e 1864     		str	r0, [r3, #64]
 3617 0010 7047     		bx	lr
 3618              	.L349:
 3619 0012 00BF     		.align	2
 3620              	.L348:
 3621 0014 00280040 		.word	1073752064
 3622              		.cfi_endproc
 3623              	.LFE157:
 3625              		.section	.text.RTC_OutputTypeConfig,"ax",%progbits
 3626              		.align	2
 3627              		.global	RTC_OutputTypeConfig
 3628              		.thumb
 3629              		.thumb_func
 3631              	RTC_OutputTypeConfig:
 3632              	.LFB158:
2400:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
 3633              		.loc 1 2400 0
 3634              		.cfi_startproc
 3635              		@ args = 0, pretend = 0, frame = 0
 3636              		@ frame_needed = 0, uses_anonymous_args = 0
 3637              		@ link register save eliminated.
 3638              	.LVL289:
2404:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->TAFCR |= (uint32_t)(RTC_OutputType);  
 3639              		.loc 1 2404 0
 3640 0000 044B     		ldr	r3, .L351
 3641 0002 1A6C     		ldr	r2, [r3, #64]
 3642 0004 22F48022 		bic	r2, r2, #262144
 3643 0008 1A64     		str	r2, [r3, #64]
2405:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 3644              		.loc 1 2405 0
 3645 000a 1A6C     		ldr	r2, [r3, #64]
 3646 000c 1043     		orrs	r0, r0, r2
 3647              	.LVL290:
 3648 000e 1864     		str	r0, [r3, #64]
 3649 0010 7047     		bx	lr
 3650              	.L352:
 3651 0012 00BF     		.align	2
 3652              	.L351:
 3653 0014 00280040 		.word	1073752064
 3654              		.cfi_endproc
 3655              	.LFE158:
 3657              		.section	.text.RTC_SynchroShiftConfig,"ax",%progbits
 3658              		.align	2
 3659              		.global	RTC_SynchroShiftConfig
 3660              		.thumb
 3661              		.thumb_func
 3663              	RTC_SynchroShiftConfig:
 3664              	.LFB159:
2438:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   ErrorStatus status = ERROR;
 3665              		.loc 1 2438 0
 3666              		.cfi_startproc
 3667              		@ args = 0, pretend = 0, frame = 0
 3668              		@ frame_needed = 0, uses_anonymous_args = 0
 3669              	.LVL291:
 3670 0000 10B5     		push	{r4, lr}
 3671              	.LCFI51:
 3672              		.cfi_def_cfa_offset 8
 3673              		.cfi_offset 4, -8
 3674              		.cfi_offset 14, -4
2447:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 3675              		.loc 1 2447 0
 3676 0002 184C     		ldr	r4, .L372
 3677 0004 CA22     		movs	r2, #202
2448:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
 3678              		.loc 1 2448 0
 3679 0006 5323     		movs	r3, #83
2447:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 3680              		.loc 1 2447 0
 3681 0008 6262     		str	r2, [r4, #36]
2448:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
 3682              		.loc 1 2448 0
 3683 000a 6362     		str	r3, [r4, #36]
2451:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 3684              		.loc 1 2451 0
 3685 000c E368     		ldr	r3, [r4, #12]
 3686 000e 1A07     		lsls	r2, r3, #28
 3687 0010 0AD5     		bpl	.L354
2454:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
 3688              		.loc 1 2454 0
 3689 0012 E368     		ldr	r3, [r4, #12]
 3690 0014 1B07     		lsls	r3, r3, #28
 3691 0016 07D5     		bpl	.L354
 3692 0018 4FF48053 		mov	r3, #4096
 3693 001c 01E0     		b	.L355
 3694              	.LVL292:
 3695              	.L370:
2454:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
 3696              		.loc 1 2454 0 is_stmt 0 discriminator 1
 3697 001e 013B     		subs	r3, r3, #1
 3698              	.LVL293:
 3699 0020 02D0     		beq	.L354
 3700              	.LVL294:
 3701              	.L355:
2454:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
 3702              		.loc 1 2454 0
 3703 0022 E268     		ldr	r2, [r4, #12]
 3704 0024 1207     		lsls	r2, r2, #28
 3705 0026 FAD4     		bmi	.L370
 3706              	.LVL295:
 3707              	.L354:
2461:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 3708              		.loc 1 2461 0 is_stmt 1
 3709 0028 0E4A     		ldr	r2, .L372
 3710 002a D368     		ldr	r3, [r2, #12]
 3711 002c 13F00803 		ands	r3, r3, #8
 3712 0030 13D1     		bne	.L357
2464:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     {
 3713              		.loc 1 2464 0
 3714 0032 9468     		ldr	r4, [r2, #8]
 3715 0034 E406     		lsls	r4, r4, #27
 3716 0036 04D5     		bpl	.L371
2485:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
 3717              		.loc 1 2485 0
 3718 0038 1846     		mov	r0, r3
 3719              	.LVL296:
2489:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
 3720              		.loc 1 2489 0
 3721 003a 0A4B     		ldr	r3, .L372
 3722 003c FF22     		movs	r2, #255
 3723 003e 5A62     		str	r2, [r3, #36]
2492:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 3724              		.loc 1 2492 0
 3725 0040 10BD     		pop	{r4, pc}
 3726              	.LVL297:
 3727              	.L371:
2467:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     
 3728              		.loc 1 2467 0
 3729 0042 0843     		orrs	r0, r0, r1
 3730              	.LVL298:
 3731 0044 D062     		str	r0, [r2, #44]
2469:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****       {
 3732              		.loc 1 2469 0
 3733 0046 FFF7FEFF 		bl	RTC_WaitForSynchro
 3734              	.LVL299:
2489:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
 3735              		.loc 1 2489 0
 3736 004a 064B     		ldr	r3, .L372
2480:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     }
 3737              		.loc 1 2480 0
 3738 004c 0030     		adds	r0, r0, #0
2489:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
 3739              		.loc 1 2489 0
 3740 004e 4FF0FF02 		mov	r2, #255
2480:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     }
 3741              		.loc 1 2480 0
 3742 0052 18BF     		it	ne
 3743 0054 0120     		movne	r0, #1
 3744              	.LVL300:
2489:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
 3745              		.loc 1 2489 0
 3746 0056 5A62     		str	r2, [r3, #36]
2492:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 3747              		.loc 1 2492 0
 3748 0058 10BD     		pop	{r4, pc}
 3749              	.LVL301:
 3750              	.L357:
2489:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
 3751              		.loc 1 2489 0
 3752 005a 024B     		ldr	r3, .L372
 3753 005c FF22     		movs	r2, #255
2485:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
 3754              		.loc 1 2485 0
 3755 005e 0020     		movs	r0, #0
 3756              	.LVL302:
2489:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
 3757              		.loc 1 2489 0
 3758 0060 5A62     		str	r2, [r3, #36]
2492:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 3759              		.loc 1 2492 0
 3760 0062 10BD     		pop	{r4, pc}
 3761              	.L373:
 3762              		.align	2
 3763              	.L372:
 3764 0064 00280040 		.word	1073752064
 3765              		.cfi_endproc
 3766              	.LFE159:
 3768              		.section	.text.RTC_ITConfig,"ax",%progbits
 3769              		.align	2
 3770              		.global	RTC_ITConfig
 3771              		.thumb
 3772              		.thumb_func
 3774              	RTC_ITConfig:
 3775              	.LFB160:
2558:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
 3776              		.loc 1 2558 0
 3777              		.cfi_startproc
 3778              		@ args = 0, pretend = 0, frame = 0
 3779              		@ frame_needed = 0, uses_anonymous_args = 0
 3780              		@ link register save eliminated.
 3781              	.LVL303:
2564:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 3782              		.loc 1 2564 0
 3783 0000 114B     		ldr	r3, .L379
2558:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
 3784              		.loc 1 2558 0
 3785 0002 10B4     		push	{r4}
 3786              	.LCFI52:
 3787              		.cfi_def_cfa_offset 4
 3788              		.cfi_offset 4, -4
2565:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 3789              		.loc 1 2565 0
 3790 0004 5322     		movs	r2, #83
2564:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   RTC->WPR = 0x53;
 3791              		.loc 1 2564 0
 3792 0006 CA24     		movs	r4, #202
 3793 0008 5C62     		str	r4, [r3, #36]
2565:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 3794              		.loc 1 2565 0
 3795 000a 5A62     		str	r2, [r3, #36]
2570:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Configure the Tamper Interrupt in the RTC_TAFCR */
 3796              		.loc 1 2570 0
 3797 000c 9A68     		ldr	r2, [r3, #8]
2567:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 3798              		.loc 1 2567 0
 3799 000e 81B9     		cbnz	r1, .L378
2577:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Configure the Tamper Interrupt in the RTC_TAFCR */
 3800              		.loc 1 2577 0
 3801 0010 20F00401 		bic	r1, r0, #4
 3802              	.LVL304:
 3803 0014 22EA0102 		bic	r2, r2, r1
 3804 0018 9A60     		str	r2, [r3, #8]
2579:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
 3805              		.loc 1 2579 0
 3806 001a 1A6C     		ldr	r2, [r3, #64]
 3807 001c 00F00400 		and	r0, r0, #4
 3808              	.LVL305:
 3809 0020 22EA0000 		bic	r0, r2, r0
 3810 0024 1864     		str	r0, [r3, #64]
 3811              	.L376:
2582:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 3812              		.loc 1 2582 0
 3813 0026 084B     		ldr	r3, .L379
2583:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 3814              		.loc 1 2583 0
 3815 0028 5DF8044B 		ldr	r4, [sp], #4
 3816              	.LCFI53:
 3817              		.cfi_remember_state
 3818              		.cfi_restore 4
 3819              		.cfi_def_cfa_offset 0
2582:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 3820              		.loc 1 2582 0
 3821 002c FF22     		movs	r2, #255
 3822 002e 5A62     		str	r2, [r3, #36]
2583:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 3823              		.loc 1 2583 0
 3824 0030 7047     		bx	lr
 3825              	.LVL306:
 3826              	.L378:
 3827              	.LCFI54:
 3828              		.cfi_restore_state
2570:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****     /* Configure the Tamper Interrupt in the RTC_TAFCR */
 3829              		.loc 1 2570 0
 3830 0032 20F00401 		bic	r1, r0, #4
 3831              	.LVL307:
 3832 0036 0A43     		orrs	r2, r2, r1
 3833 0038 9A60     		str	r2, [r3, #8]
2572:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
 3834              		.loc 1 2572 0
 3835 003a 1A6C     		ldr	r2, [r3, #64]
 3836 003c 00F00400 		and	r0, r0, #4
 3837              	.LVL308:
 3838 0040 1043     		orrs	r0, r0, r2
 3839 0042 1864     		str	r0, [r3, #64]
 3840 0044 EFE7     		b	.L376
 3841              	.L380:
 3842 0046 00BF     		.align	2
 3843              	.L379:
 3844 0048 00280040 		.word	1073752064
 3845              		.cfi_endproc
 3846              	.LFE160:
 3848              		.section	.text.RTC_GetFlagStatus,"ax",%progbits
 3849              		.align	2
 3850              		.global	RTC_GetFlagStatus
 3851              		.thumb
 3852              		.thumb_func
 3854              	RTC_GetFlagStatus:
 3855              	.LFB161:
2606:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   FlagStatus bitstatus = RESET;
 3856              		.loc 1 2606 0
 3857              		.cfi_startproc
 3858              		@ args = 0, pretend = 0, frame = 0
 3859              		@ frame_needed = 0, uses_anonymous_args = 0
 3860              		@ link register save eliminated.
 3861              	.LVL309:
2614:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
 3862              		.loc 1 2614 0
 3863 0000 044A     		ldr	r2, .L382
 3864 0002 054B     		ldr	r3, .L382+4
 3865 0004 D268     		ldr	r2, [r2, #12]
 3866              	.LVL310:
 3867 0006 1340     		ands	r3, r3, r2
 3868              	.LVL311:
2617:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 3869              		.loc 1 2617 0
 3870 0008 0342     		tst	r3, r0
2626:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 3871              		.loc 1 2626 0
 3872 000a 14BF     		ite	ne
 3873 000c 0120     		movne	r0, #1
 3874              	.LVL312:
 3875 000e 0020     		moveq	r0, #0
 3876 0010 7047     		bx	lr
 3877              	.L383:
 3878 0012 00BF     		.align	2
 3879              	.L382:
 3880 0014 00280040 		.word	1073752064
 3881 0018 7F3F0100 		.word	81791
 3882              		.cfi_endproc
 3883              	.LFE161:
 3885              		.section	.text.RTC_ClearFlag,"ax",%progbits
 3886              		.align	2
 3887              		.global	RTC_ClearFlag
 3888              		.thumb
 3889              		.thumb_func
 3891              	RTC_ClearFlag:
 3892              	.LFB162:
2642:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   /* Check the parameters */
 3893              		.loc 1 2642 0
 3894              		.cfi_startproc
 3895              		@ args = 0, pretend = 0, frame = 0
 3896              		@ frame_needed = 0, uses_anonymous_args = 0
 3897              		@ link register save eliminated.
 3898              	.LVL313:
2647:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 3899              		.loc 1 2647 0
 3900 0000 054A     		ldr	r2, .L385
 3901 0002 D368     		ldr	r3, [r2, #12]
 3902 0004 80B2     		uxth	r0, r0
 3903              	.LVL314:
 3904 0006 40F08000 		orr	r0, r0, #128
 3905 000a 03F08003 		and	r3, r3, #128
 3906 000e 63EA0003 		orn	r3, r3, r0
 3907 0012 D360     		str	r3, [r2, #12]
 3908 0014 7047     		bx	lr
 3909              	.L386:
 3910 0016 00BF     		.align	2
 3911              	.L385:
 3912 0018 00280040 		.word	1073752064
 3913              		.cfi_endproc
 3914              	.LFE162:
 3916              		.section	.text.RTC_GetITStatus,"ax",%progbits
 3917              		.align	2
 3918              		.global	RTC_GetITStatus
 3919              		.thumb
 3920              		.thumb_func
 3922              	RTC_GetITStatus:
 3923              	.LFB163:
2662:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   ITStatus bitstatus = RESET;
 3924              		.loc 1 2662 0
 3925              		.cfi_startproc
 3926              		@ args = 0, pretend = 0, frame = 0
 3927              		@ frame_needed = 0, uses_anonymous_args = 0
 3928              		@ link register save eliminated.
 3929              	.LVL315:
2670:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  
 3930              		.loc 1 2670 0
 3931 0000 0949     		ldr	r1, .L390
 3932 0002 0A6C     		ldr	r2, [r1, #64]
 3933              	.LVL316:
2673:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
 3934              		.loc 1 2673 0
 3935 0004 8B68     		ldr	r3, [r1, #8]
2676:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
 3936              		.loc 1 2676 0
 3937 0006 C968     		ldr	r1, [r1, #12]
 3938              	.LVL317:
2670:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****  
 3939              		.loc 1 2670 0
 3940 0008 02F00402 		and	r2, r2, #4
 3941              	.LVL318:
2673:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   
 3942              		.loc 1 2673 0
 3943 000c 02EAD032 		and	r2, r2, r0, lsr #15
 3944 0010 0340     		ands	r3, r3, r0
2679:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 3945              		.loc 1 2679 0
 3946 0012 1343     		orrs	r3, r2, r3
 3947 0014 06D0     		beq	.L389
 3948 0016 89B2     		uxth	r1, r1
 3949              	.LVL319:
2679:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   {
 3950              		.loc 1 2679 0 is_stmt 0 discriminator 1
 3951 0018 11EA1013 		ands	r3, r1, r0, lsr #4
2681:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
 3952              		.loc 1 2681 0 is_stmt 1 discriminator 1
 3953 001c 14BF     		ite	ne
 3954 001e 0120     		movne	r0, #1
 3955              	.LVL320:
 3956 0020 0020     		moveq	r0, #0
 3957 0022 7047     		bx	lr
 3958              	.LVL321:
 3959              	.L389:
2685:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   }
 3960              		.loc 1 2685 0
 3961 0024 1846     		mov	r0, r3
 3962              	.LVL322:
2688:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** 
 3963              		.loc 1 2688 0
 3964 0026 7047     		bx	lr
 3965              	.L391:
 3966              		.align	2
 3967              	.L390:
 3968 0028 00280040 		.word	1073752064
 3969              		.cfi_endproc
 3970              	.LFE163:
 3972              		.section	.text.RTC_ClearITPendingBit,"ax",%progbits
 3973              		.align	2
 3974              		.global	RTC_ClearITPendingBit
 3975              		.thumb
 3976              		.thumb_func
 3978              	RTC_ClearITPendingBit:
 3979              	.LFB164:
2702:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c ****   uint32_t tmpreg = 0;
 3980              		.loc 1 2702 0
 3981              		.cfi_startproc
 3982              		@ args = 0, pretend = 0, frame = 0
 3983              		@ frame_needed = 0, uses_anonymous_args = 0
 3984              		@ link register save eliminated.
 3985              	.LVL323:
2712:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c **** }
 3986              		.loc 1 2712 0
 3987 0000 054A     		ldr	r2, .L393
 3988 0002 D368     		ldr	r3, [r2, #12]
 3989 0004 C0F30F10 		ubfx	r0, r0, #4, #16
 3990              	.LVL324:
 3991 0008 40F08000 		orr	r0, r0, #128
 3992 000c 03F08003 		and	r3, r3, #128
 3993 0010 63EA0003 		orn	r3, r3, r0
 3994 0014 D360     		str	r3, [r2, #12]
 3995 0016 7047     		bx	lr
 3996              	.L394:
 3997              		.align	2
 3998              	.L393:
 3999 0018 00280040 		.word	1073752064
 4000              		.cfi_endproc
 4001              	.LFE164:
 4003              		.text
 4004              	.Letext0:
 4005              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\4.9 2014q4\\arm-none-eabi\\include\\mach
 4006              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\4.9 2014q4\\arm-none-eabi\\include\\stdi
 4007              		.file 4 "libs/Device/STM32F4xx/Include/stm32f4xx.h"
 4008              		.file 5 "libs/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_rtc.h"
 4009              		.file 6 "libs/CMSIS/Include/core_cm4.h"
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_rtc.c
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:20     .text.RTC_StructInit:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:25     .text.RTC_StructInit:00000000 RTC_StructInit
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:44     .text.RTC_WriteProtectionCmd:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:49     .text.RTC_WriteProtectionCmd:00000000 RTC_WriteProtectionCmd
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:78     .text.RTC_WriteProtectionCmd:00000014 $d
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:83     .text.RTC_EnterInitMode:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:88     .text.RTC_EnterInitMode:00000000 RTC_EnterInitMode
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:167    .text.RTC_EnterInitMode:00000040 $d
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:172    .text.RTC_Init:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:177    .text.RTC_Init:00000000 RTC_Init
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:246    .text.RTC_Init:00000044 $d
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:251    .text.RTC_ExitInitMode:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:256    .text.RTC_ExitInitMode:00000000 RTC_ExitInitMode
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:272    .text.RTC_ExitInitMode:0000000c $d
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:277    .text.RTC_WaitForSynchro:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:282    .text.RTC_WaitForSynchro:00000000 RTC_WaitForSynchro
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:355    .text.RTC_WaitForSynchro:00000040 $d
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:360    .text.RTC_DeInit:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:365    .text.RTC_DeInit:00000000 RTC_DeInit
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:502    .text.RTC_DeInit:00000084 $d
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:508    .text.RTC_RefClockCmd:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:513    .text.RTC_RefClockCmd:00000000 RTC_RefClockCmd
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:579    .text.RTC_RefClockCmd:0000003c $d
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:584    .text.RTC_BypassShadowCmd:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:589    .text.RTC_BypassShadowCmd:00000000 RTC_BypassShadowCmd
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:630    .text.RTC_BypassShadowCmd:0000002c $d
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:635    .text.RTC_SetTime:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:640    .text.RTC_SetTime:00000000 RTC_SetTime
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:893    .text.RTC_SetTime:000000ec $d
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:900    .text.RTC_TimeStructInit:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:905    .text.RTC_TimeStructInit:00000000 RTC_TimeStructInit
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:927    .text.RTC_GetTime:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:932    .text.RTC_GetTime:00000000 RTC_GetTime
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:1059   .text.RTC_GetTime:00000058 $d
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:1064   .text.RTC_GetSubSecond:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:1069   .text.RTC_GetSubSecond:00000000 RTC_GetSubSecond
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:1088   .text.RTC_GetSubSecond:00000008 $d
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:1093   .text.RTC_SetDate:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:1098   .text.RTC_SetDate:00000000 RTC_SetDate
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:1339   .text.RTC_SetDate:000000dc $d
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:1346   .text.RTC_DateStructInit:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:1351   .text.RTC_DateStructInit:00000000 RTC_DateStructInit
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:1375   .text.RTC_GetDate:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:1380   .text.RTC_GetDate:00000000 RTC_GetDate
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:1499   .text.RTC_GetDate:00000054 $d
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:1504   .text.RTC_SetAlarm:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:1509   .text.RTC_SetAlarm:00000000 RTC_SetAlarm
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:1782   .text.RTC_SetAlarm:00000108 $d
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:1789   .text.RTC_AlarmStructInit:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:1794   .text.RTC_AlarmStructInit:00000000 RTC_AlarmStructInit
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:1824   .text.RTC_GetAlarm:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:1829   .text.RTC_GetAlarm:00000000 RTC_GetAlarm
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:1978   .text.RTC_GetAlarm:00000088 $d
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:1983   .text.RTC_AlarmCmd:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:1988   .text.RTC_AlarmCmd:00000000 RTC_AlarmCmd
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:2095   .text.RTC_AlarmCmd:00000058 $d
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:2100   .text.RTC_AlarmSubSecondConfig:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:2105   .text.RTC_AlarmSubSecondConfig:00000000 RTC_AlarmSubSecondConfig
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:2153   .text.RTC_AlarmSubSecondConfig:00000024 $d
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:2158   .text.RTC_GetAlarmSubSecond:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:2163   .text.RTC_GetAlarmSubSecond:00000000 RTC_GetAlarmSubSecond
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:2188   .text.RTC_GetAlarmSubSecond:00000014 $d
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:2193   .text.RTC_WakeUpClockConfig:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:2198   .text.RTC_WakeUpClockConfig:00000000 RTC_WakeUpClockConfig
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:2233   .text.RTC_WakeUpClockConfig:00000020 $d
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:2238   .text.RTC_SetWakeUpCounter:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:2243   .text.RTC_SetWakeUpCounter:00000000 RTC_SetWakeUpCounter
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:2282   .text.RTC_SetWakeUpCounter:00000018 $d
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:2287   .text.RTC_GetWakeUpCounter:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:2292   .text.RTC_GetWakeUpCounter:00000000 RTC_GetWakeUpCounter
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:2308   .text.RTC_GetWakeUpCounter:00000008 $d
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:2313   .text.RTC_WakeUpCmd:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:2318   .text.RTC_WakeUpCmd:00000000 RTC_WakeUpCmd
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:2416   .text.RTC_WakeUpCmd:00000054 $d
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:2421   .text.RTC_DayLightSavingConfig:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:2426   .text.RTC_DayLightSavingConfig:00000000 RTC_DayLightSavingConfig
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:2475   .text.RTC_DayLightSavingConfig:00000028 $d
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:2480   .text.RTC_GetStoreOperation:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:2485   .text.RTC_GetStoreOperation:00000000 RTC_GetStoreOperation
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:2501   .text.RTC_GetStoreOperation:0000000c $d
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:2506   .text.RTC_OutputConfig:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:2511   .text.RTC_OutputConfig:00000000 RTC_OutputConfig
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:2560   .text.RTC_OutputConfig:00000028 $d
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:2565   .text.RTC_CoarseCalibConfig:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:2570   .text.RTC_CoarseCalibConfig:00000000 RTC_CoarseCalibConfig
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:2627   .text.RTC_CoarseCalibConfig:0000002c $d
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:2632   .text.RTC_CoarseCalibCmd:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:2637   .text.RTC_CoarseCalibCmd:00000000 RTC_CoarseCalibCmd
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:2703   .text.RTC_CoarseCalibCmd:0000003c $d
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:2708   .text.RTC_CalibOutputCmd:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:2713   .text.RTC_CalibOutputCmd:00000000 RTC_CalibOutputCmd
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:2754   .text.RTC_CalibOutputCmd:0000002c $d
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:2759   .text.RTC_CalibOutputConfig:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:2764   .text.RTC_CalibOutputConfig:00000000 RTC_CalibOutputConfig
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:2799   .text.RTC_CalibOutputConfig:00000020 $d
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:2804   .text.RTC_SmoothCalibConfig:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:2809   .text.RTC_SmoothCalibConfig:00000000 RTC_SmoothCalibConfig
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:2894   .text.RTC_SmoothCalibConfig:00000048 $d
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:2899   .text.RTC_TimeStampCmd:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:2904   .text.RTC_TimeStampCmd:00000000 RTC_TimeStampCmd
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:2968   .text.RTC_TimeStampCmd:00000030 $d
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:2973   .text.RTC_GetTimeStamp:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:2978   .text.RTC_GetTimeStamp:00000000 RTC_GetTimeStamp
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:3198   .text.RTC_GetTimeStamp:000000b4 $d
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:3203   .text.RTC_GetTimeStampSubSecond:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:3208   .text.RTC_GetTimeStampSubSecond:00000000 RTC_GetTimeStampSubSecond
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:3223   .text.RTC_GetTimeStampSubSecond:00000008 $d
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:3228   .text.RTC_TamperTriggerConfig:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:3233   .text.RTC_TamperTriggerConfig:00000000 RTC_TamperTriggerConfig
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:3261   .text.RTC_TamperTriggerConfig:00000018 $d
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:3266   .text.RTC_TamperCmd:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:3271   .text.RTC_TamperCmd:00000000 RTC_TamperCmd
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:3299   .text.RTC_TamperCmd:00000014 $d
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:3304   .text.RTC_TamperFilterConfig:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:3309   .text.RTC_TamperFilterConfig:00000000 RTC_TamperFilterConfig
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:3331   .text.RTC_TamperFilterConfig:00000014 $d
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:3336   .text.RTC_TamperSamplingFreqConfig:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:3341   .text.RTC_TamperSamplingFreqConfig:00000000 RTC_TamperSamplingFreqConfig
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:3363   .text.RTC_TamperSamplingFreqConfig:00000014 $d
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:3368   .text.RTC_TamperPinsPrechargeDuration:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:3373   .text.RTC_TamperPinsPrechargeDuration:00000000 RTC_TamperPinsPrechargeDuration
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:3395   .text.RTC_TamperPinsPrechargeDuration:00000014 $d
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:3400   .text.RTC_TimeStampOnTamperDetectionCmd:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:3405   .text.RTC_TimeStampOnTamperDetectionCmd:00000000 RTC_TimeStampOnTamperDetectionCmd
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:3430   .text.RTC_TimeStampOnTamperDetectionCmd:00000018 $d
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:3435   .text.RTC_TamperPullUpCmd:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:3440   .text.RTC_TamperPullUpCmd:00000000 RTC_TamperPullUpCmd
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:3465   .text.RTC_TamperPullUpCmd:00000018 $d
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:3470   .text.RTC_WriteBackupRegister:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:3475   .text.RTC_WriteBackupRegister:00000000 RTC_WriteBackupRegister
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:3511   .text.RTC_WriteBackupRegister:0000001c $d
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:3516   .text.RTC_ReadBackupRegister:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:3521   .text.RTC_ReadBackupRegister:00000000 RTC_ReadBackupRegister
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:3557   .text.RTC_ReadBackupRegister:0000001c $d
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:3562   .text.RTC_TamperPinSelection:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:3567   .text.RTC_TamperPinSelection:00000000 RTC_TamperPinSelection
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:3589   .text.RTC_TamperPinSelection:00000014 $d
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:3594   .text.RTC_TimeStampPinSelection:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:3599   .text.RTC_TimeStampPinSelection:00000000 RTC_TimeStampPinSelection
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:3621   .text.RTC_TimeStampPinSelection:00000014 $d
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:3626   .text.RTC_OutputTypeConfig:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:3631   .text.RTC_OutputTypeConfig:00000000 RTC_OutputTypeConfig
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:3653   .text.RTC_OutputTypeConfig:00000014 $d
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:3658   .text.RTC_SynchroShiftConfig:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:3663   .text.RTC_SynchroShiftConfig:00000000 RTC_SynchroShiftConfig
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:3764   .text.RTC_SynchroShiftConfig:00000064 $d
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:3769   .text.RTC_ITConfig:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:3774   .text.RTC_ITConfig:00000000 RTC_ITConfig
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:3844   .text.RTC_ITConfig:00000048 $d
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:3849   .text.RTC_GetFlagStatus:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:3854   .text.RTC_GetFlagStatus:00000000 RTC_GetFlagStatus
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:3880   .text.RTC_GetFlagStatus:00000014 $d
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:3886   .text.RTC_ClearFlag:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:3891   .text.RTC_ClearFlag:00000000 RTC_ClearFlag
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:3912   .text.RTC_ClearFlag:00000018 $d
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:3917   .text.RTC_GetITStatus:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:3922   .text.RTC_GetITStatus:00000000 RTC_GetITStatus
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:3968   .text.RTC_GetITStatus:00000028 $d
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:3973   .text.RTC_ClearITPendingBit:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:3978   .text.RTC_ClearITPendingBit:00000000 RTC_ClearITPendingBit
C:\Users\Student\AppData\Local\Temp\ccK0IEas.s:3999   .text.RTC_ClearITPendingBit:00000018 $d
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
