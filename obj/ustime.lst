   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 2
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"ustime.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.get_us_time,"ax",%progbits
  20              		.align	2
  21              		.global	get_us_time
  22              		.thumb
  23              		.thumb_func
  25              	get_us_time:
  26              	.LFB110:
  27              		.file 1 "sys/ustime.c"
   1:sys/ustime.c  **** #include "ustime.h"
   2:sys/ustime.c  **** #include <FreeRTOS.h>
   3:sys/ustime.c  **** #include "stm32f4xx.h"
   4:sys/ustime.c  **** 
   5:sys/ustime.c  **** /**
   6:sys/ustime.c  ****  * Get time count in microseconds.
   7:sys/ustime.c  ****  *
   8:sys/ustime.c  ****  * \note
   9:sys/ustime.c  ****  *   this function must be called at least
  10:sys/ustime.c  ****  *   once every 65ms to work correctly.
  11:sys/ustime.c  ****  *
  12:sys/ustime.c  ****  */
  13:sys/ustime.c  **** uint64_t get_us_time()
  14:sys/ustime.c  **** {
  28              		.loc 1 14 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 10B5     		push	{r4, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 4, -8
  36              		.cfi_offset 14, -4
  15:sys/ustime.c  ****     static uint16_t t0;
  16:sys/ustime.c  ****     static uint64_t tickcount;
  17:sys/ustime.c  **** 
  18:sys/ustime.c  ****     vPortEnterCritical();
  37              		.loc 1 18 0
  38 0002 FFF7FEFF 		bl	vPortEnterCritical
  39              	.LVL0:
  19:sys/ustime.c  **** 
  20:sys/ustime.c  ****     int t = TIM7->CNT;
  21:sys/ustime.c  ****     if (t < t0)
  40              		.loc 1 21 0
  41 0006 0B49     		ldr	r1, .L4
  20:sys/ustime.c  ****     if (t < t0)
  42              		.loc 1 20 0
  43 0008 0B4B     		ldr	r3, .L4+4
  44              		.loc 1 21 0
  45 000a 0A88     		ldrh	r2, [r1]
  20:sys/ustime.c  ****     if (t < t0)
  46              		.loc 1 20 0
  47 000c 5B6A     		ldr	r3, [r3, #36]
  48              	.LVL1:
  22:sys/ustime.c  ****         t += 0x10000;
  23:sys/ustime.c  **** 
  24:sys/ustime.c  ****     tickcount += t - t0;
  49              		.loc 1 24 0
  50 000e 0B4C     		ldr	r4, .L4+8
  21:sys/ustime.c  ****         t += 0x10000;
  51              		.loc 1 21 0
  52 0010 9342     		cmp	r3, r2
  22:sys/ustime.c  ****         t += 0x10000;
  53              		.loc 1 22 0
  54 0012 B8BF     		it	lt
  55 0014 03F58033 		addlt	r3, r3, #65536
  56              	.LVL2:
  25:sys/ustime.c  ****     t0 = t;
  57              		.loc 1 25 0
  58 0018 0B80     		strh	r3, [r1]	@ movhi
  24:sys/ustime.c  ****     t0 = t;
  59              		.loc 1 24 0
  60 001a D4E90001 		ldrd	r0, [r4]
  61 001e 9B1A     		subs	r3, r3, r2
  62              	.LVL3:
  63 0020 C018     		adds	r0, r0, r3
  64 0022 41EBE371 		adc	r1, r1, r3, asr #31
  65 0026 C4E90001 		strd	r0, [r4]
  26:sys/ustime.c  **** 
  27:sys/ustime.c  ****     vPortExitCritical();
  66              		.loc 1 27 0
  67 002a FFF7FEFF 		bl	vPortExitCritical
  68              	.LVL4:
  28:sys/ustime.c  **** 
  29:sys/ustime.c  ****     return tickcount;
  30:sys/ustime.c  **** }
  69              		.loc 1 30 0
  70 002e D4E90001 		ldrd	r0, [r4]
  71 0032 10BD     		pop	{r4, pc}
  72              	.L5:
  73              		.align	2
  74              	.L4:
  75 0034 00000000 		.word	.LANCHOR0
  76 0038 00140040 		.word	1073746944
  77 003c 00000000 		.word	.LANCHOR1
  78              		.cfi_endproc
  79              	.LFE110:
  81              		.section	.text.delay_us,"ax",%progbits
  82              		.align	2
  83              		.global	delay_us
  84              		.thumb
  85              		.thumb_func
  87              	delay_us:
  88              	.LFB111:
  31:sys/ustime.c  **** 
  32:sys/ustime.c  **** 
  33:sys/ustime.c  **** /**
  34:sys/ustime.c  ****  * Perform a microsecond delay
  35:sys/ustime.c  ****  *
  36:sys/ustime.c  ****  * \param  us  number of microseconds to wait.
  37:sys/ustime.c  ****  * \note   The actual delay will last between us and (us-1) microseconds.
  38:sys/ustime.c  ****  *         To wait _at_least_ 1 us, you should use delay_us(2).
  39:sys/ustime.c  ****  */
  40:sys/ustime.c  **** void delay_us(unsigned long us)
  41:sys/ustime.c  **** {
  89              		.loc 1 41 0
  90              		.cfi_startproc
  91              		@ args = 0, pretend = 0, frame = 0
  92              		@ frame_needed = 0, uses_anonymous_args = 0
  93              		@ link register save eliminated.
  94              	.LVL5:
  95 0000 10B4     		push	{r4}
  96              	.LCFI1:
  97              		.cfi_def_cfa_offset 4
  98              		.cfi_offset 4, -4
  42:sys/ustime.c  ****     uint16_t  t0 = TIM7->CNT;
  99              		.loc 1 42 0
 100 0002 094C     		ldr	r4, .L13
 101 0004 636A     		ldr	r3, [r4, #36]
 102 0006 9BB2     		uxth	r3, r3
 103              	.LVL6:
 104 0008 01E0     		b	.L9
 105              	.LVL7:
 106              	.L12:
 107              	.LBB5:
  43:sys/ustime.c  ****     for (;;) {
  44:sys/ustime.c  ****         int  t = TIM7->CNT;
  45:sys/ustime.c  ****         if (t < t0)
  46:sys/ustime.c  ****             t += 0x10000;
  47:sys/ustime.c  **** 
  48:sys/ustime.c  ****         if (us < t - t0)
  49:sys/ustime.c  ****             return;
  50:sys/ustime.c  **** 
  51:sys/ustime.c  ****         us -= t - t0;
 108              		.loc 1 51 0
 109 000a 1844     		add	r0, r0, r3
 110              	.LVL8:
  52:sys/ustime.c  ****         t0  = t;
 111              		.loc 1 52 0
 112 000c 93B2     		uxth	r3, r2
 113              	.LVL9:
 114              	.L9:
  44:sys/ustime.c  ****         if (t < t0)
 115              		.loc 1 44 0
 116 000e 626A     		ldr	r2, [r4, #36]
 117              	.LVL10:
  45:sys/ustime.c  ****             t += 0x10000;
 118              		.loc 1 45 0
 119 0010 9A42     		cmp	r2, r3
  46:sys/ustime.c  **** 
 120              		.loc 1 46 0
 121 0012 B8BF     		it	lt
 122 0014 02F58032 		addlt	r2, r2, #65536
 123              	.LVL11:
  48:sys/ustime.c  ****             return;
 124              		.loc 1 48 0
 125 0018 D11A     		subs	r1, r2, r3
 126 001a 8842     		cmp	r0, r1
  51:sys/ustime.c  ****         t0  = t;
 127              		.loc 1 51 0
 128 001c A3EB0203 		sub	r3, r3, r2
 129              	.LVL12:
  48:sys/ustime.c  ****             return;
 130              		.loc 1 48 0
 131 0020 F3D2     		bcs	.L12
 132              	.LBE5:
  53:sys/ustime.c  ****     }
  54:sys/ustime.c  **** }
 133              		.loc 1 54 0
 134 0022 5DF8044B 		ldr	r4, [sp], #4
 135              	.LCFI2:
 136              		.cfi_restore 4
 137              		.cfi_def_cfa_offset 0
 138 0026 7047     		bx	lr
 139              	.L14:
 140              		.align	2
 141              	.L13:
 142 0028 00140040 		.word	1073746944
 143              		.cfi_endproc
 144              	.LFE111:
 146              		.section	.text.delay_ms,"ax",%progbits
 147              		.align	2
 148              		.global	delay_ms
 149              		.thumb
 150              		.thumb_func
 152              	delay_ms:
 153              	.LFB112:
  55:sys/ustime.c  **** 
  56:sys/ustime.c  **** 
  57:sys/ustime.c  **** /**
  58:sys/ustime.c  ****  * Perform a millisecond delay
  59:sys/ustime.c  ****  *
  60:sys/ustime.c  ****  * \param  ms  number of milliseconds to wait.
  61:sys/ustime.c  ****  */
  62:sys/ustime.c  **** void delay_ms(unsigned long ms)
  63:sys/ustime.c  **** {
 154              		.loc 1 63 0
 155              		.cfi_startproc
 156              		@ args = 0, pretend = 0, frame = 0
 157              		@ frame_needed = 0, uses_anonymous_args = 0
 158              		@ link register save eliminated.
 159              	.LVL13:
 160 0000 10B4     		push	{r4}
 161              	.LCFI3:
 162              		.cfi_def_cfa_offset 4
 163              		.cfi_offset 4, -4
 164              	.LBB6:
 165              	.LBB7:
  42:sys/ustime.c  ****     for (;;) {
 166              		.loc 1 42 0
 167 0002 0B4C     		ldr	r4, .L21
 168 0004 636A     		ldr	r3, [r4, #36]
 169              	.LBE7:
 170              	.LBE6:
  64:sys/ustime.c  ****     delay_us(ms * 1000);
 171              		.loc 1 64 0
 172 0006 4FF47A72 		mov	r2, #1000
 173              	.LBB11:
 174              	.LBB9:
  42:sys/ustime.c  ****     for (;;) {
 175              		.loc 1 42 0
 176 000a 9BB2     		uxth	r3, r3
 177              	.LBE9:
 178              	.LBE11:
 179              		.loc 1 64 0
 180 000c 02FB00F0 		mul	r0, r2, r0
 181              	.LVL14:
 182 0010 01E0     		b	.L18
 183              	.LVL15:
 184              	.L20:
 185              	.LBB12:
 186              	.LBB10:
 187              	.LBB8:
  51:sys/ustime.c  ****         t0  = t;
 188              		.loc 1 51 0
 189 0012 1844     		add	r0, r0, r3
 190              	.LVL16:
  52:sys/ustime.c  ****     }
 191              		.loc 1 52 0
 192 0014 93B2     		uxth	r3, r2
 193              	.LVL17:
 194              	.L18:
  44:sys/ustime.c  ****         if (t < t0)
 195              		.loc 1 44 0
 196 0016 626A     		ldr	r2, [r4, #36]
 197              	.LVL18:
  45:sys/ustime.c  ****             t += 0x10000;
 198              		.loc 1 45 0
 199 0018 9A42     		cmp	r2, r3
  46:sys/ustime.c  **** 
 200              		.loc 1 46 0
 201 001a B8BF     		it	lt
 202 001c 02F58032 		addlt	r2, r2, #65536
 203              	.LVL19:
  48:sys/ustime.c  ****             return;
 204              		.loc 1 48 0
 205 0020 D11A     		subs	r1, r2, r3
 206 0022 8142     		cmp	r1, r0
  51:sys/ustime.c  ****         t0  = t;
 207              		.loc 1 51 0
 208 0024 A3EB0203 		sub	r3, r3, r2
 209              	.LVL20:
  48:sys/ustime.c  ****             return;
 210              		.loc 1 48 0
 211 0028 F3D9     		bls	.L20
 212              	.LBE8:
 213              	.LBE10:
 214              	.LBE12:
  65:sys/ustime.c  **** }
 215              		.loc 1 65 0
 216 002a 5DF8044B 		ldr	r4, [sp], #4
 217              	.LCFI4:
 218              		.cfi_restore 4
 219              		.cfi_def_cfa_offset 0
 220 002e 7047     		bx	lr
 221              	.L22:
 222              		.align	2
 223              	.L21:
 224 0030 00140040 		.word	1073746944
 225              		.cfi_endproc
 226              	.LFE112:
 228              		.section	.text.init_us_timer,"ax",%progbits
 229              		.align	2
 230              		.global	init_us_timer
 231              		.thumb
 232              		.thumb_func
 234              	init_us_timer:
 235              	.LFB113:
  66:sys/ustime.c  **** 
  67:sys/ustime.c  **** 
  68:sys/ustime.c  **** /**
  69:sys/ustime.c  ****  * Set up TIM7 as a 16bit, microsecond-timer.
  70:sys/ustime.c  ****  *
  71:sys/ustime.c  ****  */
  72:sys/ustime.c  **** void init_us_timer()
  73:sys/ustime.c  **** {
 236              		.loc 1 73 0
 237              		.cfi_startproc
 238              		@ args = 0, pretend = 0, frame = 16
 239              		@ frame_needed = 0, uses_anonymous_args = 0
 240 0000 10B5     		push	{r4, lr}
 241              	.LCFI5:
 242              		.cfi_def_cfa_offset 8
 243              		.cfi_offset 4, -8
 244              		.cfi_offset 14, -4
 245 0002 84B0     		sub	sp, sp, #16
 246              	.LCFI6:
 247              		.cfi_def_cfa_offset 24
  74:sys/ustime.c  ****     RCC_ClocksTypeDef RCC_Clocks;
  75:sys/ustime.c  ****     RCC_GetClocksFreq(&RCC_Clocks);
 248              		.loc 1 75 0
 249 0004 6846     		mov	r0, sp
 250 0006 FFF7FEFF 		bl	RCC_GetClocksFreq
 251              	.LVL21:
  76:sys/ustime.c  **** 
  77:sys/ustime.c  ****     RCC->APB1ENR |= RCC_APB1Periph_TIM7;
 252              		.loc 1 77 0
 253 000a 0A48     		ldr	r0, .L25
  78:sys/ustime.c  ****     TIM7->PSC = (RCC_Clocks.PCLK2_Frequency / 1000000) - 1;
 254              		.loc 1 78 0
 255 000c 0A4C     		ldr	r4, .L25+4
  77:sys/ustime.c  ****     TIM7->PSC = (RCC_Clocks.PCLK2_Frequency / 1000000) - 1;
 256              		.loc 1 77 0
 257 000e 016C     		ldr	r1, [r0, #64]
 258              		.loc 1 78 0
 259 0010 0A4A     		ldr	r2, .L25+8
  77:sys/ustime.c  ****     TIM7->PSC = (RCC_Clocks.PCLK2_Frequency / 1000000) - 1;
 260              		.loc 1 77 0
 261 0012 41F02001 		orr	r1, r1, #32
 262 0016 0164     		str	r1, [r0, #64]
 263              		.loc 1 78 0
 264 0018 039B     		ldr	r3, [sp, #12]
 265 001a A4FB0313 		umull	r1, r3, r4, r3
 266 001e 9B0C     		lsrs	r3, r3, #18
 267 0020 013B     		subs	r3, r3, #1
 268 0022 9BB2     		uxth	r3, r3
  79:sys/ustime.c  ****     TIM7->ARR = 0xFFFF;
 269              		.loc 1 79 0
 270 0024 4FF6FF70 		movw	r0, #65535
  80:sys/ustime.c  ****     TIM7->CR1 = TIM_CR1_CEN;
 271              		.loc 1 80 0
 272 0028 0121     		movs	r1, #1
  78:sys/ustime.c  ****     TIM7->ARR = 0xFFFF;
 273              		.loc 1 78 0
 274 002a 1385     		strh	r3, [r2, #40]	@ movhi
  79:sys/ustime.c  ****     TIM7->ARR = 0xFFFF;
 275              		.loc 1 79 0
 276 002c D062     		str	r0, [r2, #44]
 277              		.loc 1 80 0
 278 002e 1180     		strh	r1, [r2]	@ movhi
  81:sys/ustime.c  **** }
 279              		.loc 1 81 0
 280 0030 04B0     		add	sp, sp, #16
 281              	.LCFI7:
 282              		.cfi_def_cfa_offset 8
 283              		@ sp needed
 284 0032 10BD     		pop	{r4, pc}
 285              	.L26:
 286              		.align	2
 287              	.L25:
 288 0034 00380240 		.word	1073887232
 289 0038 83DE1B43 		.word	1125899907
 290 003c 00140040 		.word	1073746944
 291              		.cfi_endproc
 292              	.LFE113:
 294              		.section	.bss.t0.7587,"aw",%nobits
 295              		.align	1
 296              		.set	.LANCHOR0,. + 0
 299              	t0.7587:
 300 0000 0000     		.space	2
 301              		.section	.bss.tickcount.7588,"aw",%nobits
 302              		.align	3
 303              		.set	.LANCHOR1,. + 0
 306              	tickcount.7588:
 307 0000 00000000 		.space	8
 307      00000000 
 308              		.text
 309              	.Letext0:
 310              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\4.9 2014q4\\arm-none-eabi\\include\\mach
 311              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\4.9 2014q4\\arm-none-eabi\\include\\stdi
 312              		.file 4 "libs/Device/STM32F4xx/Include/stm32f4xx.h"
 313              		.file 5 "libs/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_rcc.h"
 314              		.file 6 "FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h"
 315              		.file 7 "libs/CMSIS/Include/core_cm4.h"
DEFINED SYMBOLS
                            *ABS*:00000000 ustime.c
C:\Users\Student\AppData\Local\Temp\ccPeF3D1.s:20     .text.get_us_time:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccPeF3D1.s:25     .text.get_us_time:00000000 get_us_time
C:\Users\Student\AppData\Local\Temp\ccPeF3D1.s:75     .text.get_us_time:00000034 $d
C:\Users\Student\AppData\Local\Temp\ccPeF3D1.s:82     .text.delay_us:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccPeF3D1.s:87     .text.delay_us:00000000 delay_us
C:\Users\Student\AppData\Local\Temp\ccPeF3D1.s:142    .text.delay_us:00000028 $d
C:\Users\Student\AppData\Local\Temp\ccPeF3D1.s:147    .text.delay_ms:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccPeF3D1.s:152    .text.delay_ms:00000000 delay_ms
C:\Users\Student\AppData\Local\Temp\ccPeF3D1.s:224    .text.delay_ms:00000030 $d
C:\Users\Student\AppData\Local\Temp\ccPeF3D1.s:229    .text.init_us_timer:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccPeF3D1.s:234    .text.init_us_timer:00000000 init_us_timer
C:\Users\Student\AppData\Local\Temp\ccPeF3D1.s:288    .text.init_us_timer:00000034 $d
C:\Users\Student\AppData\Local\Temp\ccPeF3D1.s:295    .bss.t0.7587:00000000 $d
C:\Users\Student\AppData\Local\Temp\ccPeF3D1.s:299    .bss.t0.7587:00000000 t0.7587
C:\Users\Student\AppData\Local\Temp\ccPeF3D1.s:302    .bss.tickcount.7588:00000000 $d
C:\Users\Student\AppData\Local\Temp\ccPeF3D1.s:306    .bss.tickcount.7588:00000000 tickcount.7588
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
vPortEnterCritical
vPortExitCritical
RCC_GetClocksFreq
