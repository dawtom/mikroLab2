   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 2
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"stm32f4xx_can.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CAN_DeInit,"ax",%progbits
  20              		.align	2
  21              		.global	CAN_DeInit
  22              		.thumb
  23              		.thumb_func
  25              	CAN_DeInit:
  26              	.LFB110:
  27              		.file 1 "libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c"
   1:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
   2:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   ******************************************************************************
   3:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @file    stm32f4xx_can.c
   4:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @author  MCD Application Team
   5:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @version V1.3.0
   6:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @date    08-November-2013
   7:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief   This file provides firmware functions to manage the following 
   8:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          functionalities of the Controller area network (CAN) peripheral:           
   9:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *           + Initialization and Configuration 
  10:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *           + CAN Frames Transmission 
  11:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *           + CAN Frames Reception    
  12:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *           + Operation modes switch  
  13:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *           + Error management          
  14:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *           + Interrupts and flags        
  15:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         
  16:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @verbatim                                 
  17:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================      
  18:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                         ##### How to use this driver #####
  19:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================
  20:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     [..]            
  21:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       (#) Enable the CAN controller interface clock using 
  22:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****           RCC_APB1PeriphClockCmd(RCC_APB1Periph_CAN1, ENABLE); for CAN1 
  23:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****           and RCC_APB1PeriphClockCmd(RCC_APB1Periph_CAN2, ENABLE); for CAN2
  24:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       -@- In case you are using CAN2 only, you have to enable the CAN1 clock.
  25:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        
  26:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       (#) CAN pins configuration
  27:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         (++) Enable the clock for the CAN GPIOs using the following function:
  28:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****              RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOx, ENABLE);   
  29:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         (++) Connect the involved CAN pins to AF9 using the following function 
  30:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****              GPIO_PinAFConfig(GPIOx, GPIO_PinSourcex, GPIO_AF_CANx); 
  31:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         (++) Configure these CAN pins in alternate function mode by calling
  32:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****              the function  GPIO_Init();
  33:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       
  34:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       (#) Initialise and configure the CAN using CAN_Init() and 
  35:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****           CAN_FilterInit() functions.   
  36:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                  
  37:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       (#) Transmit the desired CAN frame using CAN_Transmit() function.
  38:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****            
  39:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       (#) Check the transmission of a CAN frame using CAN_TransmitStatus()
  40:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****           function.
  41:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                  
  42:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       (#) Cancel the transmission of a CAN frame using CAN_CancelTransmit()
  43:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****           function.  
  44:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****               
  45:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       (#) Receive a CAN frame using CAN_Recieve() function.
  46:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****            
  47:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       (#) Release the receive FIFOs using CAN_FIFORelease() function.
  48:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                  
  49:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       (#) Return the number of pending received frames using 
  50:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****           CAN_MessagePending() function.            
  51:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                      
  52:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       (#) To control CAN events you can use one of the following two methods:
  53:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         (++) Check on CAN flags using the CAN_GetFlagStatus() function.  
  54:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         (++) Use CAN interrupts through the function CAN_ITConfig() at 
  55:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****              initialization phase and CAN_GetITStatus() function into 
  56:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****              interrupt routines to check if the event has occurred or not.
  57:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****              After checking on a flag you should clear it using CAN_ClearFlag()
  58:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****              function. And after checking on an interrupt event you should 
  59:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****              clear it using CAN_ClearITPendingBit() function.            
  60:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                  
  61:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                 
  62:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @endverbatim
  63:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****            
  64:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   ******************************************************************************
  65:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @attention
  66:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *
  67:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * <h2><center>&copy; COPYRIGHT 2013 STMicroelectronics</center></h2>
  68:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *
  69:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
  70:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * You may not use this file except in compliance with the License.
  71:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * You may obtain a copy of the License at:
  72:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *
  73:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *        http://www.st.com/software_license_agreement_liberty_v2
  74:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *
  75:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * Unless required by applicable law or agreed to in writing, software 
  76:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * distributed under the License is distributed on an "AS IS" BASIS, 
  77:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  78:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * See the License for the specific language governing permissions and
  79:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * limitations under the License.
  80:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *
  81:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   ******************************************************************************  
  82:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
  83:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
  84:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Includes ------------------------------------------------------------------*/
  85:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #include "stm32f4xx_can.h"
  86:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #include "stm32f4xx_rcc.h"
  87:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
  88:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
  89:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @{
  90:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
  91:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
  92:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /** @defgroup CAN 
  93:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief CAN driver modules
  94:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @{
  95:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */ 
  96:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Private typedef -----------------------------------------------------------*/
  97:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Private define ------------------------------------------------------------*/
  98:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
  99:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* CAN Master Control Register bits */
 100:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define MCR_DBF           ((uint32_t)0x00010000) /* software master reset */
 101:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 102:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* CAN Mailbox Transmit Request */
 103:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define TMIDxR_TXRQ       ((uint32_t)0x00000001) /* Transmit mailbox request */
 104:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 105:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* CAN Filter Master Register bits */
 106:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define FMR_FINIT         ((uint32_t)0x00000001) /* Filter init mode */
 107:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 108:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Time out for INAK bit */
 109:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define INAK_TIMEOUT      ((uint32_t)0x0000FFFF)
 110:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Time out for SLAK bit */
 111:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define SLAK_TIMEOUT      ((uint32_t)0x0000FFFF)
 112:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 113:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Flags in TSR register */
 114:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define CAN_FLAGS_TSR     ((uint32_t)0x08000000) 
 115:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Flags in RF1R register */
 116:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define CAN_FLAGS_RF1R    ((uint32_t)0x04000000) 
 117:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Flags in RF0R register */
 118:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define CAN_FLAGS_RF0R    ((uint32_t)0x02000000) 
 119:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Flags in MSR register */
 120:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define CAN_FLAGS_MSR     ((uint32_t)0x01000000) 
 121:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Flags in ESR register */
 122:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define CAN_FLAGS_ESR     ((uint32_t)0x00F00000) 
 123:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 124:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Mailboxes definition */
 125:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define CAN_TXMAILBOX_0   ((uint8_t)0x00)
 126:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define CAN_TXMAILBOX_1   ((uint8_t)0x01)
 127:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define CAN_TXMAILBOX_2   ((uint8_t)0x02) 
 128:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 129:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define CAN_MODE_MASK     ((uint32_t) 0x00000003)
 130:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 131:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Private macro -------------------------------------------------------------*/
 132:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Private variables ---------------------------------------------------------*/
 133:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Private function prototypes -----------------------------------------------*/
 134:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Private functions ---------------------------------------------------------*/
 135:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** static ITStatus CheckITStatus(uint32_t CAN_Reg, uint32_t It_Bit);
 136:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 137:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /** @defgroup CAN_Private_Functions
 138:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @{
 139:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 140:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 141:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /** @defgroup CAN_Group1 Initialization and Configuration functions
 142:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *  @brief    Initialization and Configuration functions 
 143:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *
 144:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @verbatim    
 145:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================
 146:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****               ##### Initialization and Configuration functions #####
 147:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================  
 148:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     [..] This section provides functions allowing to 
 149:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       (+) Initialize the CAN peripherals : Prescaler, operating mode, the maximum 
 150:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****           number of time quanta to perform resynchronization, the number of time 
 151:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****           quanta in Bit Segment 1 and 2 and many other modes. 
 152:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****           Refer to  @ref CAN_InitTypeDef  for more details.
 153:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       (+) Configures the CAN reception filter.                                      
 154:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       (+) Select the start bank filter for slave CAN.
 155:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       (+) Enables or disables the Debug Freeze mode for CAN
 156:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       (+)Enables or disables the CAN Time Trigger Operation communication mode
 157:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    
 158:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @endverbatim
 159:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @{
 160:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 161:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 162:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 163:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Deinitializes the CAN peripheral registers to their default reset values.
 164:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to select the CAN peripheral.
 165:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None.
 166:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 167:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_DeInit(CAN_TypeDef* CANx)
 168:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
  28              		.loc 1 168 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  33 0000 08B5     		push	{r3, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 3, -8
  37              		.cfi_offset 14, -4
 169:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 170:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 171:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  
 172:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (CANx == CAN1)
  38              		.loc 1 172 0
  39 0002 0D4B     		ldr	r3, .L6
  40 0004 9842     		cmp	r0, r3
  41 0006 0BD0     		beq	.L5
 173:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 174:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Enable CAN1 reset state */
 175:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_CAN1, ENABLE);
 176:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Release CAN1 from reset state */
 177:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_CAN1, DISABLE);
 178:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 179:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else
 180:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {  
 181:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Enable CAN2 reset state */
 182:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_CAN2, ENABLE);
  42              		.loc 1 182 0
  43 0008 4FF08060 		mov	r0, #67108864
  44              	.LVL1:
  45 000c 0121     		movs	r1, #1
  46 000e FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
  47              	.LVL2:
 183:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Release CAN2 from reset state */
 184:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_CAN2, DISABLE);
  48              		.loc 1 184 0
  49 0012 4FF08060 		mov	r0, #67108864
  50 0016 0021     		movs	r1, #0
 185:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 186:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
  51              		.loc 1 186 0
  52 0018 BDE80840 		pop	{r3, lr}
  53              	.LCFI1:
  54              		.cfi_remember_state
  55              		.cfi_restore 14
  56              		.cfi_restore 3
  57              		.cfi_def_cfa_offset 0
 184:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
  58              		.loc 1 184 0
  59 001c FFF7FEBF 		b	RCC_APB1PeriphResetCmd
  60              	.LVL3:
  61              	.L5:
  62              	.LCFI2:
  63              		.cfi_restore_state
 175:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Release CAN1 from reset state */
  64              		.loc 1 175 0
  65 0020 4FF00070 		mov	r0, #33554432
  66              	.LVL4:
  67 0024 0121     		movs	r1, #1
  68 0026 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
  69              	.LVL5:
 177:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
  70              		.loc 1 177 0
  71 002a 4FF00070 		mov	r0, #33554432
  72 002e 0021     		movs	r1, #0
  73              		.loc 1 186 0
  74 0030 BDE80840 		pop	{r3, lr}
  75              	.LCFI3:
  76              		.cfi_restore 14
  77              		.cfi_restore 3
  78              		.cfi_def_cfa_offset 0
 177:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
  79              		.loc 1 177 0
  80 0034 FFF7FEBF 		b	RCC_APB1PeriphResetCmd
  81              	.LVL6:
  82              	.L7:
  83              		.align	2
  84              	.L6:
  85 0038 00640040 		.word	1073767424
  86              		.cfi_endproc
  87              	.LFE110:
  89              		.section	.text.CAN_Init,"ax",%progbits
  90              		.align	2
  91              		.global	CAN_Init
  92              		.thumb
  93              		.thumb_func
  95              	CAN_Init:
  96              	.LFB111:
 187:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 188:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 189:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Initializes the CAN peripheral according to the specified
 190:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         parameters in the CAN_InitStruct.
 191:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to select the CAN peripheral.
 192:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CAN_InitStruct: pointer to a CAN_InitTypeDef structure that contains
 193:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         the configuration information for the CAN peripheral.
 194:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval Constant indicates initialization succeed which will be 
 195:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         CAN_InitStatus_Failed or CAN_InitStatus_Success.
 196:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 197:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** uint8_t CAN_Init(CAN_TypeDef* CANx, CAN_InitTypeDef* CAN_InitStruct)
 198:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
  97              		.loc 1 198 0
  98              		.cfi_startproc
  99              		@ args = 0, pretend = 0, frame = 0
 100              		@ frame_needed = 0, uses_anonymous_args = 0
 101              		@ link register save eliminated.
 102              	.LVL7:
 199:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint8_t InitStatus = CAN_InitStatus_Failed;
 200:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint32_t wait_ack = 0x00000000;
 201:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 202:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 203:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(CAN_InitStruct->CAN_TTCM));
 204:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(CAN_InitStruct->CAN_ABOM));
 205:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(CAN_InitStruct->CAN_AWUM));
 206:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(CAN_InitStruct->CAN_NART));
 207:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(CAN_InitStruct->CAN_RFLM));
 208:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(CAN_InitStruct->CAN_TXFP));
 209:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_MODE(CAN_InitStruct->CAN_Mode));
 210:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_SJW(CAN_InitStruct->CAN_SJW));
 211:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_BS1(CAN_InitStruct->CAN_BS1));
 212:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_BS2(CAN_InitStruct->CAN_BS2));
 213:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_PRESCALER(CAN_InitStruct->CAN_Prescaler));
 214:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 215:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Exit from sleep mode */
 216:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CANx->MCR &= (~(uint32_t)CAN_MCR_SLEEP);
 103              		.loc 1 216 0
 104 0000 0368     		ldr	r3, [r0]
 105 0002 23F00203 		bic	r3, r3, #2
 106 0006 0360     		str	r3, [r0]
 217:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 218:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Request initialisation */
 219:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CANx->MCR |= CAN_MCR_INRQ ;
 107              		.loc 1 219 0
 108 0008 0368     		ldr	r3, [r0]
 109 000a 43F00103 		orr	r3, r3, #1
 110 000e 0360     		str	r3, [r0]
 220:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 221:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Wait the acknowledge */
 222:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   while (((CANx->MSR & CAN_MSR_INAK) != CAN_MSR_INAK) && (wait_ack != INAK_TIMEOUT))
 111              		.loc 1 222 0
 112 0010 4368     		ldr	r3, [r0, #4]
 113 0012 DB07     		lsls	r3, r3, #31
 114 0014 07D4     		bmi	.L9
 115 0016 4FF6FF73 		movw	r3, #65535
 116 001a 01E0     		b	.L10
 117              	.LVL8:
 118              	.L37:
 119              		.loc 1 222 0 is_stmt 0 discriminator 1
 120 001c 013B     		subs	r3, r3, #1
 121              	.LVL9:
 122 001e 02D0     		beq	.L9
 123              	.LVL10:
 124              	.L10:
 125              		.loc 1 222 0
 126 0020 4268     		ldr	r2, [r0, #4]
 127 0022 D207     		lsls	r2, r2, #31
 128 0024 FAD5     		bpl	.L37
 129              	.LVL11:
 130              	.L9:
 223:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 224:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     wait_ack++;
 225:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 226:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 227:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check acknowledge */
 228:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if ((CANx->MSR & CAN_MSR_INAK) != CAN_MSR_INAK)
 131              		.loc 1 228 0 is_stmt 1
 132 0026 4368     		ldr	r3, [r0, #4]
 133 0028 13F00103 		ands	r3, r3, #1
 134 002c 5BD0     		beq	.L26
 229:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 230:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     InitStatus = CAN_InitStatus_Failed;
 231:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 232:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else 
 233:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 234:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Set the time triggered communication mode */
 235:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if (CAN_InitStruct->CAN_TTCM == ENABLE)
 135              		.loc 1 235 0
 136 002e 8B79     		ldrb	r3, [r1, #6]	@ zero_extendqisi2
 137 0030 012B     		cmp	r3, #1
 236:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 237:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR |= CAN_MCR_TTCM;
 138              		.loc 1 237 0
 139 0032 0368     		ldr	r3, [r0]
 140 0034 0CBF     		ite	eq
 141 0036 43F08003 		orreq	r3, r3, #128
 238:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 239:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
 240:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 241:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR &= ~(uint32_t)CAN_MCR_TTCM;
 142              		.loc 1 241 0
 143 003a 23F08003 		bicne	r3, r3, #128
 198:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint8_t InitStatus = CAN_InitStatus_Failed;
 144              		.loc 1 198 0
 145 003e 30B4     		push	{r4, r5}
 146              	.LCFI4:
 147              		.cfi_def_cfa_offset 8
 148              		.cfi_offset 4, -8
 149              		.cfi_offset 5, -4
 150              		.loc 1 241 0
 151 0040 0360     		str	r3, [r0]
 242:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 243:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 244:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Set the automatic bus-off management */
 245:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if (CAN_InitStruct->CAN_ABOM == ENABLE)
 152              		.loc 1 245 0
 153 0042 CB79     		ldrb	r3, [r1, #7]	@ zero_extendqisi2
 154 0044 012B     		cmp	r3, #1
 246:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 247:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR |= CAN_MCR_ABOM;
 155              		.loc 1 247 0
 156 0046 0368     		ldr	r3, [r0]
 157 0048 0CBF     		ite	eq
 158 004a 43F04003 		orreq	r3, r3, #64
 248:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 249:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
 250:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 251:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR &= ~(uint32_t)CAN_MCR_ABOM;
 159              		.loc 1 251 0
 160 004e 23F04003 		bicne	r3, r3, #64
 161 0052 0360     		str	r3, [r0]
 252:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 253:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 254:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Set the automatic wake-up mode */
 255:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if (CAN_InitStruct->CAN_AWUM == ENABLE)
 162              		.loc 1 255 0
 163 0054 0B7A     		ldrb	r3, [r1, #8]	@ zero_extendqisi2
 164 0056 012B     		cmp	r3, #1
 256:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 257:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR |= CAN_MCR_AWUM;
 165              		.loc 1 257 0
 166 0058 0368     		ldr	r3, [r0]
 167 005a 0CBF     		ite	eq
 168 005c 43F02003 		orreq	r3, r3, #32
 258:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 259:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
 260:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 261:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR &= ~(uint32_t)CAN_MCR_AWUM;
 169              		.loc 1 261 0
 170 0060 23F02003 		bicne	r3, r3, #32
 171 0064 0360     		str	r3, [r0]
 262:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 263:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 264:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Set the no automatic retransmission */
 265:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if (CAN_InitStruct->CAN_NART == ENABLE)
 172              		.loc 1 265 0
 173 0066 4B7A     		ldrb	r3, [r1, #9]	@ zero_extendqisi2
 174 0068 012B     		cmp	r3, #1
 266:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 267:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR |= CAN_MCR_NART;
 175              		.loc 1 267 0
 176 006a 0368     		ldr	r3, [r0]
 177 006c 0CBF     		ite	eq
 178 006e 43F01003 		orreq	r3, r3, #16
 268:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 269:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
 270:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 271:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR &= ~(uint32_t)CAN_MCR_NART;
 179              		.loc 1 271 0
 180 0072 23F01003 		bicne	r3, r3, #16
 181 0076 0360     		str	r3, [r0]
 272:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 273:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 274:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Set the receive FIFO locked mode */
 275:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if (CAN_InitStruct->CAN_RFLM == ENABLE)
 182              		.loc 1 275 0
 183 0078 8B7A     		ldrb	r3, [r1, #10]	@ zero_extendqisi2
 184 007a 012B     		cmp	r3, #1
 276:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 277:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR |= CAN_MCR_RFLM;
 185              		.loc 1 277 0
 186 007c 0368     		ldr	r3, [r0]
 187 007e 0CBF     		ite	eq
 188 0080 43F00803 		orreq	r3, r3, #8
 278:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 279:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
 280:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 281:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR &= ~(uint32_t)CAN_MCR_RFLM;
 189              		.loc 1 281 0
 190 0084 23F00803 		bicne	r3, r3, #8
 191 0088 0360     		str	r3, [r0]
 282:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 283:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 284:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Set the transmit FIFO priority */
 285:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if (CAN_InitStruct->CAN_TXFP == ENABLE)
 192              		.loc 1 285 0
 193 008a CB7A     		ldrb	r3, [r1, #11]	@ zero_extendqisi2
 194 008c 012B     		cmp	r3, #1
 286:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 287:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR |= CAN_MCR_TXFP;
 195              		.loc 1 287 0
 196 008e 0368     		ldr	r3, [r0]
 197 0090 0CBF     		ite	eq
 198 0092 43F00403 		orreq	r3, r3, #4
 288:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 289:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
 290:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 291:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR &= ~(uint32_t)CAN_MCR_TXFP;
 199              		.loc 1 291 0
 200 0096 23F00403 		bicne	r3, r3, #4
 201 009a 0360     		str	r3, [r0]
 292:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 293:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 294:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Set the bit timing register */
 295:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->BTR = (uint32_t)((uint32_t)CAN_InitStruct->CAN_Mode << 30) | \
 202              		.loc 1 295 0
 203 009c 8A78     		ldrb	r2, [r1, #2]	@ zero_extendqisi2
 296:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                 ((uint32_t)CAN_InitStruct->CAN_SJW << 24) | \
 204              		.loc 1 296 0
 205 009e CD78     		ldrb	r5, [r1, #3]	@ zero_extendqisi2
 297:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                 ((uint32_t)CAN_InitStruct->CAN_BS1 << 16) | \
 206              		.loc 1 297 0
 207 00a0 0B79     		ldrb	r3, [r1, #4]	@ zero_extendqisi2
 298:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                 ((uint32_t)CAN_InitStruct->CAN_BS2 << 20) | \
 208              		.loc 1 298 0
 209 00a2 4C79     		ldrb	r4, [r1, #5]	@ zero_extendqisi2
 299:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                ((uint32_t)CAN_InitStruct->CAN_Prescaler - 1);
 210              		.loc 1 299 0
 211 00a4 0988     		ldrh	r1, [r1]
 212              	.LVL12:
 295:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                 ((uint32_t)CAN_InitStruct->CAN_SJW << 24) | \
 213              		.loc 1 295 0
 214 00a6 9207     		lsls	r2, r2, #30
 215 00a8 42EA0562 		orr	r2, r2, r5, lsl #24
 296:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                 ((uint32_t)CAN_InitStruct->CAN_BS1 << 16) | \
 216              		.loc 1 296 0
 217 00ac 42EA0343 		orr	r3, r2, r3, lsl #16
 297:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                 ((uint32_t)CAN_InitStruct->CAN_BS2 << 20) | \
 218              		.loc 1 297 0
 219 00b0 43EA0453 		orr	r3, r3, r4, lsl #20
 220              		.loc 1 299 0
 221 00b4 4A1E     		subs	r2, r1, #1
 298:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                ((uint32_t)CAN_InitStruct->CAN_Prescaler - 1);
 222              		.loc 1 298 0
 223 00b6 1343     		orrs	r3, r3, r2
 295:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                 ((uint32_t)CAN_InitStruct->CAN_SJW << 24) | \
 224              		.loc 1 295 0
 225 00b8 C361     		str	r3, [r0, #28]
 300:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 301:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Request leave initialisation */
 302:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->MCR &= ~(uint32_t)CAN_MCR_INRQ;
 226              		.loc 1 302 0
 227 00ba 0368     		ldr	r3, [r0]
 228 00bc 23F00103 		bic	r3, r3, #1
 229 00c0 0360     		str	r3, [r0]
 230              	.LVL13:
 303:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 304:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    /* Wait the acknowledge */
 305:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    wait_ack = 0;
 306:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 307:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    while (((CANx->MSR & CAN_MSR_INAK) == CAN_MSR_INAK) && (wait_ack != INAK_TIMEOUT))
 231              		.loc 1 307 0
 232 00c2 4368     		ldr	r3, [r0, #4]
 233 00c4 D907     		lsls	r1, r3, #31
 234 00c6 07D5     		bpl	.L24
 235 00c8 4FF6FF73 		movw	r3, #65535
 236 00cc 01E0     		b	.L25
 237              	.LVL14:
 238              	.L38:
 239              		.loc 1 307 0 is_stmt 0 discriminator 1
 240 00ce 013B     		subs	r3, r3, #1
 241              	.LVL15:
 242 00d0 02D0     		beq	.L24
 243              	.LVL16:
 244              	.L25:
 245              		.loc 1 307 0
 246 00d2 4268     		ldr	r2, [r0, #4]
 247 00d4 D207     		lsls	r2, r2, #31
 248 00d6 FAD4     		bmi	.L38
 249              	.LVL17:
 250              	.L24:
 308:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    {
 309:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****      wait_ack++;
 310:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    }
 311:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 312:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* ...and check acknowledged */
 313:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if ((CANx->MSR & CAN_MSR_INAK) == CAN_MSR_INAK)
 251              		.loc 1 313 0 is_stmt 1
 252 00d8 4068     		ldr	r0, [r0, #4]
 253              	.LVL18:
 254 00da 00F00100 		and	r0, r0, #1
 230:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 255              		.loc 1 230 0
 256 00de 80F00100 		eor	r0, r0, #1
 257              	.LVL19:
 314:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 315:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       InitStatus = CAN_InitStatus_Failed;
 316:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 317:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
 318:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 319:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       InitStatus = CAN_InitStatus_Success ;
 320:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 321:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 322:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 323:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* At this step, return the status of initialization */
 324:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return InitStatus;
 325:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 258              		.loc 1 325 0
 259 00e2 30BC     		pop	{r4, r5}
 260              	.LCFI5:
 261              		.cfi_restore 5
 262              		.cfi_restore 4
 263              		.cfi_def_cfa_offset 0
 264 00e4 7047     		bx	lr
 265              	.LVL20:
 266              	.L26:
 230:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 267              		.loc 1 230 0
 268 00e6 1846     		mov	r0, r3
 269              	.LVL21:
 270 00e8 7047     		bx	lr
 271              		.cfi_endproc
 272              	.LFE111:
 274 00ea 00BF     		.section	.text.CAN_FilterInit,"ax",%progbits
 275              		.align	2
 276              		.global	CAN_FilterInit
 277              		.thumb
 278              		.thumb_func
 280              	CAN_FilterInit:
 281              	.LFB112:
 326:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 327:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 328:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Configures the CAN reception filter according to the specified
 329:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         parameters in the CAN_FilterInitStruct.
 330:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CAN_FilterInitStruct: pointer to a CAN_FilterInitTypeDef structure that
 331:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         contains the configuration information.
 332:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None
 333:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 334:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_FilterInit(CAN_FilterInitTypeDef* CAN_FilterInitStruct)
 335:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 282              		.loc 1 335 0
 283              		.cfi_startproc
 284              		@ args = 0, pretend = 0, frame = 0
 285              		@ frame_needed = 0, uses_anonymous_args = 0
 286              	.LVL22:
 336:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint32_t filter_number_bit_pos = 0;
 337:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 338:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_FILTER_NUMBER(CAN_FilterInitStruct->CAN_FilterNumber));
 339:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_FILTER_MODE(CAN_FilterInitStruct->CAN_FilterMode));
 340:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_FILTER_SCALE(CAN_FilterInitStruct->CAN_FilterScale));
 341:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_FILTER_FIFO(CAN_FilterInitStruct->CAN_FilterFIFOAssignment));
 342:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(CAN_FilterInitStruct->CAN_FilterActivation));
 343:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 344:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   filter_number_bit_pos = ((uint32_t)1) << CAN_FilterInitStruct->CAN_FilterNumber;
 345:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 346:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialisation mode for the filter */
 347:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN1->FMR |= FMR_FINIT;
 287              		.loc 1 347 0
 288 0000 3B4B     		ldr	r3, .L49
 344:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 289              		.loc 1 344 0
 290 0002 817A     		ldrb	r1, [r0, #10]	@ zero_extendqisi2
 291              		.loc 1 347 0
 292 0004 D3F80022 		ldr	r2, [r3, #512]
 293 0008 42F00102 		orr	r2, r2, #1
 335:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint32_t filter_number_bit_pos = 0;
 294              		.loc 1 335 0
 295 000c F0B5     		push	{r4, r5, r6, r7, lr}
 296              	.LCFI6:
 297              		.cfi_def_cfa_offset 20
 298              		.cfi_offset 4, -20
 299              		.cfi_offset 5, -16
 300              		.cfi_offset 6, -12
 301              		.cfi_offset 7, -8
 302              		.cfi_offset 14, -4
 303              		.loc 1 347 0
 304 000e C3F80022 		str	r2, [r3, #512]
 344:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 305              		.loc 1 344 0
 306 0012 0122     		movs	r2, #1
 307 0014 8A40     		lsls	r2, r2, r1
 308              	.LVL23:
 348:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 349:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Filter Deactivation */
 350:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN1->FA1R &= ~(uint32_t)filter_number_bit_pos;
 309              		.loc 1 350 0
 310 0016 D3F81C12 		ldr	r1, [r3, #540]
 311 001a D443     		mvns	r4, r2
 312 001c 2140     		ands	r1, r1, r4
 313 001e C3F81C12 		str	r1, [r3, #540]
 351:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 352:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Filter Scale */
 353:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (CAN_FilterInitStruct->CAN_FilterScale == CAN_FilterScale_16bit)
 314              		.loc 1 353 0
 315 0022 017B     		ldrb	r1, [r0, #12]	@ zero_extendqisi2
 316 0024 C1B9     		cbnz	r1, .L40
 354:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 355:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* 16-bit scale for the filter */
 356:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->FS1R &= ~(uint32_t)filter_number_bit_pos;
 317              		.loc 1 356 0
 318 0026 D3F80C62 		ldr	r6, [r3, #524]
 357:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 358:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* First 16-bit identifier and First 16-bit mask */
 359:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Or First 16-bit identifier and Second 16-bit identifier */
 360:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR1 = 
 361:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdLow) << 16) |
 319              		.loc 1 361 0
 320 002a B0F806C0 		ldrh	ip, [r0, #6]
 362:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         (0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterIdLow);
 321              		.loc 1 362 0
 322 002e 4788     		ldrh	r7, [r0, #2]
 363:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 364:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Second 16-bit identifier and Second 16-bit mask */
 365:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Or Third 16-bit identifier and Fourth 16-bit identifier */
 366:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR2 = 
 367:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdHigh) << 16) |
 323              		.loc 1 367 0
 324 0030 B0F804E0 		ldrh	lr, [r0, #4]
 368:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         (0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterIdHigh);
 325              		.loc 1 368 0
 326 0034 0588     		ldrh	r5, [r0]
 366:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdHigh) << 16) |
 327              		.loc 1 366 0
 328 0036 2F49     		ldr	r1, .L49+4
 356:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 329              		.loc 1 356 0
 330 0038 2640     		ands	r6, r6, r4
 331 003a C3F80C62 		str	r6, [r3, #524]
 360:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdLow) << 16) |
 332              		.loc 1 360 0
 333 003e 867A     		ldrb	r6, [r0, #10]	@ zero_extendqisi2
 334 0040 4836     		adds	r6, r6, #72
 361:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         (0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterIdLow);
 335              		.loc 1 361 0
 336 0042 47EA0C47 		orr	r7, r7, ip, lsl #16
 360:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdLow) << 16) |
 337              		.loc 1 360 0
 338 0046 43F83670 		str	r7, [r3, r6, lsl #3]
 366:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdHigh) << 16) |
 339              		.loc 1 366 0
 340 004a 867A     		ldrb	r6, [r0, #10]	@ zero_extendqisi2
 341 004c F600     		lsls	r6, r6, #3
 342 004e 3144     		add	r1, r1, r6
 367:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         (0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterIdHigh);
 343              		.loc 1 367 0
 344 0050 45EA0E43 		orr	r3, r5, lr, lsl #16
 366:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdHigh) << 16) |
 345              		.loc 1 366 0
 346 0054 4B60     		str	r3, [r1, #4]
 347 0056 017B     		ldrb	r1, [r0, #12]	@ zero_extendqisi2
 348              	.L40:
 369:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 370:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 371:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (CAN_FilterInitStruct->CAN_FilterScale == CAN_FilterScale_32bit)
 349              		.loc 1 371 0
 350 0058 0129     		cmp	r1, #1
 351 005a 2FD0     		beq	.L48
 352              	.L41:
 372:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 373:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* 32-bit scale for the filter */
 374:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->FS1R |= filter_number_bit_pos;
 375:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* 32-bit identifier or First 32-bit identifier */
 376:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR1 = 
 377:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterIdHigh) << 16) |
 378:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         (0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterIdLow);
 379:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* 32-bit mask or Second 32-bit identifier */
 380:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR2 = 
 381:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdHigh) << 16) |
 382:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         (0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdLow);
 383:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 384:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 385:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Filter Mode */
 386:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (CAN_FilterInitStruct->CAN_FilterMode == CAN_FilterMode_IdMask)
 353              		.loc 1 386 0
 354 005c C37A     		ldrb	r3, [r0, #11]	@ zero_extendqisi2
 387:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 388:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /*Id/Mask mode for the filter*/
 389:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->FM1R &= ~(uint32_t)filter_number_bit_pos;
 355              		.loc 1 389 0
 356 005e 2449     		ldr	r1, .L49
 386:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 357              		.loc 1 386 0
 358 0060 33BB     		cbnz	r3, .L42
 359              		.loc 1 389 0
 360 0062 D1F80432 		ldr	r3, [r1, #516]
 361 0066 2340     		ands	r3, r3, r4
 362 0068 C1F80432 		str	r3, [r1, #516]
 363              	.L43:
 390:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 391:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else /* CAN_FilterInitStruct->CAN_FilterMode == CAN_FilterMode_IdList */
 392:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 393:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /*Identifier list mode for the filter*/
 394:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->FM1R |= (uint32_t)filter_number_bit_pos;
 395:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 396:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 397:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Filter FIFO assignment */
 398:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (CAN_FilterInitStruct->CAN_FilterFIFOAssignment == CAN_Filter_FIFO0)
 364              		.loc 1 398 0
 365 006c 0389     		ldrh	r3, [r0, #8]
 366 006e B3B9     		cbnz	r3, .L44
 399:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 400:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* FIFO 0 assignation for the filter */
 401:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->FFA1R &= ~(uint32_t)filter_number_bit_pos;
 367              		.loc 1 401 0
 368 0070 1F49     		ldr	r1, .L49
 369 0072 D1F81432 		ldr	r3, [r1, #532]
 370 0076 1C40     		ands	r4, r4, r3
 371 0078 C1F81442 		str	r4, [r1, #532]
 372              	.L45:
 402:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 403:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 404:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (CAN_FilterInitStruct->CAN_FilterFIFOAssignment == CAN_Filter_FIFO1)
 405:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 406:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* FIFO 1 assignation for the filter */
 407:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->FFA1R |= (uint32_t)filter_number_bit_pos;
 408:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 409:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 410:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Filter activation */
 411:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (CAN_FilterInitStruct->CAN_FilterActivation == ENABLE)
 373              		.loc 1 411 0
 374 007c 437B     		ldrb	r3, [r0, #13]	@ zero_extendqisi2
 375 007e 012B     		cmp	r3, #1
 376 0080 05D1     		bne	.L46
 412:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 413:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->FA1R |= filter_number_bit_pos;
 377              		.loc 1 413 0
 378 0082 1B49     		ldr	r1, .L49
 379 0084 D1F81C32 		ldr	r3, [r1, #540]
 380 0088 1A43     		orrs	r2, r2, r3
 381              	.LVL24:
 382 008a C1F81C22 		str	r2, [r1, #540]
 383              	.L46:
 414:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 415:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 416:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Leave the initialisation mode for the filter */
 417:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN1->FMR &= ~FMR_FINIT;
 384              		.loc 1 417 0
 385 008e 184A     		ldr	r2, .L49
 386 0090 D2F80032 		ldr	r3, [r2, #512]
 387 0094 23F00103 		bic	r3, r3, #1
 388 0098 C2F80032 		str	r3, [r2, #512]
 389 009c F0BD     		pop	{r4, r5, r6, r7, pc}
 390              	.LVL25:
 391              	.L44:
 404:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 392              		.loc 1 404 0
 393 009e 012B     		cmp	r3, #1
 394 00a0 ECD1     		bne	.L45
 407:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 395              		.loc 1 407 0
 396 00a2 1349     		ldr	r1, .L49
 397 00a4 D1F81432 		ldr	r3, [r1, #532]
 398 00a8 1343     		orrs	r3, r3, r2
 399 00aa C1F81432 		str	r3, [r1, #532]
 400 00ae E5E7     		b	.L45
 401              	.L42:
 394:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 402              		.loc 1 394 0
 403 00b0 D1F80432 		ldr	r3, [r1, #516]
 404 00b4 1343     		orrs	r3, r3, r2
 405 00b6 C1F80432 		str	r3, [r1, #516]
 406 00ba D7E7     		b	.L43
 407              	.L48:
 374:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* 32-bit identifier or First 32-bit identifier */
 408              		.loc 1 374 0
 409 00bc 0C4D     		ldr	r5, .L49
 377:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         (0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterIdLow);
 410              		.loc 1 377 0
 411 00be B0F800C0 		ldrh	ip, [r0]
 374:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* 32-bit identifier or First 32-bit identifier */
 412              		.loc 1 374 0
 413 00c2 D5F80C62 		ldr	r6, [r5, #524]
 378:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* 32-bit mask or Second 32-bit identifier */
 414              		.loc 1 378 0
 415 00c6 4788     		ldrh	r7, [r0, #2]
 381:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         (0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdLow);
 416              		.loc 1 381 0
 417 00c8 B0F804E0 		ldrh	lr, [r0, #4]
 382:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 418              		.loc 1 382 0
 419 00cc C188     		ldrh	r1, [r0, #6]
 380:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdHigh) << 16) |
 420              		.loc 1 380 0
 421 00ce 094B     		ldr	r3, .L49+4
 374:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* 32-bit identifier or First 32-bit identifier */
 422              		.loc 1 374 0
 423 00d0 1643     		orrs	r6, r6, r2
 424 00d2 C5F80C62 		str	r6, [r5, #524]
 376:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterIdHigh) << 16) |
 425              		.loc 1 376 0
 426 00d6 867A     		ldrb	r6, [r0, #10]	@ zero_extendqisi2
 427 00d8 4836     		adds	r6, r6, #72
 377:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         (0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterIdLow);
 428              		.loc 1 377 0
 429 00da 47EA0C47 		orr	r7, r7, ip, lsl #16
 376:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterIdHigh) << 16) |
 430              		.loc 1 376 0
 431 00de 45F83670 		str	r7, [r5, r6, lsl #3]
 380:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdHigh) << 16) |
 432              		.loc 1 380 0
 433 00e2 857A     		ldrb	r5, [r0, #10]	@ zero_extendqisi2
 434 00e4 ED00     		lsls	r5, r5, #3
 435 00e6 2B44     		add	r3, r3, r5
 381:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         (0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdLow);
 436              		.loc 1 381 0
 437 00e8 41EA0E41 		orr	r1, r1, lr, lsl #16
 380:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdHigh) << 16) |
 438              		.loc 1 380 0
 439 00ec 5960     		str	r1, [r3, #4]
 440 00ee B5E7     		b	.L41
 441              	.L50:
 442              		.align	2
 443              	.L49:
 444 00f0 00640040 		.word	1073767424
 445 00f4 40660040 		.word	1073768000
 446              		.cfi_endproc
 447              	.LFE112:
 449              		.section	.text.CAN_StructInit,"ax",%progbits
 450              		.align	2
 451              		.global	CAN_StructInit
 452              		.thumb
 453              		.thumb_func
 455              	CAN_StructInit:
 456              	.LFB113:
 418:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 419:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 420:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 421:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Fills each CAN_InitStruct member with its default value.
 422:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CAN_InitStruct: pointer to a CAN_InitTypeDef structure which ill be initialized.
 423:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None
 424:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 425:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_StructInit(CAN_InitTypeDef* CAN_InitStruct)
 426:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 457              		.loc 1 426 0
 458              		.cfi_startproc
 459              		@ args = 0, pretend = 0, frame = 0
 460              		@ frame_needed = 0, uses_anonymous_args = 0
 461              		@ link register save eliminated.
 462              	.LVL26:
 427:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Reset CAN init structure parameters values */
 428:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 429:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialize the time triggered communication mode */
 430:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN_InitStruct->CAN_TTCM = DISABLE;
 463              		.loc 1 430 0
 464 0000 0023     		movs	r3, #0
 426:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Reset CAN init structure parameters values */
 465              		.loc 1 426 0
 466 0002 10B4     		push	{r4}
 467              	.LCFI7:
 468              		.cfi_def_cfa_offset 4
 469              		.cfi_offset 4, -4
 431:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 432:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialize the automatic bus-off management */
 433:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN_InitStruct->CAN_ABOM = DISABLE;
 434:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 435:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialize the automatic wake-up mode */
 436:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN_InitStruct->CAN_AWUM = DISABLE;
 437:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 438:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialize the no automatic retransmission */
 439:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN_InitStruct->CAN_NART = DISABLE;
 440:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 441:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialize the receive FIFO locked mode */
 442:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN_InitStruct->CAN_RFLM = DISABLE;
 443:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 444:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialize the transmit FIFO priority */
 445:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN_InitStruct->CAN_TXFP = DISABLE;
 446:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 447:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialize the CAN_Mode member */
 448:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN_InitStruct->CAN_Mode = CAN_Mode_Normal;
 449:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 450:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialize the CAN_SJW member */
 451:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN_InitStruct->CAN_SJW = CAN_SJW_1tq;
 452:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 453:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialize the CAN_BS1 member */
 454:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN_InitStruct->CAN_BS1 = CAN_BS1_4tq;
 455:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 456:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialize the CAN_BS2 member */
 457:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN_InitStruct->CAN_BS2 = CAN_BS2_3tq;
 470              		.loc 1 457 0
 471 0004 0221     		movs	r1, #2
 454:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 472              		.loc 1 454 0
 473 0006 0324     		movs	r4, #3
 458:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 459:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialize the CAN_Prescaler member */
 460:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN_InitStruct->CAN_Prescaler = 1;
 474              		.loc 1 460 0
 475 0008 0122     		movs	r2, #1
 454:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 476              		.loc 1 454 0
 477 000a 0471     		strb	r4, [r0, #4]
 457:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 478              		.loc 1 457 0
 479 000c 4171     		strb	r1, [r0, #5]
 480              		.loc 1 460 0
 481 000e 0280     		strh	r2, [r0]	@ movhi
 430:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 482              		.loc 1 430 0
 483 0010 8371     		strb	r3, [r0, #6]
 433:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 484              		.loc 1 433 0
 485 0012 C371     		strb	r3, [r0, #7]
 436:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 486              		.loc 1 436 0
 487 0014 0372     		strb	r3, [r0, #8]
 439:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 488              		.loc 1 439 0
 489 0016 4372     		strb	r3, [r0, #9]
 442:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 490              		.loc 1 442 0
 491 0018 8372     		strb	r3, [r0, #10]
 445:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 492              		.loc 1 445 0
 493 001a C372     		strb	r3, [r0, #11]
 448:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 494              		.loc 1 448 0
 495 001c 8370     		strb	r3, [r0, #2]
 451:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 496              		.loc 1 451 0
 497 001e C370     		strb	r3, [r0, #3]
 461:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 498              		.loc 1 461 0
 499 0020 5DF8044B 		ldr	r4, [sp], #4
 500              	.LCFI8:
 501              		.cfi_restore 4
 502              		.cfi_def_cfa_offset 0
 503 0024 7047     		bx	lr
 504              		.cfi_endproc
 505              	.LFE113:
 507 0026 00BF     		.section	.text.CAN_SlaveStartBank,"ax",%progbits
 508              		.align	2
 509              		.global	CAN_SlaveStartBank
 510              		.thumb
 511              		.thumb_func
 513              	CAN_SlaveStartBank:
 514              	.LFB114:
 462:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 463:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 464:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Select the start bank filter for slave CAN.
 465:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CAN_BankNumber: Select the start slave bank filter from 1..27.
 466:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None
 467:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 468:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_SlaveStartBank(uint8_t CAN_BankNumber) 
 469:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 515              		.loc 1 469 0
 516              		.cfi_startproc
 517              		@ args = 0, pretend = 0, frame = 0
 518              		@ frame_needed = 0, uses_anonymous_args = 0
 519              		@ link register save eliminated.
 520              	.LVL27:
 470:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 471:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_BANKNUMBER(CAN_BankNumber));
 472:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 473:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Enter Initialisation mode for the filter */
 474:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN1->FMR |= FMR_FINIT;
 521              		.loc 1 474 0
 522 0000 0D4B     		ldr	r3, .L54
 523 0002 D3F80022 		ldr	r2, [r3, #512]
 524 0006 42F00102 		orr	r2, r2, #1
 525 000a C3F80022 		str	r2, [r3, #512]
 475:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 476:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Select the start slave bank */
 477:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN1->FMR &= (uint32_t)0xFFFFC0F1 ;
 526              		.loc 1 477 0
 527 000e D3F80022 		ldr	r2, [r3, #512]
 528 0012 22F47C52 		bic	r2, r2, #16128
 529 0016 22F00E02 		bic	r2, r2, #14
 530 001a C3F80022 		str	r2, [r3, #512]
 478:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN1->FMR |= (uint32_t)(CAN_BankNumber)<<8;
 531              		.loc 1 478 0
 532 001e D3F80022 		ldr	r2, [r3, #512]
 533 0022 42EA0020 		orr	r0, r2, r0, lsl #8
 534              	.LVL28:
 535 0026 C3F80002 		str	r0, [r3, #512]
 479:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 480:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Leave Initialisation mode for the filter */
 481:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN1->FMR &= ~FMR_FINIT;
 536              		.loc 1 481 0
 537 002a D3F80022 		ldr	r2, [r3, #512]
 538 002e 22F00102 		bic	r2, r2, #1
 539 0032 C3F80022 		str	r2, [r3, #512]
 540 0036 7047     		bx	lr
 541              	.L55:
 542              		.align	2
 543              	.L54:
 544 0038 00640040 		.word	1073767424
 545              		.cfi_endproc
 546              	.LFE114:
 548              		.section	.text.CAN_DBGFreeze,"ax",%progbits
 549              		.align	2
 550              		.global	CAN_DBGFreeze
 551              		.thumb
 552              		.thumb_func
 554              	CAN_DBGFreeze:
 555              	.LFB115:
 482:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 483:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 484:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 485:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Enables or disables the DBG Freeze for CAN.
 486:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to to select the CAN peripheral.
 487:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  NewState: new state of the CAN peripheral. 
 488:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          This parameter can be: ENABLE (CAN reception/transmission is frozen
 489:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          during debug. Reception FIFOs can still be accessed/controlled normally) 
 490:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          or DISABLE (CAN is working during debug).
 491:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None
 492:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 493:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_DBGFreeze(CAN_TypeDef* CANx, FunctionalState NewState)
 494:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 556              		.loc 1 494 0
 557              		.cfi_startproc
 558              		@ args = 0, pretend = 0, frame = 0
 559              		@ frame_needed = 0, uses_anonymous_args = 0
 560              		@ link register save eliminated.
 561              	.LVL29:
 495:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 496:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 497:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 498:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 499:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (NewState != DISABLE)
 500:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 501:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Enable Debug Freeze  */
 502:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->MCR |= MCR_DBF;
 562              		.loc 1 502 0
 563 0000 0368     		ldr	r3, [r0]
 499:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 564              		.loc 1 499 0
 565 0002 19B9     		cbnz	r1, .L59
 503:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 504:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else
 505:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 506:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Disable Debug Freeze */
 507:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->MCR &= ~MCR_DBF;
 566              		.loc 1 507 0
 567 0004 23F48033 		bic	r3, r3, #65536
 568 0008 0360     		str	r3, [r0]
 569 000a 7047     		bx	lr
 570              	.L59:
 502:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 571              		.loc 1 502 0
 572 000c 43F48033 		orr	r3, r3, #65536
 573 0010 0360     		str	r3, [r0]
 574 0012 7047     		bx	lr
 575              		.cfi_endproc
 576              	.LFE115:
 578              		.section	.text.CAN_TTComModeCmd,"ax",%progbits
 579              		.align	2
 580              		.global	CAN_TTComModeCmd
 581              		.thumb
 582              		.thumb_func
 584              	CAN_TTComModeCmd:
 585              	.LFB116:
 508:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 509:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 510:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 511:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 512:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 513:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Enables or disables the CAN Time TriggerOperation communication mode.
 514:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @note   DLC must be programmed as 8 in order Time Stamp (2 bytes) to be 
 515:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         sent over the CAN bus.  
 516:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to to select the CAN peripheral.
 517:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  NewState: Mode new state. This parameter can be: ENABLE or DISABLE.
 518:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         When enabled, Time stamp (TIME[15:0]) value is  sent in the last two
 519:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         data bytes of the 8-byte message: TIME[7:0] in data byte 6 and TIME[15:8] 
 520:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         in data byte 7. 
 521:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None
 522:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 523:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_TTComModeCmd(CAN_TypeDef* CANx, FunctionalState NewState)
 524:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 586              		.loc 1 524 0
 587              		.cfi_startproc
 588              		@ args = 0, pretend = 0, frame = 0
 589              		@ frame_needed = 0, uses_anonymous_args = 0
 590              		@ link register save eliminated.
 591              	.LVL30:
 525:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 526:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 527:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 528:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (NewState != DISABLE)
 529:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 530:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Enable the TTCM mode */
 531:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->MCR |= CAN_MCR_TTCM;
 592              		.loc 1 531 0
 593 0000 0368     		ldr	r3, [r0]
 528:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 594              		.loc 1 528 0
 595 0002 A9B9     		cbnz	r1, .L63
 532:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 533:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Set TGT bits */
 534:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[0].TDTR |= ((uint32_t)CAN_TDT0R_TGT);
 535:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[1].TDTR |= ((uint32_t)CAN_TDT1R_TGT);
 536:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[2].TDTR |= ((uint32_t)CAN_TDT2R_TGT);
 537:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 538:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else
 539:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 540:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Disable the TTCM mode */
 541:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->MCR &= (uint32_t)(~(uint32_t)CAN_MCR_TTCM);
 596              		.loc 1 541 0
 597 0004 23F08003 		bic	r3, r3, #128
 598 0008 0360     		str	r3, [r0]
 542:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 543:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Reset TGT bits */
 544:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[0].TDTR &= ((uint32_t)~CAN_TDT0R_TGT);
 599              		.loc 1 544 0
 600 000a D0F88431 		ldr	r3, [r0, #388]
 601 000e 23F48073 		bic	r3, r3, #256
 602 0012 C0F88431 		str	r3, [r0, #388]
 545:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[1].TDTR &= ((uint32_t)~CAN_TDT1R_TGT);
 603              		.loc 1 545 0
 604 0016 D0F89431 		ldr	r3, [r0, #404]
 605 001a 23F48073 		bic	r3, r3, #256
 606 001e C0F89431 		str	r3, [r0, #404]
 546:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[2].TDTR &= ((uint32_t)~CAN_TDT2R_TGT);
 607              		.loc 1 546 0
 608 0022 D0F8A431 		ldr	r3, [r0, #420]
 609 0026 23F48073 		bic	r3, r3, #256
 610 002a C0F8A431 		str	r3, [r0, #420]
 611 002e 7047     		bx	lr
 612              	.L63:
 531:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 613              		.loc 1 531 0
 614 0030 43F08003 		orr	r3, r3, #128
 615 0034 0360     		str	r3, [r0]
 534:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[1].TDTR |= ((uint32_t)CAN_TDT1R_TGT);
 616              		.loc 1 534 0
 617 0036 D0F88431 		ldr	r3, [r0, #388]
 618 003a 43F48073 		orr	r3, r3, #256
 619 003e C0F88431 		str	r3, [r0, #388]
 535:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[2].TDTR |= ((uint32_t)CAN_TDT2R_TGT);
 620              		.loc 1 535 0
 621 0042 D0F89431 		ldr	r3, [r0, #404]
 622 0046 43F48073 		orr	r3, r3, #256
 623 004a C0F89431 		str	r3, [r0, #404]
 536:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 624              		.loc 1 536 0
 625 004e D0F8A431 		ldr	r3, [r0, #420]
 626 0052 43F48073 		orr	r3, r3, #256
 627 0056 C0F8A431 		str	r3, [r0, #420]
 628 005a 7047     		bx	lr
 629              		.cfi_endproc
 630              	.LFE116:
 632              		.section	.text.CAN_Transmit,"ax",%progbits
 633              		.align	2
 634              		.global	CAN_Transmit
 635              		.thumb
 636              		.thumb_func
 638              	CAN_Transmit:
 639              	.LFB117:
 547:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 548:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 549:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 550:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @}
 551:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 552:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 553:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 554:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /** @defgroup CAN_Group2 CAN Frames Transmission functions
 555:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *  @brief    CAN Frames Transmission functions 
 556:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *
 557:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @verbatim    
 558:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================
 559:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                 ##### CAN Frames Transmission functions #####
 560:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================  
 561:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     [..] This section provides functions allowing to 
 562:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       (+) Initiate and transmit a CAN frame message (if there is an empty mailbox).
 563:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       (+) Check the transmission status of a CAN Frame
 564:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       (+) Cancel a transmit request
 565:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    
 566:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @endverbatim
 567:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @{
 568:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 569:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 570:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 571:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Initiates and transmits a CAN frame message.
 572:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to to select the CAN peripheral.
 573:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  TxMessage: pointer to a structure which contains CAN Id, CAN DLC and CAN data.
 574:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval The number of the mailbox that is used for transmission or
 575:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         CAN_TxStatus_NoMailBox if there is no empty mailbox.
 576:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 577:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** uint8_t CAN_Transmit(CAN_TypeDef* CANx, CanTxMsg* TxMessage)
 578:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 640              		.loc 1 578 0
 641              		.cfi_startproc
 642              		@ args = 0, pretend = 0, frame = 0
 643              		@ frame_needed = 0, uses_anonymous_args = 0
 644              	.LVL31:
 579:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint8_t transmit_mailbox = 0;
 580:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 581:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 582:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_IDTYPE(TxMessage->IDE));
 583:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_RTR(TxMessage->RTR));
 584:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_DLC(TxMessage->DLC));
 585:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 586:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Select one empty transmit mailbox */
 587:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if ((CANx->TSR&CAN_TSR_TME0) == CAN_TSR_TME0)
 645              		.loc 1 587 0
 646 0000 8368     		ldr	r3, [r0, #8]
 578:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint8_t transmit_mailbox = 0;
 647              		.loc 1 578 0
 648 0002 F0B5     		push	{r4, r5, r6, r7, lr}
 649              	.LCFI9:
 650              		.cfi_def_cfa_offset 20
 651              		.cfi_offset 4, -20
 652              		.cfi_offset 5, -16
 653              		.cfi_offset 6, -12
 654              		.cfi_offset 7, -8
 655              		.cfi_offset 14, -4
 656              		.loc 1 587 0
 657 0004 5C01     		lsls	r4, r3, #5
 658 0006 05D4     		bmi	.L70
 588:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 589:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     transmit_mailbox = 0;
 590:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 591:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else if ((CANx->TSR&CAN_TSR_TME1) == CAN_TSR_TME1)
 659              		.loc 1 591 0
 660 0008 8368     		ldr	r3, [r0, #8]
 661 000a 1A01     		lsls	r2, r3, #4
 662 000c 57D5     		bpl	.L77
 663 000e 0123     		movs	r3, #1
 592:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 593:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     transmit_mailbox = 1;
 664              		.loc 1 593 0
 665 0010 1E46     		mov	r6, r3
 666 0012 01E0     		b	.L65
 667              	.L70:
 668 0014 0023     		movs	r3, #0
 589:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 669              		.loc 1 589 0
 670 0016 1E46     		mov	r6, r3
 671              	.L65:
 672              	.LVL32:
 673 0018 1B01     		lsls	r3, r3, #4
 674 001a C218     		adds	r2, r0, r3
 594:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 595:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else if ((CANx->TSR&CAN_TSR_TME2) == CAN_TSR_TME2)
 596:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 597:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     transmit_mailbox = 2;
 598:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 599:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else
 600:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 601:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     transmit_mailbox = CAN_TxStatus_NoMailBox;
 602:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 603:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 604:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (transmit_mailbox != CAN_TxStatus_NoMailBox)
 605:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 606:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Set up the Id */
 607:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TIR &= TMIDxR_TXRQ;
 675              		.loc 1 607 0
 676 001c D2F88041 		ldr	r4, [r2, #384]
 677 0020 04F00104 		and	r4, r4, #1
 678 0024 C2F88041 		str	r4, [r2, #384]
 608:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if (TxMessage->IDE == CAN_Id_Standard)
 679              		.loc 1 608 0
 680 0028 0C7A     		ldrb	r4, [r1, #8]	@ zero_extendqisi2
 681 002a 002C     		cmp	r4, #0
 682 002c 3DD0     		beq	.L68
 609:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 610:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       assert_param(IS_CAN_STDID(TxMessage->StdId));  
 611:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->sTxMailBox[transmit_mailbox].TIR |= ((TxMessage->StdId << 21) | \
 612:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                                   TxMessage->RTR);
 613:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 614:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
 615:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 616:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       assert_param(IS_CAN_EXTID(TxMessage->ExtId));
 617:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->sTxMailBox[transmit_mailbox].TIR |= ((TxMessage->ExtId << 3) | \
 683              		.loc 1 617 0
 684 002e 4D68     		ldr	r5, [r1, #4]
 685 0030 D2F88071 		ldr	r7, [r2, #384]
 618:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                                   TxMessage->IDE | \
 686              		.loc 1 618 0
 687 0034 91F809E0 		ldrb	lr, [r1, #9]	@ zero_extendqisi2
 617:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                                   TxMessage->IDE | \
 688              		.loc 1 617 0
 689 0038 44EAC504 		orr	r4, r4, r5, lsl #3
 690 003c 3C43     		orrs	r4, r4, r7
 691 003e 44EA0E04 		orr	r4, r4, lr
 692 0042 C2F88041 		str	r4, [r2, #384]
 693              	.L67:
 619:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                                   TxMessage->RTR);
 620:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 621:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     
 622:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Set up the DLC */
 623:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     TxMessage->DLC &= (uint8_t)0x0000000F;
 694              		.loc 1 623 0
 695 0046 8C7A     		ldrb	r4, [r1, #10]	@ zero_extendqisi2
 696 0048 04F00F04 		and	r4, r4, #15
 697 004c 8C72     		strb	r4, [r1, #10]
 624:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TDTR &= (uint32_t)0xFFFFFFF0;
 698              		.loc 1 624 0
 699 004e D2F88441 		ldr	r4, [r2, #388]
 700 0052 24F00F04 		bic	r4, r4, #15
 701 0056 C2F88441 		str	r4, [r2, #388]
 625:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TDTR |= TxMessage->DLC;
 702              		.loc 1 625 0
 703 005a 8D7A     		ldrb	r5, [r1, #10]	@ zero_extendqisi2
 704 005c D2F88441 		ldr	r4, [r2, #388]
 705 0060 2C43     		orrs	r4, r4, r5
 706 0062 C2F88441 		str	r4, [r2, #388]
 626:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 627:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Set up the data field */
 628:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TDLR = (((uint32_t)TxMessage->Data[3] << 24) | 
 629:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[2] << 16) |
 707              		.loc 1 629 0
 708 0066 4F7B     		ldrb	r7, [r1, #13]	@ zero_extendqisi2
 628:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[2] << 16) |
 709              		.loc 1 628 0
 710 0068 8C7B     		ldrb	r4, [r1, #14]	@ zero_extendqisi2
 630:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[1] << 8) | 
 631:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[0]));
 711              		.loc 1 631 0
 712 006a CD7A     		ldrb	r5, [r1, #11]	@ zero_extendqisi2
 630:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[1] << 8) | 
 713              		.loc 1 630 0
 714 006c 91F80CE0 		ldrb	lr, [r1, #12]	@ zero_extendqisi2
 629:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[1] << 8) | 
 715              		.loc 1 629 0
 716 0070 3F04     		lsls	r7, r7, #16
 628:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[2] << 16) |
 717              		.loc 1 628 0
 718 0072 47EA0464 		orr	r4, r7, r4, lsl #24
 719 0076 0344     		add	r3, r3, r0
 720 0078 2C43     		orrs	r4, r4, r5
 630:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[1] << 8) | 
 721              		.loc 1 630 0
 722 007a 44EA0E24 		orr	r4, r4, lr, lsl #8
 628:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[2] << 16) |
 723              		.loc 1 628 0
 724 007e C3F88841 		str	r4, [r3, #392]
 632:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TDHR = (((uint32_t)TxMessage->Data[7] << 24) | 
 633:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[6] << 16) |
 725              		.loc 1 633 0
 726 0082 4D7C     		ldrb	r5, [r1, #17]	@ zero_extendqisi2
 632:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TDHR = (((uint32_t)TxMessage->Data[7] << 24) | 
 727              		.loc 1 632 0
 728 0084 8F7C     		ldrb	r7, [r1, #18]	@ zero_extendqisi2
 634:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[5] << 8) |
 635:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[4]));
 729              		.loc 1 635 0
 730 0086 CC7B     		ldrb	r4, [r1, #15]	@ zero_extendqisi2
 634:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[5] << 8) |
 731              		.loc 1 634 0
 732 0088 087C     		ldrb	r0, [r1, #16]	@ zero_extendqisi2
 733              	.LVL33:
 633:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[5] << 8) |
 734              		.loc 1 633 0
 735 008a 2D04     		lsls	r5, r5, #16
 632:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TDHR = (((uint32_t)TxMessage->Data[7] << 24) | 
 736              		.loc 1 632 0
 737 008c 45EA0761 		orr	r1, r5, r7, lsl #24
 738              	.LVL34:
 739 0090 2143     		orrs	r1, r1, r4
 634:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[5] << 8) |
 740              		.loc 1 634 0
 741 0092 41EA0021 		orr	r1, r1, r0, lsl #8
 632:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TDHR = (((uint32_t)TxMessage->Data[7] << 24) | 
 742              		.loc 1 632 0
 743 0096 C3F88C11 		str	r1, [r3, #396]
 636:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Request transmission */
 637:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TIR |= TMIDxR_TXRQ;
 744              		.loc 1 637 0
 745 009a D2F88031 		ldr	r3, [r2, #384]
 746 009e 43F00103 		orr	r3, r3, #1
 747 00a2 C2F88031 		str	r3, [r2, #384]
 638:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 639:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return transmit_mailbox;
 640:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 748              		.loc 1 640 0
 749 00a6 3046     		mov	r0, r6
 750 00a8 F0BD     		pop	{r4, r5, r6, r7, pc}
 751              	.LVL35:
 752              	.L68:
 611:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                                   TxMessage->RTR);
 753              		.loc 1 611 0
 754 00aa 0F68     		ldr	r7, [r1]
 755 00ac 4C7A     		ldrb	r4, [r1, #9]	@ zero_extendqisi2
 756 00ae D2F88051 		ldr	r5, [r2, #384]
 757 00b2 44EA4754 		orr	r4, r4, r7, lsl #21
 758 00b6 2C43     		orrs	r4, r4, r5
 759 00b8 C2F88041 		str	r4, [r2, #384]
 760 00bc C3E7     		b	.L67
 761              	.LVL36:
 762              	.L77:
 595:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 763              		.loc 1 595 0
 764 00be 8368     		ldr	r3, [r0, #8]
 765 00c0 DB00     		lsls	r3, r3, #3
 766 00c2 02D5     		bpl	.L78
 767 00c4 0223     		movs	r3, #2
 597:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 768              		.loc 1 597 0
 769 00c6 1E46     		mov	r6, r3
 770 00c8 A6E7     		b	.L65
 771              	.L78:
 601:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 772              		.loc 1 601 0
 773 00ca 0426     		movs	r6, #4
 774              		.loc 1 640 0
 775 00cc 3046     		mov	r0, r6
 776              	.LVL37:
 777 00ce F0BD     		pop	{r4, r5, r6, r7, pc}
 778              		.cfi_endproc
 779              	.LFE117:
 781              		.section	.text.CAN_TransmitStatus,"ax",%progbits
 782              		.align	2
 783              		.global	CAN_TransmitStatus
 784              		.thumb
 785              		.thumb_func
 787              	CAN_TransmitStatus:
 788              	.LFB118:
 641:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 642:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 643:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Checks the transmission status of a CAN Frame.
 644:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to select the CAN peripheral.
 645:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  TransmitMailbox: the number of the mailbox that is used for transmission.
 646:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval CAN_TxStatus_Ok if the CAN driver transmits the message, 
 647:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         CAN_TxStatus_Failed in an other case.
 648:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 649:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** uint8_t CAN_TransmitStatus(CAN_TypeDef* CANx, uint8_t TransmitMailbox)
 650:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 789              		.loc 1 650 0
 790              		.cfi_startproc
 791              		@ args = 0, pretend = 0, frame = 0
 792              		@ frame_needed = 0, uses_anonymous_args = 0
 793              		@ link register save eliminated.
 794              	.LVL38:
 651:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint32_t state = 0;
 652:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 653:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 654:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 655:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_TRANSMITMAILBOX(TransmitMailbox));
 656:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  
 657:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   switch (TransmitMailbox)
 795              		.loc 1 657 0
 796 0000 0129     		cmp	r1, #1
 797 0002 1AD0     		beq	.L81
 798 0004 15D3     		bcc	.L82
 799 0006 0229     		cmp	r1, #2
 800 0008 0FD1     		bne	.L91
 658:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 659:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case (CAN_TXMAILBOX_0): 
 660:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       state =   CANx->TSR &  (CAN_TSR_RQCP0 | CAN_TSR_TXOK0 | CAN_TSR_TME0);
 661:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 662:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case (CAN_TXMAILBOX_1): 
 663:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       state =   CANx->TSR &  (CAN_TSR_RQCP1 | CAN_TSR_TXOK1 | CAN_TSR_TME1);
 664:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 665:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case (CAN_TXMAILBOX_2): 
 666:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       state =   CANx->TSR &  (CAN_TSR_RQCP2 | CAN_TSR_TXOK2 | CAN_TSR_TME2);
 801              		.loc 1 666 0
 802 000a 8268     		ldr	r2, [r0, #8]
 803 000c 0D4B     		ldr	r3, .L94
 804 000e 1340     		ands	r3, r3, r2
 805              	.LVL39:
 806              	.L84:
 667:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 668:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     default:
 669:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       state = CAN_TxStatus_Failed;
 670:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 671:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 672:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   switch (state)
 807              		.loc 1 672 0
 808 0010 0D4A     		ldr	r2, .L94+4
 809 0012 9342     		cmp	r3, r2
 810 0014 06D0     		beq	.L89
 811 0016 07D9     		bls	.L93
 812 0018 0C4A     		ldr	r2, .L94+8
 813 001a 9342     		cmp	r3, r2
 814 001c 02D0     		beq	.L89
 815 001e 094A     		ldr	r2, .L94
 816 0020 9342     		cmp	r3, r2
 817 0022 04D1     		bne	.L85
 818              	.L89:
 819              	.LVL40:
 673:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 674:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* transmit pending  */
 675:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case (0x0): state = CAN_TxStatus_Pending;
 676:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 677:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* transmit failed  */
 678:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****      case (CAN_TSR_RQCP0 | CAN_TSR_TME0): state = CAN_TxStatus_Failed;
 679:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 680:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****      case (CAN_TSR_RQCP1 | CAN_TSR_TME1): state = CAN_TxStatus_Failed;
 681:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 682:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****      case (CAN_TSR_RQCP2 | CAN_TSR_TME2): state = CAN_TxStatus_Failed;
 683:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 684:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* transmit succeeded  */
 685:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case (CAN_TSR_RQCP0 | CAN_TSR_TXOK0 | CAN_TSR_TME0):state = CAN_TxStatus_Ok;
 686:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 687:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case (CAN_TSR_RQCP1 | CAN_TSR_TXOK1 | CAN_TSR_TME1):state = CAN_TxStatus_Ok;
 688:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 689:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case (CAN_TSR_RQCP2 | CAN_TSR_TXOK2 | CAN_TSR_TME2):state = CAN_TxStatus_Ok;
 690:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 820              		.loc 1 690 0
 821 0024 0120     		movs	r0, #1
 822              	.LVL41:
 823 0026 7047     		bx	lr
 824              	.LVL42:
 825              	.L93:
 672:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 826              		.loc 1 672 0
 827 0028 0BB9     		cbnz	r3, .L85
 828              	.LVL43:
 829              	.L91:
 830 002a 0220     		movs	r0, #2
 831              	.LVL44:
 691:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     default: state = CAN_TxStatus_Failed;
 692:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 693:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 694:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return (uint8_t) state;
 695:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 832              		.loc 1 695 0
 833 002c 7047     		bx	lr
 834              	.LVL45:
 835              	.L85:
 672:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 836              		.loc 1 672 0
 837 002e 0020     		movs	r0, #0
 838              	.LVL46:
 839 0030 7047     		bx	lr
 840              	.LVL47:
 841              	.L82:
 660:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 842              		.loc 1 660 0
 843 0032 8268     		ldr	r2, [r0, #8]
 844 0034 044B     		ldr	r3, .L94+4
 845 0036 1340     		ands	r3, r3, r2
 846              	.LVL48:
 661:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case (CAN_TXMAILBOX_1): 
 847              		.loc 1 661 0
 848 0038 EAE7     		b	.L84
 849              	.LVL49:
 850              	.L81:
 663:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 851              		.loc 1 663 0
 852 003a 8268     		ldr	r2, [r0, #8]
 853 003c 034B     		ldr	r3, .L94+8
 854 003e 1340     		ands	r3, r3, r2
 855              	.LVL50:
 664:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case (CAN_TXMAILBOX_2): 
 856              		.loc 1 664 0
 857 0040 E6E7     		b	.L84
 858              	.L95:
 859 0042 00BF     		.align	2
 860              	.L94:
 861 0044 00000310 		.word	268632064
 862 0048 03000004 		.word	67108867
 863 004c 00030008 		.word	134218496
 864              		.cfi_endproc
 865              	.LFE118:
 867              		.section	.text.CAN_CancelTransmit,"ax",%progbits
 868              		.align	2
 869              		.global	CAN_CancelTransmit
 870              		.thumb
 871              		.thumb_func
 873              	CAN_CancelTransmit:
 874              	.LFB119:
 696:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 697:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 698:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Cancels a transmit request.
 699:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to select the CAN peripheral.
 700:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  Mailbox: Mailbox number.
 701:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None
 702:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 703:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_CancelTransmit(CAN_TypeDef* CANx, uint8_t Mailbox)
 704:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 875              		.loc 1 704 0
 876              		.cfi_startproc
 877              		@ args = 0, pretend = 0, frame = 0
 878              		@ frame_needed = 0, uses_anonymous_args = 0
 879              		@ link register save eliminated.
 880              	.LVL51:
 705:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 706:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 707:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_TRANSMITMAILBOX(Mailbox));
 708:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* abort transmission */
 709:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   switch (Mailbox)
 881              		.loc 1 709 0
 882 0000 0129     		cmp	r1, #1
 883 0002 0DD0     		beq	.L98
 884 0004 07D3     		bcc	.L99
 885 0006 0229     		cmp	r1, #2
 886 0008 04D1     		bne	.L101
 710:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 711:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case (CAN_TXMAILBOX_0): CANx->TSR |= CAN_TSR_ABRQ0;
 712:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 713:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case (CAN_TXMAILBOX_1): CANx->TSR |= CAN_TSR_ABRQ1;
 714:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 715:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case (CAN_TXMAILBOX_2): CANx->TSR |= CAN_TSR_ABRQ2;
 887              		.loc 1 715 0
 888 000a 8368     		ldr	r3, [r0, #8]
 889 000c 43F40003 		orr	r3, r3, #8388608
 890 0010 8360     		str	r3, [r0, #8]
 891 0012 7047     		bx	lr
 892              	.L101:
 893 0014 7047     		bx	lr
 894              	.L99:
 711:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 895              		.loc 1 711 0
 896 0016 8368     		ldr	r3, [r0, #8]
 897 0018 43F08003 		orr	r3, r3, #128
 898 001c 8360     		str	r3, [r0, #8]
 712:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case (CAN_TXMAILBOX_1): CANx->TSR |= CAN_TSR_ABRQ1;
 899              		.loc 1 712 0
 900 001e 7047     		bx	lr
 901              	.L98:
 713:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 902              		.loc 1 713 0
 903 0020 8368     		ldr	r3, [r0, #8]
 904 0022 43F40043 		orr	r3, r3, #32768
 905 0026 8360     		str	r3, [r0, #8]
 714:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case (CAN_TXMAILBOX_2): CANx->TSR |= CAN_TSR_ABRQ2;
 906              		.loc 1 714 0
 907 0028 7047     		bx	lr
 908              		.cfi_endproc
 909              	.LFE119:
 911 002a 00BF     		.section	.text.CAN_Receive,"ax",%progbits
 912              		.align	2
 913              		.global	CAN_Receive
 914              		.thumb
 915              		.thumb_func
 917              	CAN_Receive:
 918              	.LFB120:
 716:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 717:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     default:
 718:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 719:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 720:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 721:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 722:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @}
 723:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 724:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 725:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 726:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /** @defgroup CAN_Group3 CAN Frames Reception functions
 727:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *  @brief    CAN Frames Reception functions 
 728:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *
 729:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @verbatim    
 730:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================
 731:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                 ##### CAN Frames Reception functions #####
 732:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================  
 733:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     [..] This section provides functions allowing to 
 734:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       (+) Receive a correct CAN frame
 735:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       (+) Release a specified receive FIFO (2 FIFOs are available)
 736:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       (+) Return the number of the pending received CAN frames
 737:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    
 738:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @endverbatim
 739:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @{
 740:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 741:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 742:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 743:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Receives a correct CAN frame.
 744:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to select the CAN peripheral.
 745:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  FIFONumber: Receive FIFO number, CAN_FIFO0 or CAN_FIFO1.
 746:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  RxMessage: pointer to a structure receive frame which contains CAN Id,
 747:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         CAN DLC, CAN data and FMI number.
 748:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None
 749:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 750:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_Receive(CAN_TypeDef* CANx, uint8_t FIFONumber, CanRxMsg* RxMessage)
 751:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 919              		.loc 1 751 0
 920              		.cfi_startproc
 921              		@ args = 0, pretend = 0, frame = 0
 922              		@ frame_needed = 0, uses_anonymous_args = 0
 923              		@ link register save eliminated.
 924              	.LVL52:
 925 0000 10B4     		push	{r4}
 926              	.LCFI10:
 927              		.cfi_def_cfa_offset 4
 928              		.cfi_offset 4, -4
 929 0002 00EB0114 		add	r4, r0, r1, lsl #4
 752:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 753:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 754:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_FIFO(FIFONumber));
 755:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Get the Id */
 756:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->IDE = (uint8_t)0x04 & CANx->sFIFOMailBox[FIFONumber].RIR;
 930              		.loc 1 756 0
 931 0006 D4F8B031 		ldr	r3, [r4, #432]
 932 000a 03F00403 		and	r3, r3, #4
 933 000e DBB2     		uxtb	r3, r3
 934 0010 1372     		strb	r3, [r2, #8]
 757:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (RxMessage->IDE == CAN_Id_Standard)
 935              		.loc 1 757 0
 936 0012 D3BB     		cbnz	r3, .L103
 758:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 759:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     RxMessage->StdId = (uint32_t)0x000007FF & (CANx->sFIFOMailBox[FIFONumber].RIR >> 21);
 937              		.loc 1 759 0
 938 0014 D4F8B031 		ldr	r3, [r4, #432]
 939 0018 5B0D     		lsrs	r3, r3, #21
 940 001a 1360     		str	r3, [r2]
 941              	.L104:
 760:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 761:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else
 762:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 763:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     RxMessage->ExtId = (uint32_t)0x1FFFFFFF & (CANx->sFIFOMailBox[FIFONumber].RIR >> 3);
 764:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 765:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 766:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->RTR = (uint8_t)0x02 & CANx->sFIFOMailBox[FIFONumber].RIR;
 942              		.loc 1 766 0
 943 001c D4F8B031 		ldr	r3, [r4, #432]
 944 0020 03F00203 		and	r3, r3, #2
 945 0024 5372     		strb	r3, [r2, #9]
 767:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Get the DLC */
 768:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->DLC = (uint8_t)0x0F & CANx->sFIFOMailBox[FIFONumber].RDTR;
 946              		.loc 1 768 0
 947 0026 D4F8B431 		ldr	r3, [r4, #436]
 948 002a 03F00F03 		and	r3, r3, #15
 949 002e 9372     		strb	r3, [r2, #10]
 769:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Get the FMI */
 770:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->FMI = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDTR >> 8);
 950              		.loc 1 770 0
 951 0030 D4F8B441 		ldr	r4, [r4, #436]
 771:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Get the data field */
 772:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->Data[0] = (uint8_t)0xFF & CANx->sFIFOMailBox[FIFONumber].RDLR;
 952              		.loc 1 772 0
 953 0034 00EB0113 		add	r3, r0, r1, lsl #4
 770:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Get the data field */
 954              		.loc 1 770 0
 955 0038 240A     		lsrs	r4, r4, #8
 956 003a D474     		strb	r4, [r2, #19]
 957              		.loc 1 772 0
 958 003c D3F8B841 		ldr	r4, [r3, #440]
 959 0040 D472     		strb	r4, [r2, #11]
 773:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->Data[1] = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDLR >> 8);
 960              		.loc 1 773 0
 961 0042 D3F8B841 		ldr	r4, [r3, #440]
 962 0046 240A     		lsrs	r4, r4, #8
 963 0048 1473     		strb	r4, [r2, #12]
 774:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->Data[2] = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDLR >> 16);
 964              		.loc 1 774 0
 965 004a D3F8B841 		ldr	r4, [r3, #440]
 966 004e 240C     		lsrs	r4, r4, #16
 967 0050 5473     		strb	r4, [r2, #13]
 775:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->Data[3] = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDLR >> 24);
 968              		.loc 1 775 0
 969 0052 D3F8B841 		ldr	r4, [r3, #440]
 970 0056 240E     		lsrs	r4, r4, #24
 971 0058 9473     		strb	r4, [r2, #14]
 776:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->Data[4] = (uint8_t)0xFF & CANx->sFIFOMailBox[FIFONumber].RDHR;
 972              		.loc 1 776 0
 973 005a D3F8BC41 		ldr	r4, [r3, #444]
 974 005e D473     		strb	r4, [r2, #15]
 777:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->Data[5] = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDHR >> 8);
 975              		.loc 1 777 0
 976 0060 D3F8BC41 		ldr	r4, [r3, #444]
 977 0064 240A     		lsrs	r4, r4, #8
 978 0066 1474     		strb	r4, [r2, #16]
 778:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->Data[6] = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDHR >> 16);
 979              		.loc 1 778 0
 980 0068 D3F8BC41 		ldr	r4, [r3, #444]
 772:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->Data[1] = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDLR >> 8);
 981              		.loc 1 772 0
 982 006c 03F5DC73 		add	r3, r3, #440
 983              		.loc 1 778 0
 984 0070 240C     		lsrs	r4, r4, #16
 985 0072 5474     		strb	r4, [r2, #17]
 779:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->Data[7] = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDHR >> 24);
 986              		.loc 1 779 0
 987 0074 5B68     		ldr	r3, [r3, #4]
 988 0076 1B0E     		lsrs	r3, r3, #24
 989 0078 9374     		strb	r3, [r2, #18]
 780:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Release the FIFO */
 781:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Release FIFO0 */
 782:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (FIFONumber == CAN_FIFO0)
 990              		.loc 1 782 0
 991 007a 59B1     		cbz	r1, .L108
 783:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 784:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->RF0R |= CAN_RF0R_RFOM0;
 785:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 786:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Release FIFO1 */
 787:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else /* FIFONumber == CAN_FIFO1 */
 788:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 789:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->RF1R |= CAN_RF1R_RFOM1;
 992              		.loc 1 789 0
 993 007c 0369     		ldr	r3, [r0, #16]
 790:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 791:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 994              		.loc 1 791 0
 995 007e 5DF8044B 		ldr	r4, [sp], #4
 996              	.LCFI11:
 997              		.cfi_remember_state
 998              		.cfi_restore 4
 999              		.cfi_def_cfa_offset 0
 789:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 1000              		.loc 1 789 0
 1001 0082 43F02003 		orr	r3, r3, #32
 1002 0086 0361     		str	r3, [r0, #16]
 1003              		.loc 1 791 0
 1004 0088 7047     		bx	lr
 1005              	.L103:
 1006              	.LCFI12:
 1007              		.cfi_restore_state
 763:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 1008              		.loc 1 763 0
 1009 008a D4F8B031 		ldr	r3, [r4, #432]
 1010 008e DB08     		lsrs	r3, r3, #3
 1011 0090 5360     		str	r3, [r2, #4]
 1012 0092 C3E7     		b	.L104
 1013              	.L108:
 784:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 1014              		.loc 1 784 0
 1015 0094 C368     		ldr	r3, [r0, #12]
 1016              		.loc 1 791 0
 1017 0096 5DF8044B 		ldr	r4, [sp], #4
 1018              	.LCFI13:
 1019              		.cfi_restore 4
 1020              		.cfi_def_cfa_offset 0
 784:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 1021              		.loc 1 784 0
 1022 009a 43F02003 		orr	r3, r3, #32
 1023 009e C360     		str	r3, [r0, #12]
 1024              		.loc 1 791 0
 1025 00a0 7047     		bx	lr
 1026              		.cfi_endproc
 1027              	.LFE120:
 1029 00a2 00BF     		.section	.text.CAN_FIFORelease,"ax",%progbits
 1030              		.align	2
 1031              		.global	CAN_FIFORelease
 1032              		.thumb
 1033              		.thumb_func
 1035              	CAN_FIFORelease:
 1036              	.LFB121:
 792:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 793:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 794:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Releases the specified receive FIFO.
 795:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to select the CAN peripheral.
 796:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  FIFONumber: FIFO to release, CAN_FIFO0 or CAN_FIFO1.
 797:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None
 798:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 799:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_FIFORelease(CAN_TypeDef* CANx, uint8_t FIFONumber)
 800:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 1037              		.loc 1 800 0
 1038              		.cfi_startproc
 1039              		@ args = 0, pretend = 0, frame = 0
 1040              		@ frame_needed = 0, uses_anonymous_args = 0
 1041              		@ link register save eliminated.
 1042              	.LVL53:
 801:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 802:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 803:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_FIFO(FIFONumber));
 804:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Release FIFO0 */
 805:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (FIFONumber == CAN_FIFO0)
 1043              		.loc 1 805 0
 1044 0000 21B1     		cbz	r1, .L112
 806:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 807:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->RF0R |= CAN_RF0R_RFOM0;
 808:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 809:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Release FIFO1 */
 810:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else /* FIFONumber == CAN_FIFO1 */
 811:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 812:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->RF1R |= CAN_RF1R_RFOM1;
 1045              		.loc 1 812 0
 1046 0002 0369     		ldr	r3, [r0, #16]
 1047 0004 43F02003 		orr	r3, r3, #32
 1048 0008 0361     		str	r3, [r0, #16]
 1049 000a 7047     		bx	lr
 1050              	.L112:
 807:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 1051              		.loc 1 807 0
 1052 000c C368     		ldr	r3, [r0, #12]
 1053 000e 43F02003 		orr	r3, r3, #32
 1054 0012 C360     		str	r3, [r0, #12]
 1055 0014 7047     		bx	lr
 1056              		.cfi_endproc
 1057              	.LFE121:
 1059 0016 00BF     		.section	.text.CAN_MessagePending,"ax",%progbits
 1060              		.align	2
 1061              		.global	CAN_MessagePending
 1062              		.thumb
 1063              		.thumb_func
 1065              	CAN_MessagePending:
 1066              	.LFB122:
 813:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 814:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 815:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 816:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 817:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Returns the number of pending received messages.
 818:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to select the CAN peripheral.
 819:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  FIFONumber: Receive FIFO number, CAN_FIFO0 or CAN_FIFO1.
 820:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval NbMessage : which is the number of pending message.
 821:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 822:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** uint8_t CAN_MessagePending(CAN_TypeDef* CANx, uint8_t FIFONumber)
 823:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 1067              		.loc 1 823 0
 1068              		.cfi_startproc
 1069              		@ args = 0, pretend = 0, frame = 0
 1070              		@ frame_needed = 0, uses_anonymous_args = 0
 1071              		@ link register save eliminated.
 1072              	.LVL54:
 824:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint8_t message_pending=0;
 825:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 826:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 827:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_FIFO(FIFONumber));
 828:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (FIFONumber == CAN_FIFO0)
 1073              		.loc 1 828 0
 1074 0000 31B1     		cbz	r1, .L117
 829:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 830:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     message_pending = (uint8_t)(CANx->RF0R&(uint32_t)0x03);
 831:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 832:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else if (FIFONumber == CAN_FIFO1)
 1075              		.loc 1 832 0
 1076 0002 0129     		cmp	r1, #1
 833:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 834:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     message_pending = (uint8_t)(CANx->RF1R&(uint32_t)0x03);
 1077              		.loc 1 834 0
 1078 0004 06BF     		itte	eq
 1079 0006 0069     		ldreq	r0, [r0, #16]
 1080              	.LVL55:
 1081 0008 00F00300 		andeq	r0, r0, #3
 1082              	.LVL56:
 835:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 836:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else
 837:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 838:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     message_pending = 0;
 1083              		.loc 1 838 0
 1084 000c 0020     		movne	r0, #0
 1085              	.LVL57:
 839:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 840:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return message_pending;
 841:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 1086              		.loc 1 841 0
 1087 000e 7047     		bx	lr
 1088              	.LVL58:
 1089              	.L117:
 830:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 1090              		.loc 1 830 0
 1091 0010 C068     		ldr	r0, [r0, #12]
 1092              	.LVL59:
 1093 0012 00F00300 		and	r0, r0, #3
 1094              	.LVL60:
 1095 0016 7047     		bx	lr
 1096              		.cfi_endproc
 1097              	.LFE122:
 1099              		.section	.text.CAN_OperatingModeRequest,"ax",%progbits
 1100              		.align	2
 1101              		.global	CAN_OperatingModeRequest
 1102              		.thumb
 1103              		.thumb_func
 1105              	CAN_OperatingModeRequest:
 1106              	.LFB123:
 842:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 843:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @}
 844:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 845:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 846:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 847:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /** @defgroup CAN_Group4 CAN Operation modes functions
 848:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *  @brief    CAN Operation modes functions 
 849:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *
 850:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @verbatim    
 851:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================
 852:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                     ##### CAN Operation modes functions #####
 853:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================  
 854:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     [..] This section provides functions allowing to select the CAN Operation modes
 855:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       (+) sleep mode
 856:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       (+) normal mode 
 857:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       (+) initialization mode
 858:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    
 859:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @endverbatim
 860:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @{
 861:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 862:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 863:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 864:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 865:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Selects the CAN Operation mode.
 866:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CAN_OperatingMode: CAN Operating Mode.
 867:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         This parameter can be one of @ref CAN_OperatingMode_TypeDef enumeration.
 868:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval status of the requested mode which can be 
 869:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         - CAN_ModeStatus_Failed:  CAN failed entering the specific mode 
 870:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         - CAN_ModeStatus_Success: CAN Succeed entering the specific mode 
 871:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 872:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** uint8_t CAN_OperatingModeRequest(CAN_TypeDef* CANx, uint8_t CAN_OperatingMode)
 873:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 1107              		.loc 1 873 0
 1108              		.cfi_startproc
 1109              		@ args = 0, pretend = 0, frame = 0
 1110              		@ frame_needed = 0, uses_anonymous_args = 0
 1111              		@ link register save eliminated.
 1112              	.LVL61:
 874:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint8_t status = CAN_ModeStatus_Failed;
 875:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 876:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Timeout for INAK or also for SLAK bits*/
 877:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint32_t timeout = INAK_TIMEOUT; 
 878:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 879:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 880:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 881:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_OPERATING_MODE(CAN_OperatingMode));
 882:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 883:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (CAN_OperatingMode == CAN_OperatingMode_Initialization)
 1113              		.loc 1 883 0
 1114 0000 E9B9     		cbnz	r1, .L119
 884:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 885:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Request initialisation */
 886:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->MCR = (uint32_t)((CANx->MCR & (uint32_t)(~(uint32_t)CAN_MCR_SLEEP)) | CAN_MCR_INRQ);
 1115              		.loc 1 886 0
 1116 0002 0368     		ldr	r3, [r0]
 1117 0004 23F00303 		bic	r3, r3, #3
 1118 0008 43F00103 		orr	r3, r3, #1
 1119 000c 0360     		str	r3, [r0]
 887:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 888:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Wait the acknowledge */
 889:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     while (((CANx->MSR & CAN_MODE_MASK) != CAN_MSR_INAK) && (timeout != 0))
 1120              		.loc 1 889 0
 1121 000e 4368     		ldr	r3, [r0, #4]
 1122 0010 03F00303 		and	r3, r3, #3
 1123 0014 012B     		cmp	r3, #1
 1124 0016 09D0     		beq	.L120
 1125 0018 4FF6FF72 		movw	r2, #65535
 1126 001c 01E0     		b	.L121
 1127              	.LVL62:
 1128              	.L150:
 1129              		.loc 1 889 0 is_stmt 0 discriminator 1
 1130 001e 013A     		subs	r2, r2, #1
 1131              	.LVL63:
 1132 0020 04D0     		beq	.L120
 1133              	.LVL64:
 1134              	.L121:
 1135              		.loc 1 889 0
 1136 0022 4368     		ldr	r3, [r0, #4]
 1137 0024 03F00303 		and	r3, r3, #3
 1138 0028 012B     		cmp	r3, #1
 1139 002a F8D1     		bne	.L150
 1140              	.LVL65:
 1141              	.L120:
 890:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 891:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       timeout--;
 892:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 893:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if ((CANx->MSR & CAN_MODE_MASK) != CAN_MSR_INAK)
 1142              		.loc 1 893 0 is_stmt 1
 1143 002c 4068     		ldr	r0, [r0, #4]
 1144              	.LVL66:
 1145 002e 00F00300 		and	r0, r0, #3
 894:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 895:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       status = CAN_ModeStatus_Failed;
 896:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 897:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
 898:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 899:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       status = CAN_ModeStatus_Success;
 1146              		.loc 1 899 0
 1147 0032 A0F10100 		sub	r0, #1
 1148 0036 B0FA80F0 		clz	r0, r0
 1149 003a 4009     		lsrs	r0, r0, #5
 1150 003c 7047     		bx	lr
 1151              	.LVL67:
 1152              	.L119:
 900:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 901:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 902:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else  if (CAN_OperatingMode == CAN_OperatingMode_Normal)
 1153              		.loc 1 902 0
 1154 003e 0129     		cmp	r1, #1
 1155 0040 03D0     		beq	.L151
 903:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 904:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Request leave initialisation and sleep mode  and enter Normal mode */
 905:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->MCR &= (uint32_t)(~(CAN_MCR_SLEEP|CAN_MCR_INRQ));
 906:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 907:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Wait the acknowledge */
 908:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     while (((CANx->MSR & CAN_MODE_MASK) != 0) && (timeout!=0))
 909:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 910:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       timeout--;
 911:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 912:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if ((CANx->MSR & CAN_MODE_MASK) != 0)
 913:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 914:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       status = CAN_ModeStatus_Failed;
 915:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 916:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
 917:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 918:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       status = CAN_ModeStatus_Success;
 919:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 920:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 921:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else  if (CAN_OperatingMode == CAN_OperatingMode_Sleep)
 1156              		.loc 1 921 0
 1157 0042 0229     		cmp	r1, #2
 1158 0044 17D0     		beq	.L152
 922:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 923:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Request Sleep mode */
 924:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->MCR = (uint32_t)((CANx->MCR & (uint32_t)(~(uint32_t)CAN_MCR_INRQ)) | CAN_MCR_SLEEP);
 925:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 926:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Wait the acknowledge */
 927:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     while (((CANx->MSR & CAN_MODE_MASK) != CAN_MSR_SLAK) && (timeout!=0))
 928:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 929:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       timeout--;
 930:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 931:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if ((CANx->MSR & CAN_MODE_MASK) != CAN_MSR_SLAK)
 932:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 933:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       status = CAN_ModeStatus_Failed;
 934:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 935:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
 936:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 937:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       status = CAN_ModeStatus_Success;
 938:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 939:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 940:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else
 941:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 942:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     status = CAN_ModeStatus_Failed;
 1159              		.loc 1 942 0
 1160 0046 0020     		movs	r0, #0
 1161              	.LVL68:
 943:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 944:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 945:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return  (uint8_t) status;
 946:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 1162              		.loc 1 946 0
 1163 0048 7047     		bx	lr
 1164              	.LVL69:
 1165              	.L151:
 905:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 1166              		.loc 1 905 0
 1167 004a 0368     		ldr	r3, [r0]
 1168 004c 23F00303 		bic	r3, r3, #3
 1169 0050 0360     		str	r3, [r0]
 908:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 1170              		.loc 1 908 0
 1171 0052 4368     		ldr	r3, [r0, #4]
 1172 0054 9907     		lsls	r1, r3, #30
 1173              	.LVL70:
 1174 0056 07D0     		beq	.L124
 1175 0058 4FF6FF73 		movw	r3, #65535
 1176 005c 01E0     		b	.L125
 1177              	.LVL71:
 1178              	.L153:
 908:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 1179              		.loc 1 908 0 is_stmt 0 discriminator 1
 1180 005e 013B     		subs	r3, r3, #1
 1181              	.LVL72:
 1182 0060 02D0     		beq	.L124
 1183              	.LVL73:
 1184              	.L125:
 908:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 1185              		.loc 1 908 0
 1186 0062 4268     		ldr	r2, [r0, #4]
 1187 0064 9207     		lsls	r2, r2, #30
 1188 0066 FAD1     		bne	.L153
 1189              	.LVL74:
 1190              	.L124:
 912:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 1191              		.loc 1 912 0 is_stmt 1
 1192 0068 4368     		ldr	r3, [r0, #4]
 1193 006a 13F0030F 		tst	r3, #3
 899:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 1194              		.loc 1 899 0
 1195 006e 0CBF     		ite	eq
 1196 0070 0120     		moveq	r0, #1
 1197              	.LVL75:
 1198 0072 0020     		movne	r0, #0
 1199 0074 7047     		bx	lr
 1200              	.LVL76:
 1201              	.L152:
 924:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 1202              		.loc 1 924 0
 1203 0076 0368     		ldr	r3, [r0]
 1204 0078 23F00303 		bic	r3, r3, #3
 1205 007c 43F00203 		orr	r3, r3, #2
 1206 0080 0360     		str	r3, [r0]
 927:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 1207              		.loc 1 927 0
 1208 0082 4368     		ldr	r3, [r0, #4]
 1209 0084 03F00303 		and	r3, r3, #3
 1210 0088 022B     		cmp	r3, #2
 1211 008a 09D0     		beq	.L126
 1212 008c 4FF6FF72 		movw	r2, #65535
 1213 0090 01E0     		b	.L127
 1214              	.LVL77:
 1215              	.L154:
 927:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 1216              		.loc 1 927 0 is_stmt 0 discriminator 1
 1217 0092 013A     		subs	r2, r2, #1
 1218              	.LVL78:
 1219 0094 04D0     		beq	.L126
 1220              	.LVL79:
 1221              	.L127:
 927:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 1222              		.loc 1 927 0
 1223 0096 4368     		ldr	r3, [r0, #4]
 1224 0098 03F00303 		and	r3, r3, #3
 1225 009c 022B     		cmp	r3, #2
 1226 009e F8D1     		bne	.L154
 1227              	.LVL80:
 1228              	.L126:
 931:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 1229              		.loc 1 931 0 is_stmt 1
 1230 00a0 4068     		ldr	r0, [r0, #4]
 1231              	.LVL81:
 1232 00a2 00F00300 		and	r0, r0, #3
 899:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 1233              		.loc 1 899 0
 1234 00a6 A0F10200 		sub	r0, #2
 1235 00aa B0FA80F0 		clz	r0, r0
 1236 00ae 4009     		lsrs	r0, r0, #5
 1237 00b0 7047     		bx	lr
 1238              		.cfi_endproc
 1239              	.LFE123:
 1241 00b2 00BF     		.section	.text.CAN_Sleep,"ax",%progbits
 1242              		.align	2
 1243              		.global	CAN_Sleep
 1244              		.thumb
 1245              		.thumb_func
 1247              	CAN_Sleep:
 1248              	.LFB124:
 947:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 948:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 949:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Enters the Sleep (low power) mode.
 950:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to select the CAN peripheral.
 951:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval CAN_Sleep_Ok if sleep entered, CAN_Sleep_Failed otherwise.
 952:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 953:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** uint8_t CAN_Sleep(CAN_TypeDef* CANx)
 954:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 1249              		.loc 1 954 0
 1250              		.cfi_startproc
 1251              		@ args = 0, pretend = 0, frame = 0
 1252              		@ frame_needed = 0, uses_anonymous_args = 0
 1253              		@ link register save eliminated.
 1254              	.LVL82:
 955:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint8_t sleepstatus = CAN_Sleep_Failed;
 956:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 957:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 958:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 959:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     
 960:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Request Sleep mode */
 961:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    CANx->MCR = (((CANx->MCR) & (uint32_t)(~(uint32_t)CAN_MCR_INRQ)) | CAN_MCR_SLEEP);
 1255              		.loc 1 961 0
 1256 0000 0368     		ldr	r3, [r0]
 1257 0002 23F00303 		bic	r3, r3, #3
 1258 0006 43F00203 		orr	r3, r3, #2
 1259 000a 0360     		str	r3, [r0]
 962:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    
 963:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Sleep mode status */
 964:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if ((CANx->MSR & (CAN_MSR_SLAK|CAN_MSR_INAK)) == CAN_MSR_SLAK)
 1260              		.loc 1 964 0
 1261 000c 4068     		ldr	r0, [r0, #4]
 1262              	.LVL83:
 1263 000e 00F00300 		and	r0, r0, #3
 1264              	.LVL84:
 965:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 966:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Sleep mode not entered */
 967:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     sleepstatus =  CAN_Sleep_Ok;
 968:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 969:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* return sleep mode status */
 970:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    return (uint8_t)sleepstatus;
 971:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 1265              		.loc 1 971 0
 1266 0012 A0F10200 		sub	r0, #2
 1267 0016 B0FA80F0 		clz	r0, r0
 1268 001a 4009     		lsrs	r0, r0, #5
 1269 001c 7047     		bx	lr
 1270              		.cfi_endproc
 1271              	.LFE124:
 1273 001e 00BF     		.section	.text.CAN_WakeUp,"ax",%progbits
 1274              		.align	2
 1275              		.global	CAN_WakeUp
 1276              		.thumb
 1277              		.thumb_func
 1279              	CAN_WakeUp:
 1280              	.LFB125:
 972:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 973:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 974:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Wakes up the CAN peripheral from sleep mode .
 975:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to select the CAN peripheral.
 976:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval CAN_WakeUp_Ok if sleep mode left, CAN_WakeUp_Failed otherwise.
 977:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 978:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** uint8_t CAN_WakeUp(CAN_TypeDef* CANx)
 979:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 1281              		.loc 1 979 0
 1282              		.cfi_startproc
 1283              		@ args = 0, pretend = 0, frame = 0
 1284              		@ frame_needed = 0, uses_anonymous_args = 0
 1285              		@ link register save eliminated.
 1286              	.LVL85:
 980:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint32_t wait_slak = SLAK_TIMEOUT;
 981:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint8_t wakeupstatus = CAN_WakeUp_Failed;
 982:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 983:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 984:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 985:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     
 986:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Wake up request */
 987:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CANx->MCR &= ~(uint32_t)CAN_MCR_SLEEP;
 1287              		.loc 1 987 0
 1288 0000 0368     		ldr	r3, [r0]
 1289 0002 23F00203 		bic	r3, r3, #2
 1290 0006 0360     		str	r3, [r0]
 988:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     
 989:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Sleep mode status */
 990:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   while(((CANx->MSR & CAN_MSR_SLAK) == CAN_MSR_SLAK)&&(wait_slak!=0x00))
 1291              		.loc 1 990 0
 1292 0008 4368     		ldr	r3, [r0, #4]
 1293 000a 9907     		lsls	r1, r3, #30
 1294 000c 07D5     		bpl	.L157
 1295 000e 4FF6FF73 		movw	r3, #65535
 1296 0012 01E0     		b	.L158
 1297              	.LVL86:
 1298              	.L166:
 1299              		.loc 1 990 0 is_stmt 0 discriminator 1
 1300 0014 013B     		subs	r3, r3, #1
 1301              	.LVL87:
 1302 0016 02D0     		beq	.L157
 1303              	.LVL88:
 1304              	.L158:
 1305              		.loc 1 990 0
 1306 0018 4268     		ldr	r2, [r0, #4]
 1307 001a 9207     		lsls	r2, r2, #30
 1308 001c FAD4     		bmi	.L166
 1309              	.LVL89:
 1310              	.L157:
 991:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 992:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    wait_slak--;
 993:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 994:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if((CANx->MSR & CAN_MSR_SLAK) != CAN_MSR_SLAK)
 1311              		.loc 1 994 0 is_stmt 1
 1312 001e 4068     		ldr	r0, [r0, #4]
 1313              	.LVL90:
 1314 0020 80F00200 		eor	r0, r0, #2
 1315              	.LVL91:
 995:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 996:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    /* wake up done : Sleep mode exited */
 997:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     wakeupstatus = CAN_WakeUp_Ok;
 998:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 999:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* return wakeup status */
1000:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return (uint8_t)wakeupstatus;
1001:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 1316              		.loc 1 1001 0
 1317 0024 C0F34000 		ubfx	r0, r0, #1, #1
 1318              	.LVL92:
 1319 0028 7047     		bx	lr
 1320              		.cfi_endproc
 1321              	.LFE125:
 1323 002a 00BF     		.section	.text.CAN_GetLastErrorCode,"ax",%progbits
 1324              		.align	2
 1325              		.global	CAN_GetLastErrorCode
 1326              		.thumb
 1327              		.thumb_func
 1329              	CAN_GetLastErrorCode:
 1330              	.LFB126:
1002:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
1003:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @}
1004:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1005:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1006:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1007:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /** @defgroup CAN_Group5 CAN Bus Error management functions
1008:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *  @brief    CAN Bus Error management functions 
1009:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *
1010:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @verbatim    
1011:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================
1012:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                 ##### CAN Bus Error management functions #####
1013:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================  
1014:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     [..] This section provides functions allowing to 
1015:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       (+) Return the CANx's last error code (LEC)
1016:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       (+) Return the CANx Receive Error Counter (REC)
1017:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       (+) Return the LSB of the 9-bit CANx Transmit Error Counter(TEC).
1018:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    
1019:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       -@- If TEC is greater than 255, The CAN is in bus-off state.
1020:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       -@- if REC or TEC are greater than 96, an Error warning flag occurs.
1021:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       -@- if REC or TEC are greater than 127, an Error Passive Flag occurs.
1022:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                         
1023:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @endverbatim
1024:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @{
1025:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1026:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1027:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
1028:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Returns the CANx's last error code (LEC).
1029:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to select the CAN peripheral.
1030:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval Error code: 
1031:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          - CAN_ERRORCODE_NoErr: No Error  
1032:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          - CAN_ERRORCODE_StuffErr: Stuff Error
1033:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          - CAN_ERRORCODE_FormErr: Form Error
1034:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          - CAN_ERRORCODE_ACKErr : Acknowledgment Error
1035:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          - CAN_ERRORCODE_BitRecessiveErr: Bit Recessive Error
1036:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          - CAN_ERRORCODE_BitDominantErr: Bit Dominant Error
1037:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          - CAN_ERRORCODE_CRCErr: CRC Error
1038:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          - CAN_ERRORCODE_SoftwareSetErr: Software Set Error  
1039:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1040:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** uint8_t CAN_GetLastErrorCode(CAN_TypeDef* CANx)
1041:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 1331              		.loc 1 1041 0
 1332              		.cfi_startproc
 1333              		@ args = 0, pretend = 0, frame = 0
 1334              		@ frame_needed = 0, uses_anonymous_args = 0
 1335              		@ link register save eliminated.
 1336              	.LVL93:
1042:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint8_t errorcode=0;
1043:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1044:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
1045:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
1046:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1047:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Get the error code*/
1048:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   errorcode = (((uint8_t)CANx->ESR) & (uint8_t)CAN_ESR_LEC);
 1337              		.loc 1 1048 0
 1338 0000 8069     		ldr	r0, [r0, #24]
 1339              	.LVL94:
1049:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1050:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Return the error code*/
1051:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return errorcode;
1052:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 1340              		.loc 1 1052 0
 1341 0002 00F07000 		and	r0, r0, #112
 1342              	.LVL95:
 1343 0006 7047     		bx	lr
 1344              		.cfi_endproc
 1345              	.LFE126:
 1347              		.section	.text.CAN_GetReceiveErrorCounter,"ax",%progbits
 1348              		.align	2
 1349              		.global	CAN_GetReceiveErrorCounter
 1350              		.thumb
 1351              		.thumb_func
 1353              	CAN_GetReceiveErrorCounter:
 1354              	.LFB127:
1053:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1054:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
1055:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Returns the CANx Receive Error Counter (REC).
1056:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @note   In case of an error during reception, this counter is incremented 
1057:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         by 1 or by 8 depending on the error condition as defined by the CAN 
1058:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         standard. After every successful reception, the counter is 
1059:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         decremented by 1 or reset to 120 if its value was higher than 128. 
1060:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         When the counter value exceeds 127, the CAN controller enters the 
1061:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         error passive state.  
1062:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to to select the CAN peripheral.  
1063:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval CAN Receive Error Counter. 
1064:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1065:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** uint8_t CAN_GetReceiveErrorCounter(CAN_TypeDef* CANx)
1066:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 1355              		.loc 1 1066 0
 1356              		.cfi_startproc
 1357              		@ args = 0, pretend = 0, frame = 0
 1358              		@ frame_needed = 0, uses_anonymous_args = 0
 1359              		@ link register save eliminated.
 1360              	.LVL96:
1067:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint8_t counter=0;
1068:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1069:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
1070:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
1071:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1072:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Get the Receive Error Counter*/
1073:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   counter = (uint8_t)((CANx->ESR & CAN_ESR_REC)>> 24);
 1361              		.loc 1 1073 0
 1362 0000 8069     		ldr	r0, [r0, #24]
 1363              	.LVL97:
1074:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1075:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Return the Receive Error Counter*/
1076:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return counter;
1077:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 1364              		.loc 1 1077 0
 1365 0002 000E     		lsrs	r0, r0, #24
 1366              	.LVL98:
 1367 0004 7047     		bx	lr
 1368              		.cfi_endproc
 1369              	.LFE127:
 1371 0006 00BF     		.section	.text.CAN_GetLSBTransmitErrorCounter,"ax",%progbits
 1372              		.align	2
 1373              		.global	CAN_GetLSBTransmitErrorCounter
 1374              		.thumb
 1375              		.thumb_func
 1377              	CAN_GetLSBTransmitErrorCounter:
 1378              	.LFB128:
1078:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1079:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1080:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
1081:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Returns the LSB of the 9-bit CANx Transmit Error Counter(TEC).
1082:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to to select the CAN peripheral.
1083:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval LSB of the 9-bit CAN Transmit Error Counter. 
1084:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1085:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** uint8_t CAN_GetLSBTransmitErrorCounter(CAN_TypeDef* CANx)
1086:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 1379              		.loc 1 1086 0
 1380              		.cfi_startproc
 1381              		@ args = 0, pretend = 0, frame = 0
 1382              		@ frame_needed = 0, uses_anonymous_args = 0
 1383              		@ link register save eliminated.
 1384              	.LVL99:
1087:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint8_t counter=0;
1088:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1089:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
1090:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
1091:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1092:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Get the LSB of the 9-bit CANx Transmit Error Counter(TEC) */
1093:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   counter = (uint8_t)((CANx->ESR & CAN_ESR_TEC)>> 16);
 1385              		.loc 1 1093 0
 1386 0000 8069     		ldr	r0, [r0, #24]
 1387              	.LVL100:
1094:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1095:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Return the LSB of the 9-bit CANx Transmit Error Counter(TEC) */
1096:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return counter;
1097:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 1388              		.loc 1 1097 0
 1389 0002 C0F30740 		ubfx	r0, r0, #16, #8
 1390              	.LVL101:
 1391 0006 7047     		bx	lr
 1392              		.cfi_endproc
 1393              	.LFE128:
 1395              		.section	.text.CAN_ITConfig,"ax",%progbits
 1396              		.align	2
 1397              		.global	CAN_ITConfig
 1398              		.thumb
 1399              		.thumb_func
 1401              	CAN_ITConfig:
 1402              	.LFB129:
1098:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
1099:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @}
1100:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1101:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1102:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /** @defgroup CAN_Group6 Interrupts and flags management functions
1103:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *  @brief   Interrupts and flags management functions
1104:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *
1105:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @verbatim   
1106:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================
1107:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****               ##### Interrupts and flags management functions #####
1108:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================  
1109:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1110:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****      [..] This section provides functions allowing to configure the CAN Interrupts 
1111:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****           and to get the status and clear flags and Interrupts pending bits.
1112:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1113:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****           The CAN provides 14 Interrupts sources and 15 Flags:
1114:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1115:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    
1116:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *** Flags ***
1117:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   =============
1118:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     [..] The 15 flags can be divided on 4 groups: 
1119:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1120:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       (+) Transmit Flags
1121:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         (++) CAN_FLAG_RQCP0, 
1122:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         (++) CAN_FLAG_RQCP1, 
1123:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         (++) CAN_FLAG_RQCP2  : Request completed MailBoxes 0, 1 and 2  Flags
1124:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                Set when when the last request (transmit or abort)
1125:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                has been performed. 
1126:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1127:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       (+) Receive Flags
1128:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1129:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1130:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         (++) CAN_FLAG_FMP0,
1131:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         (++) CAN_FLAG_FMP1   : FIFO 0 and 1 Message Pending Flags 
1132:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                set to signal that messages are pending in the receive 
1133:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                FIFO.
1134:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                These Flags are cleared only by hardware. 
1135:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1136:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         (++) CAN_FLAG_FF0,
1137:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         (++) CAN_FLAG_FF1    : FIFO 0 and 1 Full Flags
1138:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                set when three messages are stored in the selected 
1139:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                FIFO.                        
1140:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1141:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         (++) CAN_FLAG_FOV0              
1142:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         (++) CAN_FLAG_FOV1   : FIFO 0 and 1 Overrun Flags
1143:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                set when a new message has been received and passed 
1144:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                the filter while the FIFO was full.         
1145:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1146:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       (+) Operating Mode Flags
1147:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1148:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         (++) CAN_FLAG_WKU    : Wake up Flag
1149:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                set to signal that a SOF bit has been detected while 
1150:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                the CAN hardware was in Sleep mode. 
1151:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         
1152:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         (++) CAN_FLAG_SLAK   : Sleep acknowledge Flag
1153:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                Set to signal that the CAN has entered Sleep Mode. 
1154:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     
1155:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       (+) Error Flags
1156:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1157:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         (++) CAN_FLAG_EWG    : Error Warning Flag
1158:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                Set when the warning limit has been reached (Receive 
1159:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                Error Counter or Transmit Error Counter greater than 96). 
1160:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                This Flag is cleared only by hardware.
1161:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                             
1162:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         (++) CAN_FLAG_EPV    : Error Passive Flag
1163:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                Set when the Error Passive limit has been reached 
1164:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                (Receive Error Counter or Transmit Error Counter 
1165:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                greater than 127).
1166:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                This Flag is cleared only by hardware.
1167:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                              
1168:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         (++) CAN_FLAG_BOF    : Bus-Off Flag
1169:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                set when CAN enters the bus-off state. The bus-off 
1170:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                state is entered on TEC overflow, greater than 255.
1171:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                This Flag is cleared only by hardware.
1172:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                    
1173:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         (++) CAN_FLAG_LEC    : Last error code Flag
1174:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                set If a message has been transferred (reception or
1175:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                transmission) with error, and the error code is hold.              
1176:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                            
1177:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *** Interrupts ***
1178:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   ==================
1179:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     [..] The 14 interrupts can be divided on 4 groups: 
1180:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1181:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       (+) Transmit interrupt
1182:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1183:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         (++) CAN_IT_TME   :  Transmit mailbox empty Interrupt
1184:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                              if enabled, this interrupt source is pending when 
1185:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                              no transmit request are pending for Tx mailboxes.      
1186:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1187:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       (+) Receive Interrupts
1188:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****          
1189:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         (++) CAN_IT_FMP0,
1190:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         (++) CAN_IT_FMP1    :  FIFO 0 and FIFO1 message pending Interrupts
1191:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                if enabled, these interrupt sources are pending 
1192:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                when messages are pending in the receive FIFO.
1193:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                The corresponding interrupt pending bits are cleared 
1194:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                only by hardware.
1195:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                 
1196:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         (++) CAN_IT_FF0,              
1197:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         (++) CAN_IT_FF1     :  FIFO 0 and FIFO1 full Interrupts
1198:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                if enabled, these interrupt sources are pending 
1199:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                when three messages are stored in the selected FIFO.
1200:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         
1201:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         (++) CAN_IT_FOV0,        
1202:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         (++) CAN_IT_FOV1    :  FIFO 0 and FIFO1 overrun Interrupts        
1203:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                if enabled, these interrupt sources are pending 
1204:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                when a new message has been received and passed 
1205:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                the filter while the FIFO was full.
1206:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1207:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       (+) Operating Mode Interrupts
1208:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****          
1209:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         (++) CAN_IT_WKU     :  Wake-up Interrupt
1210:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                if enabled, this interrupt source is pending when 
1211:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                a SOF bit has been detected while the CAN hardware 
1212:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                was in Sleep mode.
1213:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                   
1214:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         (++) CAN_IT_SLK     :  Sleep acknowledge Interrupt
1215:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                if enabled, this interrupt source is pending when 
1216:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                the CAN has entered Sleep Mode.       
1217:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1218:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       (+) Error Interrupts 
1219:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         
1220:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         (++) CAN_IT_EWG     :  Error warning Interrupt 
1221:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                if enabled, this interrupt source is pending when
1222:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                the warning limit has been reached (Receive Error 
1223:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                Counter or Transmit Error Counter=96). 
1224:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                
1225:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         (++) CAN_IT_EPV     :  Error passive Interrupt        
1226:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                if enabled, this interrupt source is pending when
1227:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                the Error Passive limit has been reached (Receive 
1228:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                Error Counter or Transmit Error Counter>127).
1229:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           
1230:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         (++) CAN_IT_BOF     :  Bus-off Interrupt
1231:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                if enabled, this interrupt source is pending when
1232:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                CAN enters the bus-off state. The bus-off state is 
1233:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                entered on TEC overflow, greater than 255.
1234:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                This Flag is cleared only by hardware.
1235:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                   
1236:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         (++) CAN_IT_LEC     :  Last error code Interrupt        
1237:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                if enabled, this interrupt source is pending  when
1238:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                a message has been transferred (reception or
1239:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                transmission) with error, and the error code is hold.
1240:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           
1241:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         (++) CAN_IT_ERR     :  Error Interrupt
1242:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                if enabled, this interrupt source is pending when 
1243:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                an error condition is pending.      
1244:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                       
1245:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     [..] Managing the CAN controller events :
1246:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  
1247:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****          The user should identify which mode will be used in his application to 
1248:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****          manage the CAN controller events: Polling mode or Interrupt mode.
1249:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1250:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       (#) In the Polling Mode it is advised to use the following functions:
1251:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         (++) CAN_GetFlagStatus() : to check if flags events occur. 
1252:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         (++) CAN_ClearFlag()     : to clear the flags events.
1253:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1254:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1255:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1256:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       (#) In the Interrupt Mode it is advised to use the following functions:
1257:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         (++) CAN_ITConfig()       : to enable or disable the interrupt source.
1258:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         (++) CAN_GetITStatus()    : to check if Interrupt occurs.
1259:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         (++) CAN_ClearITPendingBit() : to clear the Interrupt pending Bit 
1260:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****             (corresponding Flag).
1261:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         -@@-  This function has no impact on CAN_IT_FMP0 and CAN_IT_FMP1 Interrupts 
1262:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****              pending bits since there are cleared only by hardware. 
1263:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1264:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @endverbatim
1265:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @{
1266:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */ 
1267:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
1268:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Enables or disables the specified CANx interrupts.
1269:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to to select the CAN peripheral.
1270:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CAN_IT: specifies the CAN interrupt sources to be enabled or disabled.
1271:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          This parameter can be: 
1272:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_TME: Transmit mailbox empty Interrupt 
1273:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FMP0: FIFO 0 message pending Interrupt 
1274:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FF0: FIFO 0 full Interrupt
1275:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FOV0: FIFO 0 overrun Interrupt
1276:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FMP1: FIFO 1 message pending Interrupt 
1277:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FF1: FIFO 1 full Interrupt
1278:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FOV1: FIFO 1 overrun Interrupt
1279:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_WKU: Wake-up Interrupt
1280:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_SLK: Sleep acknowledge Interrupt  
1281:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_EWG: Error warning Interrupt
1282:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_EPV: Error passive Interrupt
1283:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_BOF: Bus-off Interrupt  
1284:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_LEC: Last error code Interrupt
1285:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_ERR: Error Interrupt
1286:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  NewState: new state of the CAN interrupts.
1287:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          This parameter can be: ENABLE or DISABLE.
1288:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None
1289:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1290:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_ITConfig(CAN_TypeDef* CANx, uint32_t CAN_IT, FunctionalState NewState)
1291:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 1403              		.loc 1 1291 0
 1404              		.cfi_startproc
 1405              		@ args = 0, pretend = 0, frame = 0
 1406              		@ frame_needed = 0, uses_anonymous_args = 0
 1407              		@ link register save eliminated.
 1408              	.LVL102:
1292:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
1293:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
1294:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_IT(CAN_IT));
1295:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1296:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1297:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (NewState != DISABLE)
1298:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
1299:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Enable the selected CANx interrupt */
1300:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->IER |= CAN_IT;
 1409              		.loc 1 1300 0
 1410 0000 4369     		ldr	r3, [r0, #20]
1297:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 1411              		.loc 1 1297 0
 1412 0002 1AB9     		cbnz	r2, .L173
1301:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1302:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else
1303:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
1304:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Disable the selected CANx interrupt */
1305:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->IER &= ~CAN_IT;
 1413              		.loc 1 1305 0
 1414 0004 23EA0101 		bic	r1, r3, r1
 1415              	.LVL103:
 1416 0008 4161     		str	r1, [r0, #20]
 1417 000a 7047     		bx	lr
 1418              	.LVL104:
 1419              	.L173:
1300:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 1420              		.loc 1 1300 0
 1421 000c 1943     		orrs	r1, r1, r3
 1422              	.LVL105:
 1423 000e 4161     		str	r1, [r0, #20]
 1424 0010 7047     		bx	lr
 1425              		.cfi_endproc
 1426              	.LFE129:
 1428 0012 00BF     		.section	.text.CAN_GetFlagStatus,"ax",%progbits
 1429              		.align	2
 1430              		.global	CAN_GetFlagStatus
 1431              		.thumb
 1432              		.thumb_func
 1434              	CAN_GetFlagStatus:
 1435              	.LFB130:
1306:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1307:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
1308:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
1309:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Checks whether the specified CAN flag is set or not.
1310:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to to select the CAN peripheral.
1311:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CAN_FLAG: specifies the flag to check.
1312:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          This parameter can be one of the following values:
1313:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_RQCP0: Request MailBox0 Flag
1314:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_RQCP1: Request MailBox1 Flag
1315:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_RQCP2: Request MailBox2 Flag
1316:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FMP0: FIFO 0 Message Pending Flag   
1317:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FF0: FIFO 0 Full Flag       
1318:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FOV0: FIFO 0 Overrun Flag 
1319:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FMP1: FIFO 1 Message Pending Flag   
1320:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FF1: FIFO 1 Full Flag        
1321:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FOV1: FIFO 1 Overrun Flag     
1322:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_WKU: Wake up Flag
1323:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_SLAK: Sleep acknowledge Flag 
1324:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_EWG: Error Warning Flag
1325:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_EPV: Error Passive Flag  
1326:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_BOF: Bus-Off Flag    
1327:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_LEC: Last error code Flag      
1328:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval The new state of CAN_FLAG (SET or RESET).
1329:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1330:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** FlagStatus CAN_GetFlagStatus(CAN_TypeDef* CANx, uint32_t CAN_FLAG)
1331:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 1436              		.loc 1 1331 0
 1437              		.cfi_startproc
 1438              		@ args = 0, pretend = 0, frame = 0
 1439              		@ frame_needed = 0, uses_anonymous_args = 0
 1440              		@ link register save eliminated.
 1441              	.LVL106:
1332:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   FlagStatus bitstatus = RESET;
1333:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1334:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
1335:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
1336:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_GET_FLAG(CAN_FLAG));
1337:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1338:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1339:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if((CAN_FLAG & CAN_FLAGS_ESR) != (uint32_t)RESET)
 1442              		.loc 1 1339 0
 1443 0000 11F4700F 		tst	r1, #15728640
 1444 0004 07D0     		beq	.L175
1340:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   { 
1341:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Check the status of the specified CAN flag */
1342:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if ((CANx->ESR & (CAN_FLAG & 0x000FFFFF)) != (uint32_t)RESET)
 1445              		.loc 1 1342 0
 1446 0006 8369     		ldr	r3, [r0, #24]
 1447 0008 C3F31303 		ubfx	r3, r3, #0, #20
 1448 000c 0B42     		tst	r3, r1
1343:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     { 
1344:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* CAN_FLAG is set */
1345:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       bitstatus = SET;
1346:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1347:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
1348:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     { 
1349:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* CAN_FLAG is reset */
1350:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       bitstatus = RESET;
 1449              		.loc 1 1350 0
 1450 000e 14BF     		ite	ne
 1451 0010 0120     		movne	r0, #1
 1452              	.LVL107:
 1453 0012 0020     		moveq	r0, #0
 1454 0014 7047     		bx	lr
 1455              	.LVL108:
 1456              	.L175:
1351:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1352:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1353:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else if((CAN_FLAG & CAN_FLAGS_MSR) != (uint32_t)RESET)
 1457              		.loc 1 1353 0
 1458 0016 CB01     		lsls	r3, r1, #7
 1459 0018 07D5     		bpl	.L177
1354:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   { 
1355:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Check the status of the specified CAN flag */
1356:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if ((CANx->MSR & (CAN_FLAG & 0x000FFFFF)) != (uint32_t)RESET)
 1460              		.loc 1 1356 0
 1461 001a 4368     		ldr	r3, [r0, #4]
 1462 001c C3F31303 		ubfx	r3, r3, #0, #20
 1463 0020 0B42     		tst	r3, r1
1350:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 1464              		.loc 1 1350 0
 1465 0022 14BF     		ite	ne
 1466 0024 0120     		movne	r0, #1
 1467              	.LVL109:
 1468 0026 0020     		moveq	r0, #0
 1469 0028 7047     		bx	lr
 1470              	.LVL110:
 1471              	.L177:
1357:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     { 
1358:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* CAN_FLAG is set */
1359:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       bitstatus = SET;
1360:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1361:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
1362:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     { 
1363:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* CAN_FLAG is reset */
1364:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       bitstatus = RESET;
1365:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1366:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1367:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else if((CAN_FLAG & CAN_FLAGS_TSR) != (uint32_t)RESET)
 1472              		.loc 1 1367 0
 1473 002a 0A01     		lsls	r2, r1, #4
 1474 002c 07D5     		bpl	.L178
1368:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   { 
1369:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Check the status of the specified CAN flag */
1370:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if ((CANx->TSR & (CAN_FLAG & 0x000FFFFF)) != (uint32_t)RESET)
 1475              		.loc 1 1370 0
 1476 002e 8368     		ldr	r3, [r0, #8]
 1477 0030 C3F31303 		ubfx	r3, r3, #0, #20
 1478 0034 0B42     		tst	r3, r1
1350:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 1479              		.loc 1 1350 0
 1480 0036 14BF     		ite	ne
 1481 0038 0120     		movne	r0, #1
 1482              	.LVL111:
 1483 003a 0020     		moveq	r0, #0
 1484 003c 7047     		bx	lr
 1485              	.LVL112:
 1486              	.L178:
1371:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     { 
1372:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* CAN_FLAG is set */
1373:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       bitstatus = SET;
1374:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1375:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
1376:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     { 
1377:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* CAN_FLAG is reset */
1378:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       bitstatus = RESET;
1379:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1380:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1381:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else if((CAN_FLAG & CAN_FLAGS_RF0R) != (uint32_t)RESET)
 1487              		.loc 1 1381 0
 1488 003e 8B01     		lsls	r3, r1, #6
1382:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   { 
1383:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Check the status of the specified CAN flag */
1384:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if ((CANx->RF0R & (CAN_FLAG & 0x000FFFFF)) != (uint32_t)RESET)
 1489              		.loc 1 1384 0
 1490 0040 4CBF     		ite	mi
 1491 0042 C368     		ldrmi	r3, [r0, #12]
1385:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     { 
1386:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* CAN_FLAG is set */
1387:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       bitstatus = SET;
1388:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1389:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
1390:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     { 
1391:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* CAN_FLAG is reset */
1392:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       bitstatus = RESET;
1393:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1394:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1395:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else /* If(CAN_FLAG & CAN_FLAGS_RF1R != (uint32_t)RESET) */
1396:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   { 
1397:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Check the status of the specified CAN flag */
1398:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if ((uint32_t)(CANx->RF1R & (CAN_FLAG & 0x000FFFFF)) != (uint32_t)RESET)
 1492              		.loc 1 1398 0
 1493 0044 0369     		ldrpl	r3, [r0, #16]
 1494 0046 C3F31303 		ubfx	r3, r3, #0, #20
 1495 004a 0B42     		tst	r3, r1
1350:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 1496              		.loc 1 1350 0
 1497 004c 14BF     		ite	ne
 1498 004e 0120     		movne	r0, #1
 1499              	.LVL113:
 1500 0050 0020     		moveq	r0, #0
 1501              	.LVL114:
1399:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     { 
1400:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* CAN_FLAG is set */
1401:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       bitstatus = SET;
1402:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1403:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
1404:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     { 
1405:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* CAN_FLAG is reset */
1406:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       bitstatus = RESET;
1407:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1408:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1409:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Return the CAN_FLAG status */
1410:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return  bitstatus;
1411:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 1502              		.loc 1 1411 0
 1503 0052 7047     		bx	lr
 1504              		.cfi_endproc
 1505              	.LFE130:
 1507              		.section	.text.CAN_ClearFlag,"ax",%progbits
 1508              		.align	2
 1509              		.global	CAN_ClearFlag
 1510              		.thumb
 1511              		.thumb_func
 1513              	CAN_ClearFlag:
 1514              	.LFB131:
1412:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1413:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
1414:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Clears the CAN's pending flags.
1415:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to to select the CAN peripheral.
1416:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CAN_FLAG: specifies the flag to clear.
1417:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          This parameter can be one of the following values:
1418:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_RQCP0: Request MailBox0 Flag
1419:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_RQCP1: Request MailBox1 Flag
1420:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_RQCP2: Request MailBox2 Flag 
1421:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FF0: FIFO 0 Full Flag       
1422:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FOV0: FIFO 0 Overrun Flag  
1423:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FF1: FIFO 1 Full Flag        
1424:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FOV1: FIFO 1 Overrun Flag     
1425:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_WKU: Wake up Flag
1426:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_SLAK: Sleep acknowledge Flag    
1427:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_LEC: Last error code Flag        
1428:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None
1429:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1430:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_ClearFlag(CAN_TypeDef* CANx, uint32_t CAN_FLAG)
1431:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 1515              		.loc 1 1431 0
 1516              		.cfi_startproc
 1517              		@ args = 0, pretend = 0, frame = 0
 1518              		@ frame_needed = 0, uses_anonymous_args = 0
 1519              		@ link register save eliminated.
 1520              	.LVL115:
1432:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint32_t flagtmp=0;
1433:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
1434:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
1435:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_CLEAR_FLAG(CAN_FLAG));
1436:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1437:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (CAN_FLAG == CAN_FLAG_LEC) /* ESR register */
 1521              		.loc 1 1437 0
 1522 0000 0A4B     		ldr	r3, .L189
 1523 0002 9942     		cmp	r1, r3
 1524 0004 0CD0     		beq	.L186
1438:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
1439:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Clear the selected CAN flags */
1440:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->ESR = (uint32_t)RESET;
1441:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1442:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else /* MSR or TSR or RF0R or RF1R */
1443:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
1444:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     flagtmp = CAN_FLAG & 0x000FFFFF;
1445:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1446:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if ((CAN_FLAG & CAN_FLAGS_RF0R)!=(uint32_t)RESET)
 1525              		.loc 1 1446 0
 1526 0006 8A01     		lsls	r2, r1, #6
1444:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 1527              		.loc 1 1444 0
 1528 0008 C1F31303 		ubfx	r3, r1, #0, #20
 1529              	.LVL116:
 1530              		.loc 1 1446 0
 1531 000c 06D4     		bmi	.L187
1447:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
1448:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Receive Flags */
1449:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->RF0R = (uint32_t)(flagtmp);
1450:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1451:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else if ((CAN_FLAG & CAN_FLAGS_RF1R)!=(uint32_t)RESET)
 1532              		.loc 1 1451 0
 1533 000e 4A01     		lsls	r2, r1, #5
 1534 0010 09D4     		bmi	.L188
1452:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
1453:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Receive Flags */
1454:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->RF1R = (uint32_t)(flagtmp);
1455:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1456:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else if ((CAN_FLAG & CAN_FLAGS_TSR)!=(uint32_t)RESET)
 1535              		.loc 1 1456 0
 1536 0012 0A01     		lsls	r2, r1, #4
1457:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
1458:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Transmit Flags */
1459:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->TSR = (uint32_t)(flagtmp);
 1537              		.loc 1 1459 0
 1538 0014 4CBF     		ite	mi
 1539 0016 8360     		strmi	r3, [r0, #8]
1460:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1461:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else /* If((CAN_FLAG & CAN_FLAGS_MSR)!=(uint32_t)RESET) */
1462:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
1463:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Operating mode Flags */
1464:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MSR = (uint32_t)(flagtmp);
 1540              		.loc 1 1464 0
 1541 0018 4360     		strpl	r3, [r0, #4]
 1542 001a 7047     		bx	lr
 1543              	.L187:
1449:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 1544              		.loc 1 1449 0
 1545 001c C360     		str	r3, [r0, #12]
 1546 001e 7047     		bx	lr
 1547              	.LVL117:
 1548              	.L186:
1440:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 1549              		.loc 1 1440 0
 1550 0020 0023     		movs	r3, #0
 1551 0022 8361     		str	r3, [r0, #24]
 1552 0024 7047     		bx	lr
 1553              	.LVL118:
 1554              	.L188:
1454:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 1555              		.loc 1 1454 0
 1556 0026 0361     		str	r3, [r0, #16]
 1557 0028 7047     		bx	lr
 1558              	.L190:
 1559 002a 00BF     		.align	2
 1560              	.L189:
 1561 002c 7000F030 		.word	821035120
 1562              		.cfi_endproc
 1563              	.LFE131:
 1565              		.section	.text.CAN_GetITStatus,"ax",%progbits
 1566              		.align	2
 1567              		.global	CAN_GetITStatus
 1568              		.thumb
 1569              		.thumb_func
 1571              	CAN_GetITStatus:
 1572              	.LFB132:
1465:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1466:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1467:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
1468:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1469:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
1470:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Checks whether the specified CANx interrupt has occurred or not.
1471:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to to select the CAN peripheral.
1472:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CAN_IT: specifies the CAN interrupt source to check.
1473:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          This parameter can be one of the following values:
1474:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_TME: Transmit mailbox empty Interrupt 
1475:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FMP0: FIFO 0 message pending Interrupt 
1476:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FF0: FIFO 0 full Interrupt
1477:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FOV0: FIFO 0 overrun Interrupt
1478:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FMP1: FIFO 1 message pending Interrupt 
1479:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FF1: FIFO 1 full Interrupt
1480:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FOV1: FIFO 1 overrun Interrupt
1481:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_WKU: Wake-up Interrupt
1482:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_SLK: Sleep acknowledge Interrupt  
1483:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_EWG: Error warning Interrupt
1484:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_EPV: Error passive Interrupt
1485:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_BOF: Bus-off Interrupt  
1486:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_LEC: Last error code Interrupt
1487:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_ERR: Error Interrupt
1488:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval The current state of CAN_IT (SET or RESET).
1489:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1490:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** ITStatus CAN_GetITStatus(CAN_TypeDef* CANx, uint32_t CAN_IT)
1491:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 1573              		.loc 1 1491 0
 1574              		.cfi_startproc
 1575              		@ args = 0, pretend = 0, frame = 0
 1576              		@ frame_needed = 0, uses_anonymous_args = 0
 1577              		@ link register save eliminated.
 1578              	.LVL119:
1492:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   ITStatus itstatus = RESET;
1493:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
1494:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
1495:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_IT(CAN_IT));
1496:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1497:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* check the interrupt enable bit */
1498:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  if((CANx->IER & CAN_IT) != RESET)
 1579              		.loc 1 1498 0
 1580 0000 4369     		ldr	r3, [r0, #20]
 1581 0002 0B40     		ands	r3, r1, r3
 1582 0004 1ED0     		beq	.L210
1499:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  {
1500:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    /* in case the Interrupt is enabled, .... */
1501:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     switch (CAN_IT)
 1583              		.loc 1 1501 0
 1584 0006 4029     		cmp	r1, #64
 1585 0008 67D0     		beq	.L193
 1586 000a 0ED9     		bls	.L215
 1587 000c B1F5006F 		cmp	r1, #2048
 1588 0010 5CD0     		beq	.L202
 1589 0012 19D8     		bhi	.L203
 1590 0014 B1F5007F 		cmp	r1, #512
 1591 0018 50D0     		beq	.L204
 1592 001a B1F5806F 		cmp	r1, #1024
 1593 001e 37D0     		beq	.L205
 1594 0020 B1F5807F 		cmp	r1, #256
 1595 0024 27D0     		beq	.L216
 1596              	.L211:
1502:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
1503:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_TME:
1504:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_TSR_RQCPx bits */
1505:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->TSR, CAN_TSR_RQCP0|CAN_TSR_RQCP1|CAN_TSR_RQCP2);  
1506:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
1507:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_FMP0:
1508:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_RF0R_FMP0 bit */
1509:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->RF0R, CAN_RF0R_FMP0);  
1510:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
1511:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_FF0:
1512:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_RF0R_FULL0 bit */
1513:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->RF0R, CAN_RF0R_FULL0);  
1514:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
1515:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_FOV0:
1516:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_RF0R_FOVR0 bit */
1517:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->RF0R, CAN_RF0R_FOVR0);  
1518:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
1519:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_FMP1:
1520:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_RF1R_FMP1 bit */
1521:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->RF1R, CAN_RF1R_FMP1);  
1522:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
1523:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_FF1:
1524:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_RF1R_FULL1 bit */
1525:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->RF1R, CAN_RF1R_FULL1);  
1526:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
1527:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_FOV1:
1528:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_RF1R_FOVR1 bit */
1529:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->RF1R, CAN_RF1R_FOVR1);  
1530:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
1531:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_WKU:
1532:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_MSR_WKUI bit */
1533:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->MSR, CAN_MSR_WKUI);  
1534:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
1535:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_SLK:
1536:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_MSR_SLAKI bit */
1537:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->MSR, CAN_MSR_SLAKI);  
1538:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
1539:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_EWG:
1540:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_ESR_EWGF bit */
1541:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->ESR, CAN_ESR_EWGF);  
1542:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
1543:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_EPV:
1544:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_ESR_EPVF bit */
1545:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->ESR, CAN_ESR_EPVF);  
1546:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
1547:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_BOF:
1548:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_ESR_BOFF bit */
1549:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->ESR, CAN_ESR_BOFF);  
1550:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
1551:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_LEC:
1552:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_ESR_LEC bit */
1553:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->ESR, CAN_ESR_LEC);  
1554:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
1555:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_ERR:
1556:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_MSR_ERRI bit */ 
1557:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->MSR, CAN_MSR_ERRI); 
1558:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
1559:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       default:
1560:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* in case of error, return RESET */
1561:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = RESET;
 1597              		.loc 1 1561 0
 1598 0026 0020     		movs	r0, #0
 1599              	.LVL120:
1562:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
1563:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1564:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1565:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else
1566:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
1567:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    /* in case the Interrupt is not enabled, return RESET */
1568:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     itstatus  = RESET;
1569:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1570:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1571:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Return the CAN_IT status */
1572:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return  itstatus;
1573:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 1600              		.loc 1 1573 0
 1601 0028 7047     		bx	lr
 1602              	.LVL121:
 1603              	.L215:
1501:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 1604              		.loc 1 1501 0
 1605 002a 0429     		cmp	r1, #4
 1606 002c 4AD0     		beq	.L195
 1607 002e 18D9     		bls	.L217
 1608 0030 1029     		cmp	r1, #16
 1609 0032 3DD0     		beq	.L199
 1610 0034 2029     		cmp	r1, #32
 1611 0036 37D0     		beq	.L200
 1612 0038 0829     		cmp	r1, #8
 1613 003a F4D1     		bne	.L211
1517:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 1614              		.loc 1 1517 0
 1615 003c C068     		ldr	r0, [r0, #12]
 1616              	.LVL122:
 1617              	.LBB30:
 1618              	.LBB31:
1574:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1575:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
1576:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Clears the CANx's interrupt pending bits.
1577:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to to select the CAN peripheral.
1578:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CAN_IT: specifies the interrupt pending bit to clear.
1579:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          This parameter can be one of the following values:
1580:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_TME: Transmit mailbox empty Interrupt
1581:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FF0: FIFO 0 full Interrupt
1582:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FOV0: FIFO 0 overrun Interrupt
1583:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FF1: FIFO 1 full Interrupt
1584:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FOV1: FIFO 1 overrun Interrupt
1585:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_WKU: Wake-up Interrupt
1586:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_SLK: Sleep acknowledge Interrupt  
1587:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_EWG: Error warning Interrupt
1588:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_EPV: Error passive Interrupt
1589:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_BOF: Bus-off Interrupt  
1590:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_LEC: Last error code Interrupt
1591:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_ERR: Error Interrupt 
1592:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None
1593:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1594:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_ClearITPendingBit(CAN_TypeDef* CANx, uint32_t CAN_IT)
1595:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
1596:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
1597:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
1598:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_CLEAR_IT(CAN_IT));
1599:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1600:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   switch (CAN_IT)
1601:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
1602:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_TME:
1603:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_TSR_RQCPx (rc_w1)*/
1604:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->TSR = CAN_TSR_RQCP0|CAN_TSR_RQCP1|CAN_TSR_RQCP2;  
1605:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
1606:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_FF0:
1607:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_RF0R_FULL0 (rc_w1)*/
1608:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->RF0R = CAN_RF0R_FULL0; 
1609:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
1610:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_FOV0:
1611:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_RF0R_FOVR0 (rc_w1)*/
1612:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->RF0R = CAN_RF0R_FOVR0; 
1613:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
1614:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_FF1:
1615:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_RF1R_FULL1 (rc_w1)*/
1616:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->RF1R = CAN_RF1R_FULL1;  
1617:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
1618:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_FOV1:
1619:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_RF1R_FOVR1 (rc_w1)*/
1620:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->RF1R = CAN_RF1R_FOVR1; 
1621:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
1622:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_WKU:
1623:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_MSR_WKUI (rc_w1)*/
1624:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MSR = CAN_MSR_WKUI;  
1625:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
1626:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_SLK:
1627:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_MSR_SLAKI (rc_w1)*/ 
1628:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MSR = CAN_MSR_SLAKI;   
1629:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
1630:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_EWG:
1631:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_MSR_ERRI (rc_w1) */
1632:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MSR = CAN_MSR_ERRI;
1633:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        /* @note the corresponding Flag is cleared by hardware depending on the CAN Bus status*/ 
1634:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
1635:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_EPV:
1636:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_MSR_ERRI (rc_w1) */
1637:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MSR = CAN_MSR_ERRI; 
1638:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        /* @note the corresponding Flag is cleared by hardware depending on the CAN Bus status*/
1639:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
1640:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_BOF:
1641:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_MSR_ERRI (rc_w1) */ 
1642:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MSR = CAN_MSR_ERRI; 
1643:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        /* @note the corresponding Flag is cleared by hardware depending on the CAN Bus status*/
1644:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        break;
1645:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_LEC:
1646:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /*  Clear LEC bits */
1647:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->ESR = RESET; 
1648:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_MSR_ERRI (rc_w1) */
1649:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MSR = CAN_MSR_ERRI; 
1650:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
1651:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_ERR:
1652:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /*Clear LEC bits */
1653:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->ESR = RESET; 
1654:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_MSR_ERRI (rc_w1) */
1655:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MSR = CAN_MSR_ERRI; 
1656:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        /* @note BOFF, EPVF and EWGF Flags are cleared by hardware depending on the CAN Bus status*/
1657:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        break;
1658:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     default:
1659:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        break;
1660:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    }
1661:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
1662:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  /**
1663:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @}
1664:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1665:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1666:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
1667:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Checks whether the CAN interrupt has occurred or not.
1668:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CAN_Reg: specifies the CAN interrupt register to check.
1669:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  It_Bit: specifies the interrupt source bit to check.
1670:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval The new state of the CAN Interrupt (SET or RESET).
1671:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1672:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** static ITStatus CheckITStatus(uint32_t CAN_Reg, uint32_t It_Bit)
1673:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
1674:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   ITStatus pendingbitstatus = RESET;
1675:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1676:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if ((CAN_Reg & It_Bit) != (uint32_t)RESET)
1677:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
1678:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* CAN_IT is set */
1679:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     pendingbitstatus = SET;
1680:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1681:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else
1682:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
1683:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* CAN_IT is reset */
1684:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     pendingbitstatus = RESET;
 1619              		.loc 1 1684 0
 1620 003e C0F30010 		ubfx	r0, r0, #4, #1
 1621              	.LVL123:
 1622 0042 7047     		bx	lr
 1623              	.LVL124:
 1624              	.L210:
 1625              	.LBE31:
 1626              	.LBE30:
1568:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 1627              		.loc 1 1568 0
 1628 0044 1846     		mov	r0, r3
 1629              	.LVL125:
 1630 0046 7047     		bx	lr
 1631              	.LVL126:
 1632              	.L203:
1501:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 1633              		.loc 1 1501 0
 1634 0048 B1F5803F 		cmp	r1, #65536
 1635 004c 24D0     		beq	.L207
 1636 004e B1F5003F 		cmp	r1, #131072
 1637 0052 25D0     		beq	.L208
 1638 0054 B1F5004F 		cmp	r1, #32768
 1639 0058 E5D1     		bne	.L211
1557:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 1640              		.loc 1 1557 0
 1641 005a 4068     		ldr	r0, [r0, #4]
 1642              	.LVL127:
 1643              	.LBB44:
 1644              	.LBB32:
 1645              		.loc 1 1684 0
 1646 005c C0F38000 		ubfx	r0, r0, #2, #1
 1647              	.LVL128:
 1648 0060 7047     		bx	lr
 1649              	.LVL129:
 1650              	.L217:
 1651              	.LBE32:
 1652              	.LBE44:
1501:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 1653              		.loc 1 1501 0
 1654 0062 0129     		cmp	r1, #1
 1655 0064 0BD0     		beq	.L197
 1656 0066 0229     		cmp	r1, #2
 1657 0068 DDD1     		bne	.L211
1509:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 1658              		.loc 1 1509 0
 1659 006a C068     		ldr	r0, [r0, #12]
 1660              	.LVL130:
 1661              	.LBB45:
 1662              	.LBB33:
 1663              		.loc 1 1684 0
 1664 006c 10F00300 		ands	r0, r0, #3
 1665              	.LVL131:
 1666 0070 18BF     		it	ne
 1667 0072 0120     		movne	r0, #1
 1668 0074 7047     		bx	lr
 1669              	.LVL132:
 1670              	.L216:
 1671              	.LBE33:
 1672              	.LBE45:
1541:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 1673              		.loc 1 1541 0
 1674 0076 8069     		ldr	r0, [r0, #24]
 1675              	.LVL133:
 1676              	.LBB46:
 1677              	.LBB34:
 1678              		.loc 1 1684 0
 1679 0078 00F00100 		and	r0, r0, #1
 1680              	.LVL134:
 1681 007c 7047     		bx	lr
 1682              	.LVL135:
 1683              	.L197:
 1684              	.LBE34:
 1685              	.LBE46:
1505:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 1686              		.loc 1 1505 0
 1687 007e 8068     		ldr	r0, [r0, #8]
 1688              	.LVL136:
 1689              	.LBB47:
 1690              	.LBB48:
1676:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 1691              		.loc 1 1676 0
 1692 0080 00F00130 		and	r0, r0, #16843009
 1693              	.LVL137:
 1694 0084 20F08070 		bic	r0, r0, #16777216
 1695              	.LBE48:
 1696              	.LBE47:
 1697              	.LBB49:
 1698              	.LBB50:
1679:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 1699              		.loc 1 1679 0
 1700 0088 0030     		adds	r0, r0, #0
 1701 008a 18BF     		it	ne
 1702 008c 0120     		movne	r0, #1
 1703 008e 7047     		bx	lr
 1704              	.LVL138:
 1705              	.L205:
 1706              	.LBE50:
 1707              	.LBE49:
1549:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 1708              		.loc 1 1549 0
 1709 0090 8069     		ldr	r0, [r0, #24]
 1710              	.LVL139:
 1711              	.LBB52:
 1712              	.LBB35:
 1713              		.loc 1 1684 0
 1714 0092 C0F38000 		ubfx	r0, r0, #2, #1
 1715              	.LVL140:
 1716 0096 7047     		bx	lr
 1717              	.LVL141:
 1718              	.L207:
 1719              	.LBE35:
 1720              	.LBE52:
1533:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 1721              		.loc 1 1533 0
 1722 0098 4068     		ldr	r0, [r0, #4]
 1723              	.LVL142:
 1724              	.LBB53:
 1725              	.LBB36:
 1726              		.loc 1 1684 0
 1727 009a C0F3C000 		ubfx	r0, r0, #3, #1
 1728              	.LVL143:
 1729 009e 7047     		bx	lr
 1730              	.LVL144:
 1731              	.L208:
 1732              	.LBE36:
 1733              	.LBE53:
1537:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 1734              		.loc 1 1537 0
 1735 00a0 4068     		ldr	r0, [r0, #4]
 1736              	.LVL145:
 1737              	.LBB54:
 1738              	.LBB37:
 1739              		.loc 1 1684 0
 1740 00a2 C0F30010 		ubfx	r0, r0, #4, #1
 1741              	.LVL146:
 1742 00a6 7047     		bx	lr
 1743              	.LVL147:
 1744              	.L200:
 1745              	.LBE37:
 1746              	.LBE54:
1525:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 1747              		.loc 1 1525 0
 1748 00a8 0069     		ldr	r0, [r0, #16]
 1749              	.LVL148:
 1750              	.LBB55:
 1751              	.LBB38:
 1752              		.loc 1 1684 0
 1753 00aa C0F3C000 		ubfx	r0, r0, #3, #1
 1754              	.LVL149:
 1755 00ae 7047     		bx	lr
 1756              	.LVL150:
 1757              	.L199:
 1758              	.LBE38:
 1759              	.LBE55:
1521:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 1760              		.loc 1 1521 0
 1761 00b0 0069     		ldr	r0, [r0, #16]
 1762              	.LVL151:
 1763              	.LBB56:
 1764              	.LBB39:
 1765              		.loc 1 1684 0
 1766 00b2 10F00300 		ands	r0, r0, #3
 1767              	.LVL152:
 1768 00b6 18BF     		it	ne
 1769 00b8 0120     		movne	r0, #1
 1770 00ba 7047     		bx	lr
 1771              	.LVL153:
 1772              	.L204:
 1773              	.LBE39:
 1774              	.LBE56:
1545:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 1775              		.loc 1 1545 0
 1776 00bc 8069     		ldr	r0, [r0, #24]
 1777              	.LVL154:
 1778              	.LBB57:
 1779              	.LBB40:
 1780              		.loc 1 1684 0
 1781 00be C0F34000 		ubfx	r0, r0, #1, #1
 1782              	.LVL155:
 1783 00c2 7047     		bx	lr
 1784              	.LVL156:
 1785              	.L195:
 1786              	.LBE40:
 1787              	.LBE57:
1513:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 1788              		.loc 1 1513 0
 1789 00c4 C068     		ldr	r0, [r0, #12]
 1790              	.LVL157:
 1791              	.LBB58:
 1792              	.LBB41:
 1793              		.loc 1 1684 0
 1794 00c6 C0F3C000 		ubfx	r0, r0, #3, #1
 1795              	.LVL158:
 1796 00ca 7047     		bx	lr
 1797              	.LVL159:
 1798              	.L202:
 1799              	.LBE41:
 1800              	.LBE58:
1553:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 1801              		.loc 1 1553 0
 1802 00cc 8369     		ldr	r3, [r0, #24]
 1803              	.LVL160:
 1804              	.LBB59:
 1805              	.LBB51:
1676:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 1806              		.loc 1 1676 0
 1807 00ce 13F0700F 		tst	r3, #112
 1808              	.LBE51:
 1809              	.LBE59:
 1810              	.LBB60:
 1811              	.LBB42:
 1812              		.loc 1 1684 0
 1813 00d2 14BF     		ite	ne
 1814 00d4 0120     		movne	r0, #1
 1815              	.LVL161:
 1816 00d6 0020     		moveq	r0, #0
 1817 00d8 7047     		bx	lr
 1818              	.LVL162:
 1819              	.L193:
 1820              	.LBE42:
 1821              	.LBE60:
1529:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 1822              		.loc 1 1529 0
 1823 00da 0069     		ldr	r0, [r0, #16]
 1824              	.LVL163:
 1825              	.LBB61:
 1826              	.LBB43:
 1827              		.loc 1 1684 0
 1828 00dc C0F30010 		ubfx	r0, r0, #4, #1
 1829              	.LVL164:
 1830 00e0 7047     		bx	lr
 1831              	.LBE43:
 1832              	.LBE61:
 1833              		.cfi_endproc
 1834              	.LFE132:
 1836 00e2 00BF     		.section	.text.CAN_ClearITPendingBit,"ax",%progbits
 1837              		.align	2
 1838              		.global	CAN_ClearITPendingBit
 1839              		.thumb
 1840              		.thumb_func
 1842              	CAN_ClearITPendingBit:
 1843              	.LFB133:
1595:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 1844              		.loc 1 1595 0
 1845              		.cfi_startproc
 1846              		@ args = 0, pretend = 0, frame = 0
 1847              		@ frame_needed = 0, uses_anonymous_args = 0
 1848              		@ link register save eliminated.
 1849              	.LVL165:
1600:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 1850              		.loc 1 1600 0
 1851 0000 B1F5807F 		cmp	r1, #256
 1852 0004 1ED0     		beq	.L231
 1853 0006 0DD9     		bls	.L235
 1854 0008 B1F5006F 		cmp	r1, #2048
 1855 000c 24D0     		beq	.L234
 1856 000e 13D9     		bls	.L236
 1857 0010 B1F5803F 		cmp	r1, #65536
 1858 0014 25D0     		beq	.L232
 1859 0016 B1F5003F 		cmp	r1, #131072
 1860 001a 2ED0     		beq	.L233
 1861 001c B1F5004F 		cmp	r1, #32768
 1862 0020 1AD0     		beq	.L234
 1863 0022 7047     		bx	lr
 1864              	.L235:
 1865 0024 0829     		cmp	r1, #8
 1866 0026 1FD0     		beq	.L222
 1867 0028 0FD9     		bls	.L237
 1868 002a 2029     		cmp	r1, #32
 1869 002c 22D0     		beq	.L226
 1870 002e 4029     		cmp	r1, #64
 1871 0030 27D1     		bne	.L238
1620:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 1872              		.loc 1 1620 0
 1873 0032 1023     		movs	r3, #16
 1874 0034 0361     		str	r3, [r0, #16]
1621:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_WKU:
 1875              		.loc 1 1621 0
 1876 0036 7047     		bx	lr
 1877              	.L236:
1600:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 1878              		.loc 1 1600 0
 1879 0038 B1F5007F 		cmp	r1, #512
 1880 003c 02D0     		beq	.L231
 1881 003e B1F5806F 		cmp	r1, #1024
 1882 0042 1DD1     		bne	.L239
 1883              	.L231:
1642:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        /* @note the corresponding Flag is cleared by hardware depending on the CAN Bus status*/
 1884              		.loc 1 1642 0
 1885 0044 0423     		movs	r3, #4
 1886 0046 4360     		str	r3, [r0, #4]
1644:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_LEC:
 1887              		.loc 1 1644 0
 1888 0048 7047     		bx	lr
 1889              	.L237:
1600:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 1890              		.loc 1 1600 0
 1891 004a 0129     		cmp	r1, #1
 1892 004c 0FD0     		beq	.L224
 1893 004e 0429     		cmp	r1, #4
 1894 0050 18D1     		bne	.L240
1608:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 1895              		.loc 1 1608 0
 1896 0052 0823     		movs	r3, #8
 1897 0054 C360     		str	r3, [r0, #12]
1609:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_FOV0:
 1898              		.loc 1 1609 0
 1899 0056 7047     		bx	lr
 1900              	.L234:
1653:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_MSR_ERRI (rc_w1) */
 1901              		.loc 1 1653 0
 1902 0058 0022     		movs	r2, #0
1655:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        /* @note BOFF, EPVF and EWGF Flags are cleared by hardware depending on the CAN Bus status*/
 1903              		.loc 1 1655 0
 1904 005a 0423     		movs	r3, #4
1653:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_MSR_ERRI (rc_w1) */
 1905              		.loc 1 1653 0
 1906 005c 8261     		str	r2, [r0, #24]
1655:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        /* @note BOFF, EPVF and EWGF Flags are cleared by hardware depending on the CAN Bus status*/
 1907              		.loc 1 1655 0
 1908 005e 4360     		str	r3, [r0, #4]
 1909 0060 7047     		bx	lr
 1910              	.L232:
1624:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 1911              		.loc 1 1624 0
 1912 0062 0823     		movs	r3, #8
 1913 0064 4360     		str	r3, [r0, #4]
1625:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_SLK:
 1914              		.loc 1 1625 0
 1915 0066 7047     		bx	lr
 1916              	.L222:
1612:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 1917              		.loc 1 1612 0
 1918 0068 1023     		movs	r3, #16
 1919 006a C360     		str	r3, [r0, #12]
1613:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_FF1:
 1920              		.loc 1 1613 0
 1921 006c 7047     		bx	lr
 1922              	.L224:
1604:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 1923              		.loc 1 1604 0
 1924 006e 064B     		ldr	r3, .L241
 1925 0070 8360     		str	r3, [r0, #8]
1605:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_FF0:
 1926              		.loc 1 1605 0
 1927 0072 7047     		bx	lr
 1928              	.L226:
1616:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 1929              		.loc 1 1616 0
 1930 0074 0823     		movs	r3, #8
 1931 0076 0361     		str	r3, [r0, #16]
1617:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_FOV1:
 1932              		.loc 1 1617 0
 1933 0078 7047     		bx	lr
 1934              	.L233:
1628:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 1935              		.loc 1 1628 0
 1936 007a 1023     		movs	r3, #16
 1937 007c 4360     		str	r3, [r0, #4]
1629:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_EWG:
 1938              		.loc 1 1629 0
 1939 007e 7047     		bx	lr
 1940              	.L239:
 1941 0080 7047     		bx	lr
 1942              	.L238:
 1943 0082 7047     		bx	lr
 1944              	.L240:
 1945 0084 7047     		bx	lr
 1946              	.L242:
 1947 0086 00BF     		.align	2
 1948              	.L241:
 1949 0088 01010100 		.word	65793
 1950              		.cfi_endproc
 1951              	.LFE133:
 1953              		.text
 1954              	.Letext0:
 1955              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\4.9 2014q4\\arm-none-eabi\\include\\mach
 1956              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\4.9 2014q4\\arm-none-eabi\\include\\stdi
 1957              		.file 4 "libs/Device/STM32F4xx/Include/stm32f4xx.h"
 1958              		.file 5 "libs/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_can.h"
 1959              		.file 6 "libs/CMSIS/Include/core_cm4.h"
 1960              		.file 7 "libs/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_rcc.h"
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_can.c
C:\Users\Student\AppData\Local\Temp\ccC0yuAe.s:20     .text.CAN_DeInit:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccC0yuAe.s:25     .text.CAN_DeInit:00000000 CAN_DeInit
C:\Users\Student\AppData\Local\Temp\ccC0yuAe.s:85     .text.CAN_DeInit:00000038 $d
C:\Users\Student\AppData\Local\Temp\ccC0yuAe.s:90     .text.CAN_Init:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccC0yuAe.s:95     .text.CAN_Init:00000000 CAN_Init
C:\Users\Student\AppData\Local\Temp\ccC0yuAe.s:275    .text.CAN_FilterInit:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccC0yuAe.s:280    .text.CAN_FilterInit:00000000 CAN_FilterInit
C:\Users\Student\AppData\Local\Temp\ccC0yuAe.s:444    .text.CAN_FilterInit:000000f0 $d
C:\Users\Student\AppData\Local\Temp\ccC0yuAe.s:450    .text.CAN_StructInit:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccC0yuAe.s:455    .text.CAN_StructInit:00000000 CAN_StructInit
C:\Users\Student\AppData\Local\Temp\ccC0yuAe.s:508    .text.CAN_SlaveStartBank:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccC0yuAe.s:513    .text.CAN_SlaveStartBank:00000000 CAN_SlaveStartBank
C:\Users\Student\AppData\Local\Temp\ccC0yuAe.s:544    .text.CAN_SlaveStartBank:00000038 $d
C:\Users\Student\AppData\Local\Temp\ccC0yuAe.s:549    .text.CAN_DBGFreeze:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccC0yuAe.s:554    .text.CAN_DBGFreeze:00000000 CAN_DBGFreeze
C:\Users\Student\AppData\Local\Temp\ccC0yuAe.s:579    .text.CAN_TTComModeCmd:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccC0yuAe.s:584    .text.CAN_TTComModeCmd:00000000 CAN_TTComModeCmd
C:\Users\Student\AppData\Local\Temp\ccC0yuAe.s:633    .text.CAN_Transmit:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccC0yuAe.s:638    .text.CAN_Transmit:00000000 CAN_Transmit
C:\Users\Student\AppData\Local\Temp\ccC0yuAe.s:782    .text.CAN_TransmitStatus:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccC0yuAe.s:787    .text.CAN_TransmitStatus:00000000 CAN_TransmitStatus
C:\Users\Student\AppData\Local\Temp\ccC0yuAe.s:861    .text.CAN_TransmitStatus:00000044 $d
C:\Users\Student\AppData\Local\Temp\ccC0yuAe.s:868    .text.CAN_CancelTransmit:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccC0yuAe.s:873    .text.CAN_CancelTransmit:00000000 CAN_CancelTransmit
C:\Users\Student\AppData\Local\Temp\ccC0yuAe.s:912    .text.CAN_Receive:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccC0yuAe.s:917    .text.CAN_Receive:00000000 CAN_Receive
C:\Users\Student\AppData\Local\Temp\ccC0yuAe.s:1030   .text.CAN_FIFORelease:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccC0yuAe.s:1035   .text.CAN_FIFORelease:00000000 CAN_FIFORelease
C:\Users\Student\AppData\Local\Temp\ccC0yuAe.s:1060   .text.CAN_MessagePending:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccC0yuAe.s:1065   .text.CAN_MessagePending:00000000 CAN_MessagePending
C:\Users\Student\AppData\Local\Temp\ccC0yuAe.s:1100   .text.CAN_OperatingModeRequest:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccC0yuAe.s:1105   .text.CAN_OperatingModeRequest:00000000 CAN_OperatingModeRequest
C:\Users\Student\AppData\Local\Temp\ccC0yuAe.s:1242   .text.CAN_Sleep:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccC0yuAe.s:1247   .text.CAN_Sleep:00000000 CAN_Sleep
C:\Users\Student\AppData\Local\Temp\ccC0yuAe.s:1274   .text.CAN_WakeUp:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccC0yuAe.s:1279   .text.CAN_WakeUp:00000000 CAN_WakeUp
C:\Users\Student\AppData\Local\Temp\ccC0yuAe.s:1324   .text.CAN_GetLastErrorCode:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccC0yuAe.s:1329   .text.CAN_GetLastErrorCode:00000000 CAN_GetLastErrorCode
C:\Users\Student\AppData\Local\Temp\ccC0yuAe.s:1348   .text.CAN_GetReceiveErrorCounter:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccC0yuAe.s:1353   .text.CAN_GetReceiveErrorCounter:00000000 CAN_GetReceiveErrorCounter
C:\Users\Student\AppData\Local\Temp\ccC0yuAe.s:1372   .text.CAN_GetLSBTransmitErrorCounter:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccC0yuAe.s:1377   .text.CAN_GetLSBTransmitErrorCounter:00000000 CAN_GetLSBTransmitErrorCounter
C:\Users\Student\AppData\Local\Temp\ccC0yuAe.s:1396   .text.CAN_ITConfig:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccC0yuAe.s:1401   .text.CAN_ITConfig:00000000 CAN_ITConfig
C:\Users\Student\AppData\Local\Temp\ccC0yuAe.s:1429   .text.CAN_GetFlagStatus:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccC0yuAe.s:1434   .text.CAN_GetFlagStatus:00000000 CAN_GetFlagStatus
C:\Users\Student\AppData\Local\Temp\ccC0yuAe.s:1508   .text.CAN_ClearFlag:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccC0yuAe.s:1513   .text.CAN_ClearFlag:00000000 CAN_ClearFlag
C:\Users\Student\AppData\Local\Temp\ccC0yuAe.s:1561   .text.CAN_ClearFlag:0000002c $d
C:\Users\Student\AppData\Local\Temp\ccC0yuAe.s:1566   .text.CAN_GetITStatus:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccC0yuAe.s:1571   .text.CAN_GetITStatus:00000000 CAN_GetITStatus
C:\Users\Student\AppData\Local\Temp\ccC0yuAe.s:1837   .text.CAN_ClearITPendingBit:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccC0yuAe.s:1842   .text.CAN_ClearITPendingBit:00000000 CAN_ClearITPendingBit
C:\Users\Student\AppData\Local\Temp\ccC0yuAe.s:1949   .text.CAN_ClearITPendingBit:00000088 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
RCC_APB1PeriphResetCmd
